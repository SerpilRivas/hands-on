2025-08-05 03:09:58,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:09:58,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:09:58,459:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:09:58,460:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:14:58,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:14:58,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:14:58,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:14:58,984:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:18:54,486:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:18:54,486:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:18:54,487:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:18:54,487:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:21:29,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:21:29,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:21:29,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:21:29,846:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:23:06,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:23:06,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:23:06,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:23:06,927:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:23:07,402:INFO:PyCaret ClassificationExperiment
2025-08-05 03:23:07,402:INFO:Logging name: clf-default-name
2025-08-05 03:23:07,402:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 03:23:07,402:INFO:version 3.3.2
2025-08-05 03:23:07,402:INFO:Initializing setup()
2025-08-05 03:23:07,402:INFO:self.USI: 1372
2025-08-05 03:23:07,402:INFO:self._variable_keys: {'memory', 'n_jobs_param', 'pipeline', 'USI', 'html_param', 'y', 'X', 'fold_generator', 'idx', 'y_test', 'X_test', 'logging_param', 'X_train', 'seed', 'y_train', 'is_multiclass', 'exp_id', 'log_plots_param', 'gpu_param', '_ml_usecase', 'exp_name_log', 'data', 'fold_shuffle_param', 'fold_groups_param', 'fix_imbalance', 'target_param', '_available_plots', 'gpu_n_jobs_param'}
2025-08-05 03:23:07,402:INFO:Checking environment
2025-08-05 03:23:07,402:INFO:python_version: 3.11.13
2025-08-05 03:23:07,403:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 03:23:07,403:INFO:machine: aarch64
2025-08-05 03:23:07,403:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:23:07,403:INFO:Memory: svmem(total=17011818496, available=14089691136, percent=17.2, used=2623586304, free=1792294912, active=2561048576, inactive=11217252352, buffers=541614080, cached=12054323200, shared=34934784, slab=1125969920)
2025-08-05 03:23:07,404:INFO:Physical Core: 16
2025-08-05 03:23:07,404:INFO:Logical Core: 16
2025-08-05 03:23:07,404:INFO:Checking libraries
2025-08-05 03:23:07,404:INFO:System:
2025-08-05 03:23:07,404:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 03:23:07,404:INFO:executable: /usr/local/bin/python
2025-08-05 03:23:07,404:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:23:07,404:INFO:PyCaret required dependencies:
2025-08-05 03:23:07,668:INFO:                 pip: 24.0
2025-08-05 03:23:07,668:INFO:          setuptools: 80.9.0
2025-08-05 03:23:07,668:INFO:             pycaret: 3.3.2
2025-08-05 03:23:07,668:INFO:             IPython: 9.4.0
2025-08-05 03:23:07,668:INFO:          ipywidgets: 8.1.7
2025-08-05 03:23:07,668:INFO:                tqdm: 4.67.1
2025-08-05 03:23:07,668:INFO:               numpy: 1.26.4
2025-08-05 03:23:07,668:INFO:              pandas: 2.1.4
2025-08-05 03:23:07,668:INFO:              jinja2: 3.1.6
2025-08-05 03:23:07,668:INFO:               scipy: 1.11.4
2025-08-05 03:23:07,669:INFO:              joblib: 1.3.2
2025-08-05 03:23:07,669:INFO:             sklearn: 1.4.2
2025-08-05 03:23:07,669:INFO:                pyod: 2.0.5
2025-08-05 03:23:07,669:INFO:            imblearn: 0.13.0
2025-08-05 03:23:07,669:INFO:   category_encoders: 2.7.0
2025-08-05 03:23:07,669:INFO:            lightgbm: 4.6.0
2025-08-05 03:23:07,669:INFO:               numba: 0.61.0
2025-08-05 03:23:07,669:INFO:            requests: 2.32.4
2025-08-05 03:23:07,669:INFO:          matplotlib: 3.7.5
2025-08-05 03:23:07,669:INFO:          scikitplot: 0.3.7
2025-08-05 03:23:07,669:INFO:         yellowbrick: 1.5
2025-08-05 03:23:07,669:INFO:              plotly: 5.24.1
2025-08-05 03:23:07,669:INFO:    plotly-resampler: Not installed
2025-08-05 03:23:07,669:INFO:             kaleido: 1.0.0
2025-08-05 03:23:07,669:INFO:           schemdraw: 0.15
2025-08-05 03:23:07,669:INFO:         statsmodels: 0.14.5
2025-08-05 03:23:07,669:INFO:              sktime: 0.26.0
2025-08-05 03:23:07,669:INFO:               tbats: 1.1.3
2025-08-05 03:23:07,670:INFO:            pmdarima: 2.0.4
2025-08-05 03:23:07,670:INFO:              psutil: 7.0.0
2025-08-05 03:23:07,670:INFO:          markupsafe: 3.0.2
2025-08-05 03:23:07,670:INFO:             pickle5: Not installed
2025-08-05 03:23:07,670:INFO:         cloudpickle: 3.1.1
2025-08-05 03:23:07,670:INFO:         deprecation: 2.1.0
2025-08-05 03:23:07,670:INFO:              xxhash: 3.5.0
2025-08-05 03:23:07,670:INFO:           wurlitzer: 3.1.1
2025-08-05 03:23:07,670:INFO:PyCaret optional dependencies:
2025-08-05 03:23:08,686:INFO:                shap: 0.44.1
2025-08-05 03:23:08,687:INFO:           interpret: 0.7.1
2025-08-05 03:23:08,687:INFO:                umap: 0.5.7
2025-08-05 03:23:08,687:INFO:     ydata_profiling: 4.16.1
2025-08-05 03:23:08,687:INFO:  explainerdashboard: 0.5.1
2025-08-05 03:23:08,687:INFO:             autoviz: Not installed
2025-08-05 03:23:08,687:INFO:           fairlearn: 0.7.0
2025-08-05 03:23:08,687:INFO:          deepchecks: Not installed
2025-08-05 03:23:08,687:INFO:             xgboost: 3.0.3
2025-08-05 03:23:08,687:INFO:            catboost: 1.2.8
2025-08-05 03:23:08,687:INFO:              kmodes: 0.12.2
2025-08-05 03:23:08,687:INFO:             mlxtend: 0.23.4
2025-08-05 03:23:08,687:INFO:       statsforecast: 1.5.0
2025-08-05 03:23:08,687:INFO:        tune_sklearn: Not installed
2025-08-05 03:23:08,687:INFO:                 ray: Not installed
2025-08-05 03:23:08,687:INFO:            hyperopt: 0.2.7
2025-08-05 03:23:08,688:INFO:              optuna: 4.4.0
2025-08-05 03:23:08,688:INFO:               skopt: 0.10.2
2025-08-05 03:23:08,688:INFO:              mlflow: 3.1.4
2025-08-05 03:23:08,688:INFO:              gradio: 5.40.0
2025-08-05 03:23:08,688:INFO:             fastapi: 0.116.1
2025-08-05 03:23:08,688:INFO:             uvicorn: 0.35.0
2025-08-05 03:23:08,688:INFO:              m2cgen: 0.10.0
2025-08-05 03:23:08,688:INFO:           evidently: 0.4.40
2025-08-05 03:23:08,688:INFO:               fugue: 0.8.7
2025-08-05 03:23:08,688:INFO:           streamlit: 1.47.1
2025-08-05 03:23:08,688:INFO:             prophet: Not installed
2025-08-05 03:23:08,688:INFO:None
2025-08-05 03:23:08,688:INFO:Set up data.
2025-08-05 03:23:08,691:INFO:Set up folding strategy.
2025-08-05 03:23:08,691:INFO:Set up train/test split.
2025-08-05 03:23:08,693:INFO:Set up index.
2025-08-05 03:23:08,693:INFO:Assigning column types.
2025-08-05 03:23:08,694:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 03:23:08,709:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,721:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,722:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,756:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,757:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,757:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 03:23:08,772:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,781:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,782:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,798:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:23:08,808:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,809:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,809:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 03:23:08,832:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,833:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,858:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,859:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,860:INFO:Preparing preprocessing pipeline...
2025-08-05 03:23:08,862:INFO:Set up simple imputation.
2025-08-05 03:23:08,868:INFO:Finished creating preprocessing pipeline.
2025-08-05 03:23:08,870:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 03:23:08,870:INFO:Creating final display dataframe.
2025-08-05 03:23:08,892:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              1372
2025-08-05 03:23:08,918:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,919:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,943:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:23:08,944:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:23:08,944:INFO:setup() successfully completed in 1.54s...............
2025-08-05 03:23:08,945:INFO:Initializing compare_models()
2025-08-05 03:23:08,945:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, include=['lr', 'knn', 'rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, 'include': ['lr', 'knn', 'rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 03:23:08,945:INFO:Checking exceptions
2025-08-05 03:23:08,946:INFO:Preparing display monitor
2025-08-05 03:23:08,947:INFO:Initializing Logistic Regression
2025-08-05 03:23:08,947:INFO:Total runtime is 1.3828277587890625e-06 minutes
2025-08-05 03:23:08,948:INFO:SubProcess create_model() called ==================================
2025-08-05 03:23:08,948:INFO:Initializing create_model()
2025-08-05 03:23:08,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff27279d10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:08,948:INFO:Checking exceptions
2025-08-05 03:23:08,948:INFO:Importing libraries
2025-08-05 03:23:08,948:INFO:Copying training dataset
2025-08-05 03:23:08,949:INFO:Defining folds
2025-08-05 03:23:08,949:INFO:Declaring metric variables
2025-08-05 03:23:08,950:INFO:Importing untrained model
2025-08-05 03:23:08,950:INFO:Logistic Regression Imported successfully
2025-08-05 03:23:08,950:INFO:Starting cross validation
2025-08-05 03:23:08,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:23:10,057:INFO:Calculating mean and std
2025-08-05 03:23:10,057:INFO:Creating metrics dataframe
2025-08-05 03:23:10,058:INFO:Uploading results into container
2025-08-05 03:23:10,059:INFO:Uploading model into container now
2025-08-05 03:23:10,060:INFO:_master_model_container: 1
2025-08-05 03:23:10,060:INFO:_display_container: 2
2025-08-05 03:23:10,060:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:23:10,060:INFO:create_model() successfully completed......................................
2025-08-05 03:23:10,154:INFO:SubProcess create_model() end ==================================
2025-08-05 03:23:10,155:INFO:Creating metrics dataframe
2025-08-05 03:23:10,156:INFO:Initializing K Neighbors Classifier
2025-08-05 03:23:10,156:INFO:Total runtime is 0.02014137109120687 minutes
2025-08-05 03:23:10,156:INFO:SubProcess create_model() called ==================================
2025-08-05 03:23:10,156:INFO:Initializing create_model()
2025-08-05 03:23:10,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff27279d10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:10,156:INFO:Checking exceptions
2025-08-05 03:23:10,156:INFO:Importing libraries
2025-08-05 03:23:10,156:INFO:Copying training dataset
2025-08-05 03:23:10,158:INFO:Defining folds
2025-08-05 03:23:10,158:INFO:Declaring metric variables
2025-08-05 03:23:10,158:INFO:Importing untrained model
2025-08-05 03:23:10,158:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:23:10,159:INFO:Starting cross validation
2025-08-05 03:23:10,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:23:11,068:INFO:Calculating mean and std
2025-08-05 03:23:11,068:INFO:Creating metrics dataframe
2025-08-05 03:23:11,069:INFO:Uploading results into container
2025-08-05 03:23:11,069:INFO:Uploading model into container now
2025-08-05 03:23:11,070:INFO:_master_model_container: 2
2025-08-05 03:23:11,070:INFO:_display_container: 2
2025-08-05 03:23:11,070:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:23:11,070:INFO:create_model() successfully completed......................................
2025-08-05 03:23:11,158:INFO:SubProcess create_model() end ==================================
2025-08-05 03:23:11,158:INFO:Creating metrics dataframe
2025-08-05 03:23:11,159:INFO:Initializing Random Forest Classifier
2025-08-05 03:23:11,159:INFO:Total runtime is 0.03686873515446981 minutes
2025-08-05 03:23:11,160:INFO:SubProcess create_model() called ==================================
2025-08-05 03:23:11,160:INFO:Initializing create_model()
2025-08-05 03:23:11,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff27279d10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:11,160:INFO:Checking exceptions
2025-08-05 03:23:11,160:INFO:Importing libraries
2025-08-05 03:23:11,160:INFO:Copying training dataset
2025-08-05 03:23:11,161:INFO:Defining folds
2025-08-05 03:23:11,161:INFO:Declaring metric variables
2025-08-05 03:23:11,162:INFO:Importing untrained model
2025-08-05 03:23:11,162:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:23:11,162:INFO:Starting cross validation
2025-08-05 03:23:11,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:23:11,330:INFO:Calculating mean and std
2025-08-05 03:23:11,331:INFO:Creating metrics dataframe
2025-08-05 03:23:11,332:INFO:Uploading results into container
2025-08-05 03:23:11,332:INFO:Uploading model into container now
2025-08-05 03:23:11,332:INFO:_master_model_container: 3
2025-08-05 03:23:11,332:INFO:_display_container: 2
2025-08-05 03:23:11,332:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:23:11,332:INFO:create_model() successfully completed......................................
2025-08-05 03:23:11,409:INFO:SubProcess create_model() end ==================================
2025-08-05 03:23:11,410:INFO:Creating metrics dataframe
2025-08-05 03:23:11,411:INFO:Initializing Extra Trees Classifier
2025-08-05 03:23:11,411:INFO:Total runtime is 0.04105931917826335 minutes
2025-08-05 03:23:11,411:INFO:SubProcess create_model() called ==================================
2025-08-05 03:23:11,411:INFO:Initializing create_model()
2025-08-05 03:23:11,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff27279d10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:11,411:INFO:Checking exceptions
2025-08-05 03:23:11,411:INFO:Importing libraries
2025-08-05 03:23:11,411:INFO:Copying training dataset
2025-08-05 03:23:11,413:INFO:Defining folds
2025-08-05 03:23:11,413:INFO:Declaring metric variables
2025-08-05 03:23:11,413:INFO:Importing untrained model
2025-08-05 03:23:11,413:INFO:Extra Trees Classifier Imported successfully
2025-08-05 03:23:11,413:INFO:Starting cross validation
2025-08-05 03:23:11,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:23:11,549:INFO:Calculating mean and std
2025-08-05 03:23:11,549:INFO:Creating metrics dataframe
2025-08-05 03:23:11,550:INFO:Uploading results into container
2025-08-05 03:23:11,550:INFO:Uploading model into container now
2025-08-05 03:23:11,550:INFO:_master_model_container: 4
2025-08-05 03:23:11,550:INFO:_display_container: 2
2025-08-05 03:23:11,551:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 03:23:11,551:INFO:create_model() successfully completed......................................
2025-08-05 03:23:11,623:INFO:SubProcess create_model() end ==================================
2025-08-05 03:23:11,623:INFO:Creating metrics dataframe
2025-08-05 03:23:11,624:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 03:23:11,624:INFO:Total runtime is 0.044613822301228845 minutes
2025-08-05 03:23:11,624:INFO:SubProcess create_model() called ==================================
2025-08-05 03:23:11,624:INFO:Initializing create_model()
2025-08-05 03:23:11,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff27279d10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:11,625:INFO:Checking exceptions
2025-08-05 03:23:11,625:INFO:Importing libraries
2025-08-05 03:23:11,625:INFO:Copying training dataset
2025-08-05 03:23:11,626:INFO:Defining folds
2025-08-05 03:23:11,626:INFO:Declaring metric variables
2025-08-05 03:23:11,626:INFO:Importing untrained model
2025-08-05 03:23:11,626:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 03:23:11,626:INFO:Starting cross validation
2025-08-05 03:23:11,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:23:24,885:INFO:Calculating mean and std
2025-08-05 03:23:24,886:INFO:Creating metrics dataframe
2025-08-05 03:23:24,887:INFO:Uploading results into container
2025-08-05 03:23:24,887:INFO:Uploading model into container now
2025-08-05 03:23:24,887:INFO:_master_model_container: 5
2025-08-05 03:23:24,887:INFO:_display_container: 2
2025-08-05 03:23:24,888:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 03:23:24,888:INFO:create_model() successfully completed......................................
2025-08-05 03:23:24,962:INFO:SubProcess create_model() end ==================================
2025-08-05 03:23:24,963:INFO:Creating metrics dataframe
2025-08-05 03:23:24,964:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 03:23:24,965:INFO:Initializing create_model()
2025-08-05 03:23:24,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:24,965:INFO:Checking exceptions
2025-08-05 03:23:24,965:INFO:Importing libraries
2025-08-05 03:23:24,965:INFO:Copying training dataset
2025-08-05 03:23:24,966:INFO:Defining folds
2025-08-05 03:23:24,967:INFO:Declaring metric variables
2025-08-05 03:23:24,967:INFO:Importing untrained model
2025-08-05 03:23:24,967:INFO:Declaring custom model
2025-08-05 03:23:24,967:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:23:24,967:INFO:Cross validation set to False
2025-08-05 03:23:24,967:INFO:Fitting Model
2025-08-05 03:23:25,064:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:23:25,064:INFO:create_model() successfully completed......................................
2025-08-05 03:23:25,140:INFO:_master_model_container: 5
2025-08-05 03:23:25,140:INFO:_display_container: 2
2025-08-05 03:23:25,140:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:23:25,140:INFO:compare_models() successfully completed......................................
2025-08-05 03:23:25,141:INFO:Initializing finalize_model()
2025-08-05 03:23:25,141:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 03:23:25,141:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:23:25,142:INFO:Initializing create_model()
2025-08-05 03:23:25,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4c504090>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:23:25,142:INFO:Checking exceptions
2025-08-05 03:23:25,143:INFO:Importing libraries
2025-08-05 03:23:25,143:INFO:Copying training dataset
2025-08-05 03:23:25,143:INFO:Defining folds
2025-08-05 03:23:25,143:INFO:Declaring metric variables
2025-08-05 03:23:25,143:INFO:Importing untrained model
2025-08-05 03:23:25,143:INFO:Declaring custom model
2025-08-05 03:23:25,143:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:23:25,144:INFO:Cross validation set to False
2025-08-05 03:23:25,144:INFO:Fitting Model
2025-08-05 03:23:25,230:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:23:25,230:INFO:create_model() successfully completed......................................
2025-08-05 03:23:25,316:INFO:_master_model_container: 5
2025-08-05 03:23:25,316:INFO:_display_container: 2
2025-08-05 03:23:25,318:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:23:25,318:INFO:finalize_model() successfully completed......................................
2025-08-05 03:23:25,392:INFO:Initializing save_model()
2025-08-05 03:23:25,392:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 03:23:25,392:INFO:Adding model into prep_pipe
2025-08-05 03:23:25,392:WARNING:Only Model saved as it was a pipeline.
2025-08-05 03:23:25,418:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 03:23:25,419:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:23:25,420:INFO:save_model() successfully completed......................................
2025-08-05 03:24:42,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:24:42,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:24:42,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:24:42,504:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:24:43,284:INFO:Initializing load_model()
2025-08-05 03:24:43,284:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 03:24:55,868:INFO:Initializing predict_model()
2025-08-05 03:24:55,869:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff375db150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff3de6f600>)
2025-08-05 03:24:55,869:INFO:Checking exceptions
2025-08-05 03:24:55,869:INFO:Preloading libraries
2025-08-05 03:24:55,870:INFO:Set up data.
2025-08-05 03:24:55,871:INFO:Set up index.
2025-08-05 03:27:20,958:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:20,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:20,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:20,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:21,466:INFO:PyCaret ClassificationExperiment
2025-08-05 03:27:21,466:INFO:Logging name: clf-default-name
2025-08-05 03:27:21,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 03:27:21,466:INFO:version 3.3.2
2025-08-05 03:27:21,466:INFO:Initializing setup()
2025-08-05 03:27:21,466:INFO:self.USI: 8bf9
2025-08-05 03:27:21,466:INFO:self._variable_keys: {'seed', 'X', 'USI', 'y_test', 'is_multiclass', 'n_jobs_param', 'y_train', 'gpu_n_jobs_param', 'logging_param', 'fold_groups_param', 'data', 'idx', 'fix_imbalance', 'memory', '_ml_usecase', 'gpu_param', 'exp_name_log', 'X_test', 'target_param', 'fold_shuffle_param', 'y', 'exp_id', 'pipeline', 'html_param', 'X_train', '_available_plots', 'log_plots_param', 'fold_generator'}
2025-08-05 03:27:21,466:INFO:Checking environment
2025-08-05 03:27:21,467:INFO:python_version: 3.11.13
2025-08-05 03:27:21,467:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 03:27:21,467:INFO:machine: aarch64
2025-08-05 03:27:21,467:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:27:21,467:INFO:Memory: svmem(total=17011818496, available=15851573248, percent=6.8, used=889044992, free=5039996928, active=1205886976, inactive=9468694528, buffers=529440768, cached=10553335808, shared=7114752, slab=1075937280)
2025-08-05 03:27:21,468:INFO:Physical Core: 16
2025-08-05 03:27:21,468:INFO:Logical Core: 16
2025-08-05 03:27:21,468:INFO:Checking libraries
2025-08-05 03:27:21,468:INFO:System:
2025-08-05 03:27:21,468:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 03:27:21,468:INFO:executable: /usr/local/bin/python
2025-08-05 03:27:21,468:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:27:21,468:INFO:PyCaret required dependencies:
2025-08-05 03:27:21,725:INFO:                 pip: 24.0
2025-08-05 03:27:21,725:INFO:          setuptools: 80.9.0
2025-08-05 03:27:21,725:INFO:             pycaret: 3.3.2
2025-08-05 03:27:21,725:INFO:             IPython: 9.4.0
2025-08-05 03:27:21,725:INFO:          ipywidgets: 8.1.7
2025-08-05 03:27:21,725:INFO:                tqdm: 4.67.1
2025-08-05 03:27:21,725:INFO:               numpy: 1.26.4
2025-08-05 03:27:21,726:INFO:              pandas: 2.1.4
2025-08-05 03:27:21,726:INFO:              jinja2: 3.1.6
2025-08-05 03:27:21,726:INFO:               scipy: 1.11.4
2025-08-05 03:27:21,726:INFO:              joblib: 1.3.2
2025-08-05 03:27:21,726:INFO:             sklearn: 1.4.2
2025-08-05 03:27:21,726:INFO:                pyod: 2.0.5
2025-08-05 03:27:21,726:INFO:            imblearn: 0.13.0
2025-08-05 03:27:21,726:INFO:   category_encoders: 2.7.0
2025-08-05 03:27:21,726:INFO:            lightgbm: 4.6.0
2025-08-05 03:27:21,726:INFO:               numba: 0.61.0
2025-08-05 03:27:21,726:INFO:            requests: 2.32.4
2025-08-05 03:27:21,726:INFO:          matplotlib: 3.7.5
2025-08-05 03:27:21,726:INFO:          scikitplot: 0.3.7
2025-08-05 03:27:21,726:INFO:         yellowbrick: 1.5
2025-08-05 03:27:21,726:INFO:              plotly: 5.24.1
2025-08-05 03:27:21,726:INFO:    plotly-resampler: Not installed
2025-08-05 03:27:21,726:INFO:             kaleido: 1.0.0
2025-08-05 03:27:21,727:INFO:           schemdraw: 0.15
2025-08-05 03:27:21,727:INFO:         statsmodels: 0.14.5
2025-08-05 03:27:21,727:INFO:              sktime: 0.26.0
2025-08-05 03:27:21,727:INFO:               tbats: 1.1.3
2025-08-05 03:27:21,727:INFO:            pmdarima: 2.0.4
2025-08-05 03:27:21,727:INFO:              psutil: 7.0.0
2025-08-05 03:27:21,727:INFO:          markupsafe: 3.0.2
2025-08-05 03:27:21,727:INFO:             pickle5: Not installed
2025-08-05 03:27:21,727:INFO:         cloudpickle: 3.1.1
2025-08-05 03:27:21,727:INFO:         deprecation: 2.1.0
2025-08-05 03:27:21,727:INFO:              xxhash: 3.5.0
2025-08-05 03:27:21,727:INFO:           wurlitzer: 3.1.1
2025-08-05 03:27:21,727:INFO:PyCaret optional dependencies:
2025-08-05 03:27:22,750:INFO:                shap: 0.44.1
2025-08-05 03:27:22,751:INFO:           interpret: 0.7.1
2025-08-05 03:27:22,751:INFO:                umap: 0.5.7
2025-08-05 03:27:22,751:INFO:     ydata_profiling: 4.16.1
2025-08-05 03:27:22,751:INFO:  explainerdashboard: 0.5.1
2025-08-05 03:27:22,751:INFO:             autoviz: Not installed
2025-08-05 03:27:22,751:INFO:           fairlearn: 0.7.0
2025-08-05 03:27:22,751:INFO:          deepchecks: Not installed
2025-08-05 03:27:22,751:INFO:             xgboost: 3.0.3
2025-08-05 03:27:22,751:INFO:            catboost: 1.2.8
2025-08-05 03:27:22,751:INFO:              kmodes: 0.12.2
2025-08-05 03:27:22,751:INFO:             mlxtend: 0.23.4
2025-08-05 03:27:22,751:INFO:       statsforecast: 1.5.0
2025-08-05 03:27:22,751:INFO:        tune_sklearn: Not installed
2025-08-05 03:27:22,751:INFO:                 ray: Not installed
2025-08-05 03:27:22,751:INFO:            hyperopt: 0.2.7
2025-08-05 03:27:22,751:INFO:              optuna: 4.4.0
2025-08-05 03:27:22,751:INFO:               skopt: 0.10.2
2025-08-05 03:27:22,751:INFO:              mlflow: 3.1.4
2025-08-05 03:27:22,751:INFO:              gradio: 5.40.0
2025-08-05 03:27:22,751:INFO:             fastapi: 0.116.1
2025-08-05 03:27:22,751:INFO:             uvicorn: 0.35.0
2025-08-05 03:27:22,751:INFO:              m2cgen: 0.10.0
2025-08-05 03:27:22,751:INFO:           evidently: 0.4.40
2025-08-05 03:27:22,751:INFO:               fugue: 0.8.7
2025-08-05 03:27:22,751:INFO:           streamlit: 1.47.1
2025-08-05 03:27:22,751:INFO:             prophet: Not installed
2025-08-05 03:27:22,751:INFO:None
2025-08-05 03:27:22,751:INFO:Set up data.
2025-08-05 03:27:22,755:INFO:Set up folding strategy.
2025-08-05 03:27:22,755:INFO:Set up train/test split.
2025-08-05 03:27:22,756:INFO:Set up index.
2025-08-05 03:27:22,757:INFO:Assigning column types.
2025-08-05 03:27:22,758:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 03:27:22,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,775:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,786:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,787:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,818:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,819:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,820:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 03:27:22,835:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,845:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,846:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,863:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:27:22,872:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,873:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,873:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 03:27:22,897:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,898:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,922:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,923:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:22,924:INFO:Preparing preprocessing pipeline...
2025-08-05 03:27:22,925:INFO:Set up simple imputation.
2025-08-05 03:27:22,931:INFO:Finished creating preprocessing pipeline.
2025-08-05 03:27:22,932:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 03:27:22,932:INFO:Creating final display dataframe.
2025-08-05 03:27:22,951:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              8bf9
2025-08-05 03:27:22,976:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:22,977:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:23,001:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:27:23,002:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:27:23,002:INFO:setup() successfully completed in 1.54s...............
2025-08-05 03:27:23,002:INFO:Initializing compare_models()
2025-08-05 03:27:23,003:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, include=['lr', 'knn', 'rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, 'include': ['lr', 'knn', 'rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 03:27:23,003:INFO:Checking exceptions
2025-08-05 03:27:23,004:INFO:Preparing display monitor
2025-08-05 03:27:23,005:INFO:Initializing Logistic Regression
2025-08-05 03:27:23,005:INFO:Total runtime is 1.152356465657552e-06 minutes
2025-08-05 03:27:23,005:INFO:SubProcess create_model() called ==================================
2025-08-05 03:27:23,005:INFO:Initializing create_model()
2025-08-05 03:27:23,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1765a910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:23,005:INFO:Checking exceptions
2025-08-05 03:27:23,005:INFO:Importing libraries
2025-08-05 03:27:23,005:INFO:Copying training dataset
2025-08-05 03:27:23,006:INFO:Defining folds
2025-08-05 03:27:23,007:INFO:Declaring metric variables
2025-08-05 03:27:23,007:INFO:Importing untrained model
2025-08-05 03:27:23,007:INFO:Logistic Regression Imported successfully
2025-08-05 03:27:23,007:INFO:Starting cross validation
2025-08-05 03:27:23,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:27:24,058:INFO:Calculating mean and std
2025-08-05 03:27:24,059:INFO:Creating metrics dataframe
2025-08-05 03:27:24,061:INFO:Uploading results into container
2025-08-05 03:27:24,061:INFO:Uploading model into container now
2025-08-05 03:27:24,062:INFO:_master_model_container: 1
2025-08-05 03:27:24,062:INFO:_display_container: 2
2025-08-05 03:27:24,062:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:27:24,062:INFO:create_model() successfully completed......................................
2025-08-05 03:27:24,165:INFO:SubProcess create_model() end ==================================
2025-08-05 03:27:24,165:INFO:Creating metrics dataframe
2025-08-05 03:27:24,166:INFO:Initializing K Neighbors Classifier
2025-08-05 03:27:24,166:INFO:Total runtime is 0.019356656074523925 minutes
2025-08-05 03:27:24,166:INFO:SubProcess create_model() called ==================================
2025-08-05 03:27:24,166:INFO:Initializing create_model()
2025-08-05 03:27:24,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1765a910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:24,167:INFO:Checking exceptions
2025-08-05 03:27:24,167:INFO:Importing libraries
2025-08-05 03:27:24,167:INFO:Copying training dataset
2025-08-05 03:27:24,168:INFO:Defining folds
2025-08-05 03:27:24,168:INFO:Declaring metric variables
2025-08-05 03:27:24,169:INFO:Importing untrained model
2025-08-05 03:27:24,169:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:27:24,169:INFO:Starting cross validation
2025-08-05 03:27:24,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:27:25,051:INFO:Calculating mean and std
2025-08-05 03:27:25,051:INFO:Creating metrics dataframe
2025-08-05 03:27:25,052:INFO:Uploading results into container
2025-08-05 03:27:25,053:INFO:Uploading model into container now
2025-08-05 03:27:25,053:INFO:_master_model_container: 2
2025-08-05 03:27:25,053:INFO:_display_container: 2
2025-08-05 03:27:25,053:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:27:25,053:INFO:create_model() successfully completed......................................
2025-08-05 03:27:25,140:INFO:SubProcess create_model() end ==================================
2025-08-05 03:27:25,140:INFO:Creating metrics dataframe
2025-08-05 03:27:25,142:INFO:Initializing Random Forest Classifier
2025-08-05 03:27:25,142:INFO:Total runtime is 0.0356242577234904 minutes
2025-08-05 03:27:25,142:INFO:SubProcess create_model() called ==================================
2025-08-05 03:27:25,142:INFO:Initializing create_model()
2025-08-05 03:27:25,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1765a910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:25,143:INFO:Checking exceptions
2025-08-05 03:27:25,143:INFO:Importing libraries
2025-08-05 03:27:25,143:INFO:Copying training dataset
2025-08-05 03:27:25,144:INFO:Defining folds
2025-08-05 03:27:25,144:INFO:Declaring metric variables
2025-08-05 03:27:25,144:INFO:Importing untrained model
2025-08-05 03:27:25,144:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:27:25,144:INFO:Starting cross validation
2025-08-05 03:27:25,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:27:25,326:INFO:Calculating mean and std
2025-08-05 03:27:25,326:INFO:Creating metrics dataframe
2025-08-05 03:27:25,327:INFO:Uploading results into container
2025-08-05 03:27:25,327:INFO:Uploading model into container now
2025-08-05 03:27:25,328:INFO:_master_model_container: 3
2025-08-05 03:27:25,328:INFO:_display_container: 2
2025-08-05 03:27:25,328:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:27:25,328:INFO:create_model() successfully completed......................................
2025-08-05 03:27:25,396:INFO:SubProcess create_model() end ==================================
2025-08-05 03:27:25,396:INFO:Creating metrics dataframe
2025-08-05 03:27:25,397:INFO:Initializing Extra Trees Classifier
2025-08-05 03:27:25,397:INFO:Total runtime is 0.039877291520436606 minutes
2025-08-05 03:27:25,398:INFO:SubProcess create_model() called ==================================
2025-08-05 03:27:25,398:INFO:Initializing create_model()
2025-08-05 03:27:25,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1765a910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:25,398:INFO:Checking exceptions
2025-08-05 03:27:25,398:INFO:Importing libraries
2025-08-05 03:27:25,398:INFO:Copying training dataset
2025-08-05 03:27:25,399:INFO:Defining folds
2025-08-05 03:27:25,399:INFO:Declaring metric variables
2025-08-05 03:27:25,399:INFO:Importing untrained model
2025-08-05 03:27:25,400:INFO:Extra Trees Classifier Imported successfully
2025-08-05 03:27:25,400:INFO:Starting cross validation
2025-08-05 03:27:25,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:27:25,548:INFO:Calculating mean and std
2025-08-05 03:27:25,548:INFO:Creating metrics dataframe
2025-08-05 03:27:25,549:INFO:Uploading results into container
2025-08-05 03:27:25,549:INFO:Uploading model into container now
2025-08-05 03:27:25,550:INFO:_master_model_container: 4
2025-08-05 03:27:25,550:INFO:_display_container: 2
2025-08-05 03:27:25,550:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 03:27:25,550:INFO:create_model() successfully completed......................................
2025-08-05 03:27:25,621:INFO:SubProcess create_model() end ==================================
2025-08-05 03:27:25,621:INFO:Creating metrics dataframe
2025-08-05 03:27:25,622:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 03:27:25,622:INFO:Total runtime is 0.043624055385589604 minutes
2025-08-05 03:27:25,622:INFO:SubProcess create_model() called ==================================
2025-08-05 03:27:25,622:INFO:Initializing create_model()
2025-08-05 03:27:25,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1765a910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:25,623:INFO:Checking exceptions
2025-08-05 03:27:25,623:INFO:Importing libraries
2025-08-05 03:27:25,623:INFO:Copying training dataset
2025-08-05 03:27:25,624:INFO:Defining folds
2025-08-05 03:27:25,624:INFO:Declaring metric variables
2025-08-05 03:27:25,624:INFO:Importing untrained model
2025-08-05 03:27:25,625:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 03:27:25,625:INFO:Starting cross validation
2025-08-05 03:27:25,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:27:38,590:INFO:Calculating mean and std
2025-08-05 03:27:38,591:INFO:Creating metrics dataframe
2025-08-05 03:27:38,591:INFO:Uploading results into container
2025-08-05 03:27:38,592:INFO:Uploading model into container now
2025-08-05 03:27:38,592:INFO:_master_model_container: 5
2025-08-05 03:27:38,592:INFO:_display_container: 2
2025-08-05 03:27:38,592:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 03:27:38,593:INFO:create_model() successfully completed......................................
2025-08-05 03:27:38,663:INFO:SubProcess create_model() end ==================================
2025-08-05 03:27:38,664:INFO:Creating metrics dataframe
2025-08-05 03:27:38,665:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 03:27:38,666:INFO:Initializing create_model()
2025-08-05 03:27:38,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:38,666:INFO:Checking exceptions
2025-08-05 03:27:38,666:INFO:Importing libraries
2025-08-05 03:27:38,666:INFO:Copying training dataset
2025-08-05 03:27:38,668:INFO:Defining folds
2025-08-05 03:27:38,668:INFO:Declaring metric variables
2025-08-05 03:27:38,668:INFO:Importing untrained model
2025-08-05 03:27:38,668:INFO:Declaring custom model
2025-08-05 03:27:38,668:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:27:38,668:INFO:Cross validation set to False
2025-08-05 03:27:38,668:INFO:Fitting Model
2025-08-05 03:27:38,672:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:27:38,672:INFO:create_model() successfully completed......................................
2025-08-05 03:27:38,737:INFO:_master_model_container: 5
2025-08-05 03:27:38,737:INFO:_display_container: 2
2025-08-05 03:27:38,738:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:27:38,738:INFO:compare_models() successfully completed......................................
2025-08-05 03:27:38,738:INFO:Initializing finalize_model()
2025-08-05 03:27:38,738:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 03:27:38,738:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:27:38,739:INFO:Initializing create_model()
2025-08-05 03:27:38,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff743fb350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:27:38,739:INFO:Checking exceptions
2025-08-05 03:27:38,740:INFO:Importing libraries
2025-08-05 03:27:38,740:INFO:Copying training dataset
2025-08-05 03:27:38,740:INFO:Defining folds
2025-08-05 03:27:38,740:INFO:Declaring metric variables
2025-08-05 03:27:38,740:INFO:Importing untrained model
2025-08-05 03:27:38,740:INFO:Declaring custom model
2025-08-05 03:27:38,740:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:27:38,741:INFO:Cross validation set to False
2025-08-05 03:27:38,741:INFO:Fitting Model
2025-08-05 03:27:38,744:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-05 03:27:38,745:INFO:create_model() successfully completed......................................
2025-08-05 03:27:38,805:INFO:_master_model_container: 5
2025-08-05 03:27:38,805:INFO:_display_container: 2
2025-08-05 03:27:38,806:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-05 03:27:38,806:INFO:finalize_model() successfully completed......................................
2025-08-05 03:27:38,867:INFO:Initializing save_model()
2025-08-05 03:27:38,867:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 03:27:38,867:INFO:Adding model into prep_pipe
2025-08-05 03:27:38,867:WARNING:Only Model saved as it was a pipeline.
2025-08-05 03:27:38,870:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 03:27:38,871:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-05 03:27:38,871:INFO:save_model() successfully completed......................................
2025-08-05 03:27:48,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:48,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:48,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:48,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:27:48,820:INFO:Initializing load_model()
2025-08-05 03:27:48,821:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 03:29:39,713:INFO:Initializing predict_model()
2025-08-05 03:29:39,713:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff288edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9f4f2840>)
2025-08-05 03:29:39,713:INFO:Checking exceptions
2025-08-05 03:29:39,714:INFO:Preloading libraries
2025-08-05 03:29:39,714:INFO:Set up data.
2025-08-05 03:29:39,715:INFO:Set up index.
2025-08-05 03:29:53,779:INFO:Initializing predict_model()
2025-08-05 03:29:53,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff288c45d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff287e2840>)
2025-08-05 03:29:53,779:INFO:Checking exceptions
2025-08-05 03:29:53,780:INFO:Preloading libraries
2025-08-05 03:29:53,780:INFO:Set up data.
2025-08-05 03:29:53,781:INFO:Set up index.
2025-08-05 03:30:07,544:INFO:Initializing predict_model()
2025-08-05 03:30:07,544:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff288ed610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff3a6bee80>)
2025-08-05 03:30:07,545:INFO:Checking exceptions
2025-08-05 03:30:07,545:INFO:Preloading libraries
2025-08-05 03:30:07,545:INFO:Set up data.
2025-08-05 03:30:07,547:INFO:Set up index.
2025-08-05 03:30:12,646:INFO:Initializing predict_model()
2025-08-05 03:30:12,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff288c7950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', KNeighborsClassifier(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff287e19e0>)
2025-08-05 03:30:12,646:INFO:Checking exceptions
2025-08-05 03:30:12,646:INFO:Preloading libraries
2025-08-05 03:30:12,647:INFO:Set up data.
2025-08-05 03:30:12,648:INFO:Set up index.
2025-08-05 03:36:53,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:36:53,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:36:53,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:36:53,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:36:53,779:INFO:PyCaret ClassificationExperiment
2025-08-05 03:36:53,779:INFO:Logging name: clf-default-name
2025-08-05 03:36:53,779:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 03:36:53,779:INFO:version 3.3.2
2025-08-05 03:36:53,779:INFO:Initializing setup()
2025-08-05 03:36:53,779:INFO:self.USI: 5db2
2025-08-05 03:36:53,779:INFO:self._variable_keys: {'y_train', 'USI', 'idx', 'html_param', 'logging_param', 'fold_generator', 'X_test', 'X', 'fold_shuffle_param', 'exp_id', '_ml_usecase', '_available_plots', 'log_plots_param', 'memory', 'fold_groups_param', 'fix_imbalance', 'data', 'y', 'target_param', 'gpu_param', 'n_jobs_param', 'X_train', 'exp_name_log', 'gpu_n_jobs_param', 'pipeline', 'y_test', 'seed', 'is_multiclass'}
2025-08-05 03:36:53,779:INFO:Checking environment
2025-08-05 03:36:53,779:INFO:python_version: 3.11.13
2025-08-05 03:36:53,779:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 03:36:53,780:INFO:machine: aarch64
2025-08-05 03:36:53,780:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:36:53,780:INFO:Memory: svmem(total=17011818496, available=15925346304, percent=6.4, used=815210496, free=5099491328, active=1219817472, inactive=9473785856, buffers=529547264, cached=10567569408, shared=7172096, slab=1074925568)
2025-08-05 03:36:53,781:INFO:Physical Core: 16
2025-08-05 03:36:53,781:INFO:Logical Core: 16
2025-08-05 03:36:53,781:INFO:Checking libraries
2025-08-05 03:36:53,781:INFO:System:
2025-08-05 03:36:53,781:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 03:36:53,781:INFO:executable: /usr/local/bin/python
2025-08-05 03:36:53,781:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:36:53,781:INFO:PyCaret required dependencies:
2025-08-05 03:36:54,036:INFO:                 pip: 24.0
2025-08-05 03:36:54,036:INFO:          setuptools: 80.9.0
2025-08-05 03:36:54,036:INFO:             pycaret: 3.3.2
2025-08-05 03:36:54,037:INFO:             IPython: 9.4.0
2025-08-05 03:36:54,037:INFO:          ipywidgets: 8.1.7
2025-08-05 03:36:54,037:INFO:                tqdm: 4.67.1
2025-08-05 03:36:54,037:INFO:               numpy: 1.26.4
2025-08-05 03:36:54,037:INFO:              pandas: 2.1.4
2025-08-05 03:36:54,037:INFO:              jinja2: 3.1.6
2025-08-05 03:36:54,037:INFO:               scipy: 1.11.4
2025-08-05 03:36:54,037:INFO:              joblib: 1.3.2
2025-08-05 03:36:54,037:INFO:             sklearn: 1.4.2
2025-08-05 03:36:54,037:INFO:                pyod: 2.0.5
2025-08-05 03:36:54,037:INFO:            imblearn: 0.13.0
2025-08-05 03:36:54,037:INFO:   category_encoders: 2.7.0
2025-08-05 03:36:54,037:INFO:            lightgbm: 4.6.0
2025-08-05 03:36:54,037:INFO:               numba: 0.61.0
2025-08-05 03:36:54,037:INFO:            requests: 2.32.4
2025-08-05 03:36:54,037:INFO:          matplotlib: 3.7.5
2025-08-05 03:36:54,037:INFO:          scikitplot: 0.3.7
2025-08-05 03:36:54,038:INFO:         yellowbrick: 1.5
2025-08-05 03:36:54,038:INFO:              plotly: 5.24.1
2025-08-05 03:36:54,038:INFO:    plotly-resampler: Not installed
2025-08-05 03:36:54,038:INFO:             kaleido: 1.0.0
2025-08-05 03:36:54,038:INFO:           schemdraw: 0.15
2025-08-05 03:36:54,038:INFO:         statsmodels: 0.14.5
2025-08-05 03:36:54,038:INFO:              sktime: 0.26.0
2025-08-05 03:36:54,038:INFO:               tbats: 1.1.3
2025-08-05 03:36:54,038:INFO:            pmdarima: 2.0.4
2025-08-05 03:36:54,038:INFO:              psutil: 7.0.0
2025-08-05 03:36:54,038:INFO:          markupsafe: 3.0.2
2025-08-05 03:36:54,038:INFO:             pickle5: Not installed
2025-08-05 03:36:54,038:INFO:         cloudpickle: 3.1.1
2025-08-05 03:36:54,038:INFO:         deprecation: 2.1.0
2025-08-05 03:36:54,038:INFO:              xxhash: 3.5.0
2025-08-05 03:36:54,038:INFO:           wurlitzer: 3.1.1
2025-08-05 03:36:54,038:INFO:PyCaret optional dependencies:
2025-08-05 03:36:55,071:INFO:                shap: 0.44.1
2025-08-05 03:36:55,071:INFO:           interpret: 0.7.1
2025-08-05 03:36:55,071:INFO:                umap: 0.5.7
2025-08-05 03:36:55,071:INFO:     ydata_profiling: 4.16.1
2025-08-05 03:36:55,072:INFO:  explainerdashboard: 0.5.1
2025-08-05 03:36:55,072:INFO:             autoviz: Not installed
2025-08-05 03:36:55,072:INFO:           fairlearn: 0.7.0
2025-08-05 03:36:55,072:INFO:          deepchecks: Not installed
2025-08-05 03:36:55,072:INFO:             xgboost: 3.0.3
2025-08-05 03:36:55,072:INFO:            catboost: 1.2.8
2025-08-05 03:36:55,072:INFO:              kmodes: 0.12.2
2025-08-05 03:36:55,072:INFO:             mlxtend: 0.23.4
2025-08-05 03:36:55,072:INFO:       statsforecast: 1.5.0
2025-08-05 03:36:55,072:INFO:        tune_sklearn: Not installed
2025-08-05 03:36:55,072:INFO:                 ray: Not installed
2025-08-05 03:36:55,072:INFO:            hyperopt: 0.2.7
2025-08-05 03:36:55,072:INFO:              optuna: 4.4.0
2025-08-05 03:36:55,072:INFO:               skopt: 0.10.2
2025-08-05 03:36:55,072:INFO:              mlflow: 3.1.4
2025-08-05 03:36:55,072:INFO:              gradio: 5.40.0
2025-08-05 03:36:55,072:INFO:             fastapi: 0.116.1
2025-08-05 03:36:55,072:INFO:             uvicorn: 0.35.0
2025-08-05 03:36:55,073:INFO:              m2cgen: 0.10.0
2025-08-05 03:36:55,073:INFO:           evidently: 0.4.40
2025-08-05 03:36:55,073:INFO:               fugue: 0.8.7
2025-08-05 03:36:55,073:INFO:           streamlit: 1.47.1
2025-08-05 03:36:55,073:INFO:             prophet: Not installed
2025-08-05 03:36:55,073:INFO:None
2025-08-05 03:36:55,073:INFO:Set up data.
2025-08-05 03:36:55,076:INFO:Set up folding strategy.
2025-08-05 03:36:55,076:INFO:Set up train/test split.
2025-08-05 03:36:55,077:INFO:Set up index.
2025-08-05 03:36:55,077:INFO:Assigning column types.
2025-08-05 03:36:55,079:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 03:36:55,094:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,096:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,108:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,109:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,139:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,140:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,140:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 03:36:55,155:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,164:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,165:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,182:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:36:55,192:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,193:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,194:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 03:36:55,219:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,220:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,245:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,246:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,247:INFO:Preparing preprocessing pipeline...
2025-08-05 03:36:55,248:INFO:Set up simple imputation.
2025-08-05 03:36:55,254:INFO:Finished creating preprocessing pipeline.
2025-08-05 03:36:55,255:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 03:36:55,255:INFO:Creating final display dataframe.
2025-08-05 03:36:55,274:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5db2
2025-08-05 03:36:55,299:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,300:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,325:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:36:55,326:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:36:55,326:INFO:setup() successfully completed in 1.55s...............
2025-08-05 03:36:55,326:INFO:Initializing compare_models()
2025-08-05 03:36:55,327:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, include=['lr', 'knn', 'rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, 'include': ['lr', 'knn', 'rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 03:36:55,327:INFO:Checking exceptions
2025-08-05 03:36:55,328:INFO:Preparing display monitor
2025-08-05 03:36:55,329:INFO:Initializing Logistic Regression
2025-08-05 03:36:55,329:INFO:Total runtime is 1.3589859008789063e-06 minutes
2025-08-05 03:36:55,330:INFO:SubProcess create_model() called ==================================
2025-08-05 03:36:55,330:INFO:Initializing create_model()
2025-08-05 03:36:55,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff25106350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:36:55,330:INFO:Checking exceptions
2025-08-05 03:36:55,330:INFO:Importing libraries
2025-08-05 03:36:55,330:INFO:Copying training dataset
2025-08-05 03:36:55,331:INFO:Defining folds
2025-08-05 03:36:55,331:INFO:Declaring metric variables
2025-08-05 03:36:55,332:INFO:Importing untrained model
2025-08-05 03:36:55,332:INFO:Logistic Regression Imported successfully
2025-08-05 03:36:55,332:INFO:Starting cross validation
2025-08-05 03:36:55,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:36:56,406:INFO:Calculating mean and std
2025-08-05 03:36:56,406:INFO:Creating metrics dataframe
2025-08-05 03:36:56,408:INFO:Uploading results into container
2025-08-05 03:36:56,409:INFO:Uploading model into container now
2025-08-05 03:36:56,409:INFO:_master_model_container: 1
2025-08-05 03:36:56,409:INFO:_display_container: 2
2025-08-05 03:36:56,410:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:36:56,410:INFO:create_model() successfully completed......................................
2025-08-05 03:36:56,509:INFO:SubProcess create_model() end ==================================
2025-08-05 03:36:56,510:INFO:Creating metrics dataframe
2025-08-05 03:36:56,511:INFO:Initializing K Neighbors Classifier
2025-08-05 03:36:56,511:INFO:Total runtime is 0.01968851089477539 minutes
2025-08-05 03:36:56,511:INFO:SubProcess create_model() called ==================================
2025-08-05 03:36:56,511:INFO:Initializing create_model()
2025-08-05 03:36:56,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff25106350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:36:56,511:INFO:Checking exceptions
2025-08-05 03:36:56,511:INFO:Importing libraries
2025-08-05 03:36:56,511:INFO:Copying training dataset
2025-08-05 03:36:56,513:INFO:Defining folds
2025-08-05 03:36:56,513:INFO:Declaring metric variables
2025-08-05 03:36:56,513:INFO:Importing untrained model
2025-08-05 03:36:56,513:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:36:56,513:INFO:Starting cross validation
2025-08-05 03:36:56,514:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:36:57,412:INFO:Calculating mean and std
2025-08-05 03:36:57,413:INFO:Creating metrics dataframe
2025-08-05 03:36:57,414:INFO:Uploading results into container
2025-08-05 03:36:57,414:INFO:Uploading model into container now
2025-08-05 03:36:57,414:INFO:_master_model_container: 2
2025-08-05 03:36:57,414:INFO:_display_container: 2
2025-08-05 03:36:57,415:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:36:57,415:INFO:create_model() successfully completed......................................
2025-08-05 03:36:57,509:INFO:SubProcess create_model() end ==================================
2025-08-05 03:36:57,509:INFO:Creating metrics dataframe
2025-08-05 03:36:57,510:INFO:Initializing Random Forest Classifier
2025-08-05 03:36:57,510:INFO:Total runtime is 0.03634621699651082 minutes
2025-08-05 03:36:57,510:INFO:SubProcess create_model() called ==================================
2025-08-05 03:36:57,510:INFO:Initializing create_model()
2025-08-05 03:36:57,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff25106350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:36:57,511:INFO:Checking exceptions
2025-08-05 03:36:57,511:INFO:Importing libraries
2025-08-05 03:36:57,511:INFO:Copying training dataset
2025-08-05 03:36:57,512:INFO:Defining folds
2025-08-05 03:36:57,512:INFO:Declaring metric variables
2025-08-05 03:36:57,512:INFO:Importing untrained model
2025-08-05 03:36:57,513:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:36:57,513:INFO:Starting cross validation
2025-08-05 03:36:57,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:36:57,715:INFO:Calculating mean and std
2025-08-05 03:36:57,716:INFO:Creating metrics dataframe
2025-08-05 03:36:57,717:INFO:Uploading results into container
2025-08-05 03:36:57,717:INFO:Uploading model into container now
2025-08-05 03:36:57,717:INFO:_master_model_container: 3
2025-08-05 03:36:57,717:INFO:_display_container: 2
2025-08-05 03:36:57,718:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:36:57,718:INFO:create_model() successfully completed......................................
2025-08-05 03:36:57,797:INFO:SubProcess create_model() end ==================================
2025-08-05 03:36:57,798:INFO:Creating metrics dataframe
2025-08-05 03:36:57,799:INFO:Initializing Extra Trees Classifier
2025-08-05 03:36:57,799:INFO:Total runtime is 0.04115710655848185 minutes
2025-08-05 03:36:57,799:INFO:SubProcess create_model() called ==================================
2025-08-05 03:36:57,799:INFO:Initializing create_model()
2025-08-05 03:36:57,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff25106350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:36:57,799:INFO:Checking exceptions
2025-08-05 03:36:57,799:INFO:Importing libraries
2025-08-05 03:36:57,799:INFO:Copying training dataset
2025-08-05 03:36:57,801:INFO:Defining folds
2025-08-05 03:36:57,801:INFO:Declaring metric variables
2025-08-05 03:36:57,801:INFO:Importing untrained model
2025-08-05 03:36:57,801:INFO:Extra Trees Classifier Imported successfully
2025-08-05 03:36:57,801:INFO:Starting cross validation
2025-08-05 03:36:57,801:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:36:57,939:INFO:Calculating mean and std
2025-08-05 03:36:57,940:INFO:Creating metrics dataframe
2025-08-05 03:36:57,941:INFO:Uploading results into container
2025-08-05 03:36:57,941:INFO:Uploading model into container now
2025-08-05 03:36:57,941:INFO:_master_model_container: 4
2025-08-05 03:36:57,941:INFO:_display_container: 2
2025-08-05 03:36:57,941:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 03:36:57,942:INFO:create_model() successfully completed......................................
2025-08-05 03:36:58,013:INFO:SubProcess create_model() end ==================================
2025-08-05 03:36:58,013:INFO:Creating metrics dataframe
2025-08-05 03:36:58,015:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 03:36:58,015:INFO:Total runtime is 0.04475522438685099 minutes
2025-08-05 03:36:58,015:INFO:SubProcess create_model() called ==================================
2025-08-05 03:36:58,015:INFO:Initializing create_model()
2025-08-05 03:36:58,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff25106350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:36:58,015:INFO:Checking exceptions
2025-08-05 03:36:58,015:INFO:Importing libraries
2025-08-05 03:36:58,015:INFO:Copying training dataset
2025-08-05 03:36:58,017:INFO:Defining folds
2025-08-05 03:36:58,017:INFO:Declaring metric variables
2025-08-05 03:36:58,017:INFO:Importing untrained model
2025-08-05 03:36:58,017:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 03:36:58,017:INFO:Starting cross validation
2025-08-05 03:36:58,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:37:11,109:INFO:Calculating mean and std
2025-08-05 03:37:11,109:INFO:Creating metrics dataframe
2025-08-05 03:37:11,110:INFO:Uploading results into container
2025-08-05 03:37:11,110:INFO:Uploading model into container now
2025-08-05 03:37:11,110:INFO:_master_model_container: 5
2025-08-05 03:37:11,111:INFO:_display_container: 2
2025-08-05 03:37:11,111:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 03:37:11,111:INFO:create_model() successfully completed......................................
2025-08-05 03:37:11,186:INFO:SubProcess create_model() end ==================================
2025-08-05 03:37:11,186:INFO:Creating metrics dataframe
2025-08-05 03:37:11,187:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 03:37:11,188:INFO:Initializing create_model()
2025-08-05 03:37:11,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:37:11,188:INFO:Checking exceptions
2025-08-05 03:37:11,189:INFO:Importing libraries
2025-08-05 03:37:11,189:INFO:Copying training dataset
2025-08-05 03:37:11,190:INFO:Defining folds
2025-08-05 03:37:11,190:INFO:Declaring metric variables
2025-08-05 03:37:11,190:INFO:Importing untrained model
2025-08-05 03:37:11,190:INFO:Declaring custom model
2025-08-05 03:37:11,190:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:37:11,191:INFO:Cross validation set to False
2025-08-05 03:37:11,191:INFO:Fitting Model
2025-08-05 03:37:11,277:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:37:11,278:INFO:create_model() successfully completed......................................
2025-08-05 03:37:11,351:INFO:_master_model_container: 5
2025-08-05 03:37:11,351:INFO:_display_container: 2
2025-08-05 03:37:11,352:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:37:11,352:INFO:compare_models() successfully completed......................................
2025-08-05 03:37:11,352:INFO:Initializing finalize_model()
2025-08-05 03:37:11,352:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 03:37:11,352:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:37:11,353:INFO:Initializing create_model()
2025-08-05 03:37:11,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff70848610>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:37:11,354:INFO:Checking exceptions
2025-08-05 03:37:11,354:INFO:Importing libraries
2025-08-05 03:37:11,354:INFO:Copying training dataset
2025-08-05 03:37:11,354:INFO:Defining folds
2025-08-05 03:37:11,354:INFO:Declaring metric variables
2025-08-05 03:37:11,354:INFO:Importing untrained model
2025-08-05 03:37:11,354:INFO:Declaring custom model
2025-08-05 03:37:11,355:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:37:11,355:INFO:Cross validation set to False
2025-08-05 03:37:11,355:INFO:Fitting Model
2025-08-05 03:37:11,444:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:37:11,444:INFO:create_model() successfully completed......................................
2025-08-05 03:37:11,522:INFO:_master_model_container: 5
2025-08-05 03:37:11,522:INFO:_display_container: 2
2025-08-05 03:37:11,524:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:37:11,524:INFO:finalize_model() successfully completed......................................
2025-08-05 03:37:11,605:INFO:Initializing save_model()
2025-08-05 03:37:11,605:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 03:37:11,605:INFO:Adding model into prep_pipe
2025-08-05 03:37:11,605:WARNING:Only Model saved as it was a pipeline.
2025-08-05 03:37:11,635:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 03:37:11,636:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:37:11,636:INFO:save_model() successfully completed......................................
2025-08-05 03:38:18,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:38:18,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:38:18,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:38:18,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:38:19,450:INFO:Initializing load_model()
2025-08-05 03:38:19,450:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 03:38:21,534:INFO:Initializing predict_model()
2025-08-05 03:38:21,535:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff146a7bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff8aba31a0>)
2025-08-05 03:38:21,535:INFO:Checking exceptions
2025-08-05 03:38:21,535:INFO:Preloading libraries
2025-08-05 03:38:21,535:INFO:Set up data.
2025-08-05 03:38:21,537:INFO:Set up index.
2025-08-05 03:38:34,890:INFO:Initializing predict_model()
2025-08-05 03:38:34,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff14679710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff16bde3e0>)
2025-08-05 03:38:34,891:INFO:Checking exceptions
2025-08-05 03:38:34,891:INFO:Preloading libraries
2025-08-05 03:38:34,891:INFO:Set up data.
2025-08-05 03:38:34,892:INFO:Set up index.
2025-08-05 03:38:45,411:INFO:Initializing predict_model()
2025-08-05 03:38:45,411:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff14679e90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff14567600>)
2025-08-05 03:38:45,412:INFO:Checking exceptions
2025-08-05 03:38:45,412:INFO:Preloading libraries
2025-08-05 03:38:45,412:INFO:Set up data.
2025-08-05 03:38:45,413:INFO:Set up index.
2025-08-05 03:43:08,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:43:08,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:43:08,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:43:08,162:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:43:08,643:INFO:PyCaret ClassificationExperiment
2025-08-05 03:43:08,643:INFO:Logging name: clf-default-name
2025-08-05 03:43:08,643:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 03:43:08,643:INFO:version 3.3.2
2025-08-05 03:43:08,643:INFO:Initializing setup()
2025-08-05 03:43:08,643:INFO:self.USI: 7b21
2025-08-05 03:43:08,644:INFO:self._variable_keys: {'data', 'fold_groups_param', 'memory', 'USI', 'seed', 'n_jobs_param', 'idx', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'X_train', 'target_param', 'X', 'is_multiclass', 'gpu_param', 'exp_name_log', 'log_plots_param', 'exp_id', 'fold_generator', 'y', 'pipeline', 'y_test', 'y_train', 'fold_shuffle_param', '_available_plots', 'html_param', '_ml_usecase', 'fix_imbalance'}
2025-08-05 03:43:08,644:INFO:Checking environment
2025-08-05 03:43:08,644:INFO:python_version: 3.11.13
2025-08-05 03:43:08,644:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 03:43:08,644:INFO:machine: aarch64
2025-08-05 03:43:08,644:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:43:08,644:INFO:Memory: svmem(total=17011818496, available=15942762496, percent=6.3, used=797704192, free=5116923904, active=1219543040, inactive=9474179072, buffers=529670144, cached=10567520256, shared=7258112, slab=1073754112)
2025-08-05 03:43:08,645:INFO:Physical Core: 16
2025-08-05 03:43:08,645:INFO:Logical Core: 16
2025-08-05 03:43:08,645:INFO:Checking libraries
2025-08-05 03:43:08,645:INFO:System:
2025-08-05 03:43:08,645:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 03:43:08,645:INFO:executable: /usr/local/bin/python
2025-08-05 03:43:08,645:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:43:08,645:INFO:PyCaret required dependencies:
2025-08-05 03:43:08,904:INFO:                 pip: 24.0
2025-08-05 03:43:08,904:INFO:          setuptools: 80.9.0
2025-08-05 03:43:08,904:INFO:             pycaret: 3.3.2
2025-08-05 03:43:08,904:INFO:             IPython: 9.4.0
2025-08-05 03:43:08,904:INFO:          ipywidgets: 8.1.7
2025-08-05 03:43:08,904:INFO:                tqdm: 4.67.1
2025-08-05 03:43:08,904:INFO:               numpy: 1.26.4
2025-08-05 03:43:08,904:INFO:              pandas: 2.1.4
2025-08-05 03:43:08,904:INFO:              jinja2: 3.1.6
2025-08-05 03:43:08,904:INFO:               scipy: 1.11.4
2025-08-05 03:43:08,904:INFO:              joblib: 1.3.2
2025-08-05 03:43:08,904:INFO:             sklearn: 1.4.2
2025-08-05 03:43:08,904:INFO:                pyod: 2.0.5
2025-08-05 03:43:08,904:INFO:            imblearn: 0.13.0
2025-08-05 03:43:08,904:INFO:   category_encoders: 2.7.0
2025-08-05 03:43:08,905:INFO:            lightgbm: 4.6.0
2025-08-05 03:43:08,905:INFO:               numba: 0.61.0
2025-08-05 03:43:08,905:INFO:            requests: 2.32.4
2025-08-05 03:43:08,905:INFO:          matplotlib: 3.7.5
2025-08-05 03:43:08,905:INFO:          scikitplot: 0.3.7
2025-08-05 03:43:08,905:INFO:         yellowbrick: 1.5
2025-08-05 03:43:08,905:INFO:              plotly: 5.24.1
2025-08-05 03:43:08,905:INFO:    plotly-resampler: Not installed
2025-08-05 03:43:08,905:INFO:             kaleido: 1.0.0
2025-08-05 03:43:08,905:INFO:           schemdraw: 0.15
2025-08-05 03:43:08,905:INFO:         statsmodels: 0.14.5
2025-08-05 03:43:08,905:INFO:              sktime: 0.26.0
2025-08-05 03:43:08,905:INFO:               tbats: 1.1.3
2025-08-05 03:43:08,905:INFO:            pmdarima: 2.0.4
2025-08-05 03:43:08,905:INFO:              psutil: 7.0.0
2025-08-05 03:43:08,905:INFO:          markupsafe: 3.0.2
2025-08-05 03:43:08,905:INFO:             pickle5: Not installed
2025-08-05 03:43:08,905:INFO:         cloudpickle: 3.1.1
2025-08-05 03:43:08,905:INFO:         deprecation: 2.1.0
2025-08-05 03:43:08,906:INFO:              xxhash: 3.5.0
2025-08-05 03:43:08,906:INFO:           wurlitzer: 3.1.1
2025-08-05 03:43:08,906:INFO:PyCaret optional dependencies:
2025-08-05 03:43:09,891:INFO:                shap: 0.44.1
2025-08-05 03:43:09,891:INFO:           interpret: 0.7.1
2025-08-05 03:43:09,891:INFO:                umap: 0.5.7
2025-08-05 03:43:09,891:INFO:     ydata_profiling: 4.16.1
2025-08-05 03:43:09,891:INFO:  explainerdashboard: 0.5.1
2025-08-05 03:43:09,891:INFO:             autoviz: Not installed
2025-08-05 03:43:09,892:INFO:           fairlearn: 0.7.0
2025-08-05 03:43:09,892:INFO:          deepchecks: Not installed
2025-08-05 03:43:09,892:INFO:             xgboost: 3.0.3
2025-08-05 03:43:09,892:INFO:            catboost: 1.2.8
2025-08-05 03:43:09,892:INFO:              kmodes: 0.12.2
2025-08-05 03:43:09,892:INFO:             mlxtend: 0.23.4
2025-08-05 03:43:09,892:INFO:       statsforecast: 1.5.0
2025-08-05 03:43:09,892:INFO:        tune_sklearn: Not installed
2025-08-05 03:43:09,892:INFO:                 ray: Not installed
2025-08-05 03:43:09,892:INFO:            hyperopt: 0.2.7
2025-08-05 03:43:09,892:INFO:              optuna: 4.4.0
2025-08-05 03:43:09,892:INFO:               skopt: 0.10.2
2025-08-05 03:43:09,892:INFO:              mlflow: 3.1.4
2025-08-05 03:43:09,892:INFO:              gradio: 5.40.0
2025-08-05 03:43:09,892:INFO:             fastapi: 0.116.1
2025-08-05 03:43:09,892:INFO:             uvicorn: 0.35.0
2025-08-05 03:43:09,892:INFO:              m2cgen: 0.10.0
2025-08-05 03:43:09,892:INFO:           evidently: 0.4.40
2025-08-05 03:43:09,893:INFO:               fugue: 0.8.7
2025-08-05 03:43:09,893:INFO:           streamlit: 1.47.1
2025-08-05 03:43:09,893:INFO:             prophet: Not installed
2025-08-05 03:43:09,893:INFO:None
2025-08-05 03:43:09,893:INFO:Set up data.
2025-08-05 03:43:09,896:INFO:Set up folding strategy.
2025-08-05 03:43:09,896:INFO:Set up train/test split.
2025-08-05 03:43:09,897:INFO:Set up index.
2025-08-05 03:43:09,897:INFO:Assigning column types.
2025-08-05 03:43:09,899:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 03:43:09,914:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:43:09,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:43:09,925:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:09,926:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:09,947:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:43:09,947:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:43:09,957:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:09,958:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:09,958:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 03:43:09,973:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:43:09,981:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:09,982:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:09,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:43:10,007:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:10,007:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:10,008:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 03:43:10,031:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:10,032:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:10,056:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:10,057:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:10,057:INFO:Preparing preprocessing pipeline...
2025-08-05 03:43:10,058:INFO:Set up simple imputation.
2025-08-05 03:43:10,064:INFO:Finished creating preprocessing pipeline.
2025-08-05 03:43:10,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 03:43:10,065:INFO:Creating final display dataframe.
2025-08-05 03:43:10,084:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              7b21
2025-08-05 03:43:10,108:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:10,109:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:10,133:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:43:10,134:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:43:10,134:INFO:setup() successfully completed in 1.49s...............
2025-08-05 03:43:10,134:INFO:Initializing compare_models()
2025-08-05 03:43:10,135:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, include=['lr', 'knn', 'rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, 'include': ['lr', 'knn', 'rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 03:43:10,135:INFO:Checking exceptions
2025-08-05 03:43:10,136:INFO:Preparing display monitor
2025-08-05 03:43:10,137:INFO:Initializing Logistic Regression
2025-08-05 03:43:10,137:INFO:Total runtime is 2.2490819295247396e-06 minutes
2025-08-05 03:43:10,137:INFO:SubProcess create_model() called ==================================
2025-08-05 03:43:10,137:INFO:Initializing create_model()
2025-08-05 03:43:10,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff15c560d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:10,137:INFO:Checking exceptions
2025-08-05 03:43:10,137:INFO:Importing libraries
2025-08-05 03:43:10,137:INFO:Copying training dataset
2025-08-05 03:43:10,139:INFO:Defining folds
2025-08-05 03:43:10,139:INFO:Declaring metric variables
2025-08-05 03:43:10,139:INFO:Importing untrained model
2025-08-05 03:43:10,139:INFO:Logistic Regression Imported successfully
2025-08-05 03:43:10,139:INFO:Starting cross validation
2025-08-05 03:43:10,139:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:43:11,191:INFO:Calculating mean and std
2025-08-05 03:43:11,192:INFO:Creating metrics dataframe
2025-08-05 03:43:11,194:INFO:Uploading results into container
2025-08-05 03:43:11,194:INFO:Uploading model into container now
2025-08-05 03:43:11,195:INFO:_master_model_container: 1
2025-08-05 03:43:11,195:INFO:_display_container: 2
2025-08-05 03:43:11,195:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:43:11,195:INFO:create_model() successfully completed......................................
2025-08-05 03:43:11,295:INFO:SubProcess create_model() end ==================================
2025-08-05 03:43:11,296:INFO:Creating metrics dataframe
2025-08-05 03:43:11,297:INFO:Initializing K Neighbors Classifier
2025-08-05 03:43:11,297:INFO:Total runtime is 0.019336998462677002 minutes
2025-08-05 03:43:11,297:INFO:SubProcess create_model() called ==================================
2025-08-05 03:43:11,297:INFO:Initializing create_model()
2025-08-05 03:43:11,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff15c560d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:11,297:INFO:Checking exceptions
2025-08-05 03:43:11,297:INFO:Importing libraries
2025-08-05 03:43:11,298:INFO:Copying training dataset
2025-08-05 03:43:11,299:INFO:Defining folds
2025-08-05 03:43:11,299:INFO:Declaring metric variables
2025-08-05 03:43:11,299:INFO:Importing untrained model
2025-08-05 03:43:11,299:INFO:K Neighbors Classifier Imported successfully
2025-08-05 03:43:11,300:INFO:Starting cross validation
2025-08-05 03:43:11,300:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:43:12,167:INFO:Calculating mean and std
2025-08-05 03:43:12,168:INFO:Creating metrics dataframe
2025-08-05 03:43:12,169:INFO:Uploading results into container
2025-08-05 03:43:12,169:INFO:Uploading model into container now
2025-08-05 03:43:12,169:INFO:_master_model_container: 2
2025-08-05 03:43:12,169:INFO:_display_container: 2
2025-08-05 03:43:12,169:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-05 03:43:12,169:INFO:create_model() successfully completed......................................
2025-08-05 03:43:12,250:INFO:SubProcess create_model() end ==================================
2025-08-05 03:43:12,251:INFO:Creating metrics dataframe
2025-08-05 03:43:12,252:INFO:Initializing Random Forest Classifier
2025-08-05 03:43:12,252:INFO:Total runtime is 0.035254931449890135 minutes
2025-08-05 03:43:12,252:INFO:SubProcess create_model() called ==================================
2025-08-05 03:43:12,252:INFO:Initializing create_model()
2025-08-05 03:43:12,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff15c560d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:12,252:INFO:Checking exceptions
2025-08-05 03:43:12,253:INFO:Importing libraries
2025-08-05 03:43:12,253:INFO:Copying training dataset
2025-08-05 03:43:12,254:INFO:Defining folds
2025-08-05 03:43:12,254:INFO:Declaring metric variables
2025-08-05 03:43:12,254:INFO:Importing untrained model
2025-08-05 03:43:12,254:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:43:12,254:INFO:Starting cross validation
2025-08-05 03:43:12,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:43:12,442:INFO:Calculating mean and std
2025-08-05 03:43:12,442:INFO:Creating metrics dataframe
2025-08-05 03:43:12,443:INFO:Uploading results into container
2025-08-05 03:43:12,443:INFO:Uploading model into container now
2025-08-05 03:43:12,444:INFO:_master_model_container: 3
2025-08-05 03:43:12,444:INFO:_display_container: 2
2025-08-05 03:43:12,444:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:43:12,444:INFO:create_model() successfully completed......................................
2025-08-05 03:43:12,515:INFO:SubProcess create_model() end ==================================
2025-08-05 03:43:12,515:INFO:Creating metrics dataframe
2025-08-05 03:43:12,516:INFO:Initializing Extra Trees Classifier
2025-08-05 03:43:12,516:INFO:Total runtime is 0.03965975443522135 minutes
2025-08-05 03:43:12,516:INFO:SubProcess create_model() called ==================================
2025-08-05 03:43:12,517:INFO:Initializing create_model()
2025-08-05 03:43:12,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff15c560d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:12,517:INFO:Checking exceptions
2025-08-05 03:43:12,517:INFO:Importing libraries
2025-08-05 03:43:12,517:INFO:Copying training dataset
2025-08-05 03:43:12,518:INFO:Defining folds
2025-08-05 03:43:12,518:INFO:Declaring metric variables
2025-08-05 03:43:12,518:INFO:Importing untrained model
2025-08-05 03:43:12,519:INFO:Extra Trees Classifier Imported successfully
2025-08-05 03:43:12,519:INFO:Starting cross validation
2025-08-05 03:43:12,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:43:12,669:INFO:Calculating mean and std
2025-08-05 03:43:12,669:INFO:Creating metrics dataframe
2025-08-05 03:43:12,670:INFO:Uploading results into container
2025-08-05 03:43:12,670:INFO:Uploading model into container now
2025-08-05 03:43:12,670:INFO:_master_model_container: 4
2025-08-05 03:43:12,671:INFO:_display_container: 2
2025-08-05 03:43:12,671:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 03:43:12,671:INFO:create_model() successfully completed......................................
2025-08-05 03:43:12,742:INFO:SubProcess create_model() end ==================================
2025-08-05 03:43:12,742:INFO:Creating metrics dataframe
2025-08-05 03:43:12,743:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 03:43:12,743:INFO:Total runtime is 0.04343902269999186 minutes
2025-08-05 03:43:12,743:INFO:SubProcess create_model() called ==================================
2025-08-05 03:43:12,743:INFO:Initializing create_model()
2025-08-05 03:43:12,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff15c560d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:12,743:INFO:Checking exceptions
2025-08-05 03:43:12,744:INFO:Importing libraries
2025-08-05 03:43:12,744:INFO:Copying training dataset
2025-08-05 03:43:12,745:INFO:Defining folds
2025-08-05 03:43:12,745:INFO:Declaring metric variables
2025-08-05 03:43:12,745:INFO:Importing untrained model
2025-08-05 03:43:12,745:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 03:43:12,746:INFO:Starting cross validation
2025-08-05 03:43:12,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:43:25,849:INFO:Calculating mean and std
2025-08-05 03:43:25,850:INFO:Creating metrics dataframe
2025-08-05 03:43:25,850:INFO:Uploading results into container
2025-08-05 03:43:25,851:INFO:Uploading model into container now
2025-08-05 03:43:25,851:INFO:_master_model_container: 5
2025-08-05 03:43:25,851:INFO:_display_container: 2
2025-08-05 03:43:25,851:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 03:43:25,851:INFO:create_model() successfully completed......................................
2025-08-05 03:43:25,925:INFO:SubProcess create_model() end ==================================
2025-08-05 03:43:25,925:INFO:Creating metrics dataframe
2025-08-05 03:43:25,926:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 03:43:25,927:INFO:Initializing create_model()
2025-08-05 03:43:25,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:25,927:INFO:Checking exceptions
2025-08-05 03:43:25,928:INFO:Importing libraries
2025-08-05 03:43:25,928:INFO:Copying training dataset
2025-08-05 03:43:25,929:INFO:Defining folds
2025-08-05 03:43:25,929:INFO:Declaring metric variables
2025-08-05 03:43:25,929:INFO:Importing untrained model
2025-08-05 03:43:25,929:INFO:Declaring custom model
2025-08-05 03:43:25,929:INFO:Logistic Regression Imported successfully
2025-08-05 03:43:25,930:INFO:Cross validation set to False
2025-08-05 03:43:25,930:INFO:Fitting Model
2025-08-05 03:43:25,934:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:43:25,934:INFO:create_model() successfully completed......................................
2025-08-05 03:43:26,003:INFO:_master_model_container: 5
2025-08-05 03:43:26,003:INFO:_display_container: 2
2025-08-05 03:43:26,004:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:43:26,004:INFO:compare_models() successfully completed......................................
2025-08-05 03:43:26,004:INFO:Initializing finalize_model()
2025-08-05 03:43:26,004:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 03:43:26,004:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-05 03:43:26,005:INFO:Initializing create_model()
2025-08-05 03:43:26,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff3c786350>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:43:26,005:INFO:Checking exceptions
2025-08-05 03:43:26,006:INFO:Importing libraries
2025-08-05 03:43:26,006:INFO:Copying training dataset
2025-08-05 03:43:26,006:INFO:Defining folds
2025-08-05 03:43:26,006:INFO:Declaring metric variables
2025-08-05 03:43:26,006:INFO:Importing untrained model
2025-08-05 03:43:26,006:INFO:Declaring custom model
2025-08-05 03:43:26,006:INFO:Logistic Regression Imported successfully
2025-08-05 03:43:26,007:INFO:Cross validation set to False
2025-08-05 03:43:26,007:INFO:Fitting Model
2025-08-05 03:43:26,011:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-05 03:43:26,011:INFO:create_model() successfully completed......................................
2025-08-05 03:43:26,076:INFO:_master_model_container: 5
2025-08-05 03:43:26,076:INFO:_display_container: 2
2025-08-05 03:43:26,078:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-05 03:43:26,078:INFO:finalize_model() successfully completed......................................
2025-08-05 03:43:26,140:INFO:Initializing save_model()
2025-08-05 03:43:26,140:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 03:43:26,140:INFO:Adding model into prep_pipe
2025-08-05 03:43:26,140:WARNING:Only Model saved as it was a pipeline.
2025-08-05 03:43:26,142:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 03:43:26,143:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-05 03:43:26,143:INFO:save_model() successfully completed......................................
2025-08-05 03:44:00,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:44:00,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:44:00,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:44:00,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:44:01,578:INFO:Initializing load_model()
2025-08-05 03:44:01,578:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 03:44:05,596:INFO:Initializing predict_model()
2025-08-05 03:44:05,596:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff234c4450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9b5a7420>)
2025-08-05 03:44:05,597:INFO:Checking exceptions
2025-08-05 03:44:05,598:INFO:Preloading libraries
2025-08-05 03:44:05,598:INFO:Set up data.
2025-08-05 03:44:05,602:INFO:Set up index.
2025-08-05 03:49:15,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:49:15,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:49:15,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:49:15,055:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:49:15,535:INFO:PyCaret ClassificationExperiment
2025-08-05 03:49:15,535:INFO:Logging name: clf-default-name
2025-08-05 03:49:15,536:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 03:49:15,536:INFO:version 3.3.2
2025-08-05 03:49:15,536:INFO:Initializing setup()
2025-08-05 03:49:15,536:INFO:self.USI: a15a
2025-08-05 03:49:15,536:INFO:self._variable_keys: {'log_plots_param', 'X', 'pipeline', 'seed', 'gpu_param', 'logging_param', 'fold_shuffle_param', 'fix_imbalance', 'n_jobs_param', 'X_train', '_available_plots', '_ml_usecase', 'data', 'y_test', 'exp_name_log', 'fold_generator', 'is_multiclass', 'exp_id', 'memory', 'gpu_n_jobs_param', 'target_param', 'y_train', 'idx', 'y', 'fold_groups_param', 'USI', 'html_param', 'X_test'}
2025-08-05 03:49:15,536:INFO:Checking environment
2025-08-05 03:49:15,536:INFO:python_version: 3.11.13
2025-08-05 03:49:15,536:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 03:49:15,536:INFO:machine: aarch64
2025-08-05 03:49:15,537:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:49:15,537:INFO:Memory: svmem(total=17011818496, available=15880933376, percent=6.6, used=859435008, free=5052112896, active=1269186560, inactive=9475530752, buffers=529743872, cached=10570526720, shared=7360512, slab=1074659328)
2025-08-05 03:49:15,537:INFO:Physical Core: 16
2025-08-05 03:49:15,537:INFO:Logical Core: 16
2025-08-05 03:49:15,537:INFO:Checking libraries
2025-08-05 03:49:15,537:INFO:System:
2025-08-05 03:49:15,537:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 03:49:15,537:INFO:executable: /usr/local/bin/python
2025-08-05 03:49:15,537:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 03:49:15,537:INFO:PyCaret required dependencies:
2025-08-05 03:49:15,791:INFO:                 pip: 24.0
2025-08-05 03:49:15,791:INFO:          setuptools: 80.9.0
2025-08-05 03:49:15,791:INFO:             pycaret: 3.3.2
2025-08-05 03:49:15,791:INFO:             IPython: 9.4.0
2025-08-05 03:49:15,792:INFO:          ipywidgets: 8.1.7
2025-08-05 03:49:15,792:INFO:                tqdm: 4.67.1
2025-08-05 03:49:15,792:INFO:               numpy: 1.26.4
2025-08-05 03:49:15,792:INFO:              pandas: 2.1.4
2025-08-05 03:49:15,792:INFO:              jinja2: 3.1.6
2025-08-05 03:49:15,792:INFO:               scipy: 1.11.4
2025-08-05 03:49:15,792:INFO:              joblib: 1.3.2
2025-08-05 03:49:15,792:INFO:             sklearn: 1.4.2
2025-08-05 03:49:15,792:INFO:                pyod: 2.0.5
2025-08-05 03:49:15,792:INFO:            imblearn: 0.13.0
2025-08-05 03:49:15,792:INFO:   category_encoders: 2.7.0
2025-08-05 03:49:15,792:INFO:            lightgbm: 4.6.0
2025-08-05 03:49:15,792:INFO:               numba: 0.61.0
2025-08-05 03:49:15,792:INFO:            requests: 2.32.4
2025-08-05 03:49:15,792:INFO:          matplotlib: 3.7.5
2025-08-05 03:49:15,792:INFO:          scikitplot: 0.3.7
2025-08-05 03:49:15,792:INFO:         yellowbrick: 1.5
2025-08-05 03:49:15,793:INFO:              plotly: 5.24.1
2025-08-05 03:49:15,793:INFO:    plotly-resampler: Not installed
2025-08-05 03:49:15,793:INFO:             kaleido: 1.0.0
2025-08-05 03:49:15,793:INFO:           schemdraw: 0.15
2025-08-05 03:49:15,793:INFO:         statsmodels: 0.14.5
2025-08-05 03:49:15,793:INFO:              sktime: 0.26.0
2025-08-05 03:49:15,793:INFO:               tbats: 1.1.3
2025-08-05 03:49:15,793:INFO:            pmdarima: 2.0.4
2025-08-05 03:49:15,793:INFO:              psutil: 7.0.0
2025-08-05 03:49:15,793:INFO:          markupsafe: 3.0.2
2025-08-05 03:49:15,793:INFO:             pickle5: Not installed
2025-08-05 03:49:15,793:INFO:         cloudpickle: 3.1.1
2025-08-05 03:49:15,793:INFO:         deprecation: 2.1.0
2025-08-05 03:49:15,793:INFO:              xxhash: 3.5.0
2025-08-05 03:49:15,793:INFO:           wurlitzer: 3.1.1
2025-08-05 03:49:15,793:INFO:PyCaret optional dependencies:
2025-08-05 03:49:16,788:INFO:                shap: 0.44.1
2025-08-05 03:49:16,788:INFO:           interpret: 0.7.1
2025-08-05 03:49:16,788:INFO:                umap: 0.5.7
2025-08-05 03:49:16,788:INFO:     ydata_profiling: 4.16.1
2025-08-05 03:49:16,788:INFO:  explainerdashboard: 0.5.1
2025-08-05 03:49:16,788:INFO:             autoviz: Not installed
2025-08-05 03:49:16,788:INFO:           fairlearn: 0.7.0
2025-08-05 03:49:16,788:INFO:          deepchecks: Not installed
2025-08-05 03:49:16,788:INFO:             xgboost: 3.0.3
2025-08-05 03:49:16,788:INFO:            catboost: 1.2.8
2025-08-05 03:49:16,788:INFO:              kmodes: 0.12.2
2025-08-05 03:49:16,788:INFO:             mlxtend: 0.23.4
2025-08-05 03:49:16,788:INFO:       statsforecast: 1.5.0
2025-08-05 03:49:16,789:INFO:        tune_sklearn: Not installed
2025-08-05 03:49:16,789:INFO:                 ray: Not installed
2025-08-05 03:49:16,789:INFO:            hyperopt: 0.2.7
2025-08-05 03:49:16,789:INFO:              optuna: 4.4.0
2025-08-05 03:49:16,789:INFO:               skopt: 0.10.2
2025-08-05 03:49:16,789:INFO:              mlflow: 3.1.4
2025-08-05 03:49:16,789:INFO:              gradio: 5.40.0
2025-08-05 03:49:16,789:INFO:             fastapi: 0.116.1
2025-08-05 03:49:16,789:INFO:             uvicorn: 0.35.0
2025-08-05 03:49:16,789:INFO:              m2cgen: 0.10.0
2025-08-05 03:49:16,789:INFO:           evidently: 0.4.40
2025-08-05 03:49:16,789:INFO:               fugue: 0.8.7
2025-08-05 03:49:16,789:INFO:           streamlit: 1.47.1
2025-08-05 03:49:16,789:INFO:             prophet: Not installed
2025-08-05 03:49:16,789:INFO:None
2025-08-05 03:49:16,790:INFO:Set up data.
2025-08-05 03:49:16,793:INFO:Set up folding strategy.
2025-08-05 03:49:16,793:INFO:Set up train/test split.
2025-08-05 03:49:16,794:INFO:Set up index.
2025-08-05 03:49:16,794:INFO:Assigning column types.
2025-08-05 03:49:16,796:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 03:49:16,810:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,811:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,822:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,823:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,855:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,856:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,856:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 03:49:16,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,881:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,882:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,898:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 03:49:16,907:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,908:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,909:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 03:49:16,932:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,933:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,958:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:16,959:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:16,960:INFO:Preparing preprocessing pipeline...
2025-08-05 03:49:16,960:INFO:Set up simple imputation.
2025-08-05 03:49:16,966:INFO:Finished creating preprocessing pipeline.
2025-08-05 03:49:16,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 03:49:16,968:INFO:Creating final display dataframe.
2025-08-05 03:49:16,987:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a15a
2025-08-05 03:49:17,012:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:17,012:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:17,037:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 03:49:17,038:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 03:49:17,039:INFO:setup() successfully completed in 1.5s...............
2025-08-05 03:49:17,039:INFO:Initializing compare_models()
2025-08-05 03:49:17,039:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, include=['rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, 'include': ['rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 03:49:17,039:INFO:Checking exceptions
2025-08-05 03:49:17,040:INFO:Preparing display monitor
2025-08-05 03:49:17,042:INFO:Initializing Random Forest Classifier
2025-08-05 03:49:17,042:INFO:Total runtime is 1.1722246805826824e-06 minutes
2025-08-05 03:49:17,042:INFO:SubProcess create_model() called ==================================
2025-08-05 03:49:17,042:INFO:Initializing create_model()
2025-08-05 03:49:17,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff062a1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:49:17,042:INFO:Checking exceptions
2025-08-05 03:49:17,042:INFO:Importing libraries
2025-08-05 03:49:17,042:INFO:Copying training dataset
2025-08-05 03:49:17,043:INFO:Defining folds
2025-08-05 03:49:17,043:INFO:Declaring metric variables
2025-08-05 03:49:17,044:INFO:Importing untrained model
2025-08-05 03:49:17,044:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:49:17,044:INFO:Starting cross validation
2025-08-05 03:49:17,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:49:18,265:INFO:Calculating mean and std
2025-08-05 03:49:18,265:INFO:Creating metrics dataframe
2025-08-05 03:49:18,270:INFO:Uploading results into container
2025-08-05 03:49:18,270:INFO:Uploading model into container now
2025-08-05 03:49:18,271:INFO:_master_model_container: 1
2025-08-05 03:49:18,271:INFO:_display_container: 2
2025-08-05 03:49:18,272:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:49:18,275:INFO:create_model() successfully completed......................................
2025-08-05 03:49:18,373:INFO:SubProcess create_model() end ==================================
2025-08-05 03:49:18,373:INFO:Creating metrics dataframe
2025-08-05 03:49:18,374:INFO:Initializing Extra Trees Classifier
2025-08-05 03:49:18,374:INFO:Total runtime is 0.022208678722381595 minutes
2025-08-05 03:49:18,374:INFO:SubProcess create_model() called ==================================
2025-08-05 03:49:18,374:INFO:Initializing create_model()
2025-08-05 03:49:18,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff062a1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:49:18,375:INFO:Checking exceptions
2025-08-05 03:49:18,375:INFO:Importing libraries
2025-08-05 03:49:18,375:INFO:Copying training dataset
2025-08-05 03:49:18,376:INFO:Defining folds
2025-08-05 03:49:18,376:INFO:Declaring metric variables
2025-08-05 03:49:18,376:INFO:Importing untrained model
2025-08-05 03:49:18,377:INFO:Extra Trees Classifier Imported successfully
2025-08-05 03:49:18,377:INFO:Starting cross validation
2025-08-05 03:49:18,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:49:19,349:INFO:Calculating mean and std
2025-08-05 03:49:19,350:INFO:Creating metrics dataframe
2025-08-05 03:49:19,351:INFO:Uploading results into container
2025-08-05 03:49:19,351:INFO:Uploading model into container now
2025-08-05 03:49:19,352:INFO:_master_model_container: 2
2025-08-05 03:49:19,352:INFO:_display_container: 2
2025-08-05 03:49:19,352:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 03:49:19,352:INFO:create_model() successfully completed......................................
2025-08-05 03:49:19,439:INFO:SubProcess create_model() end ==================================
2025-08-05 03:49:19,439:INFO:Creating metrics dataframe
2025-08-05 03:49:19,441:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 03:49:19,441:INFO:Total runtime is 0.03998469114303589 minutes
2025-08-05 03:49:19,441:INFO:SubProcess create_model() called ==================================
2025-08-05 03:49:19,441:INFO:Initializing create_model()
2025-08-05 03:49:19,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff062a1090>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:49:19,441:INFO:Checking exceptions
2025-08-05 03:49:19,441:INFO:Importing libraries
2025-08-05 03:49:19,441:INFO:Copying training dataset
2025-08-05 03:49:19,442:INFO:Defining folds
2025-08-05 03:49:19,442:INFO:Declaring metric variables
2025-08-05 03:49:19,443:INFO:Importing untrained model
2025-08-05 03:49:19,443:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 03:49:19,443:INFO:Starting cross validation
2025-08-05 03:49:19,443:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 03:49:33,165:INFO:Calculating mean and std
2025-08-05 03:49:33,166:INFO:Creating metrics dataframe
2025-08-05 03:49:33,167:INFO:Uploading results into container
2025-08-05 03:49:33,167:INFO:Uploading model into container now
2025-08-05 03:49:33,167:INFO:_master_model_container: 3
2025-08-05 03:49:33,167:INFO:_display_container: 2
2025-08-05 03:49:33,167:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 03:49:33,168:INFO:create_model() successfully completed......................................
2025-08-05 03:49:33,255:INFO:SubProcess create_model() end ==================================
2025-08-05 03:49:33,255:INFO:Creating metrics dataframe
2025-08-05 03:49:33,256:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 03:49:33,257:INFO:Initializing create_model()
2025-08-05 03:49:33,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:49:33,257:INFO:Checking exceptions
2025-08-05 03:49:33,258:INFO:Importing libraries
2025-08-05 03:49:33,258:INFO:Copying training dataset
2025-08-05 03:49:33,259:INFO:Defining folds
2025-08-05 03:49:33,259:INFO:Declaring metric variables
2025-08-05 03:49:33,260:INFO:Importing untrained model
2025-08-05 03:49:33,260:INFO:Declaring custom model
2025-08-05 03:49:33,260:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:49:33,260:INFO:Cross validation set to False
2025-08-05 03:49:33,260:INFO:Fitting Model
2025-08-05 03:49:33,351:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:49:33,351:INFO:create_model() successfully completed......................................
2025-08-05 03:49:33,439:INFO:_master_model_container: 3
2025-08-05 03:49:33,439:INFO:_display_container: 2
2025-08-05 03:49:33,439:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:49:33,439:INFO:compare_models() successfully completed......................................
2025-08-05 03:49:33,440:INFO:Initializing finalize_model()
2025-08-05 03:49:33,440:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 03:49:33,440:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 03:49:33,441:INFO:Initializing create_model()
2025-08-05 03:49:33,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 03:49:33,441:INFO:Checking exceptions
2025-08-05 03:49:33,441:INFO:Importing libraries
2025-08-05 03:49:33,442:INFO:Copying training dataset
2025-08-05 03:49:33,442:INFO:Defining folds
2025-08-05 03:49:33,442:INFO:Declaring metric variables
2025-08-05 03:49:33,442:INFO:Importing untrained model
2025-08-05 03:49:33,442:INFO:Declaring custom model
2025-08-05 03:49:33,442:INFO:Random Forest Classifier Imported successfully
2025-08-05 03:49:33,442:INFO:Cross validation set to False
2025-08-05 03:49:33,443:INFO:Fitting Model
2025-08-05 03:49:33,532:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:49:33,532:INFO:create_model() successfully completed......................................
2025-08-05 03:49:33,621:INFO:_master_model_container: 3
2025-08-05 03:49:33,622:INFO:_display_container: 2
2025-08-05 03:49:33,624:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:49:33,624:INFO:finalize_model() successfully completed......................................
2025-08-05 03:49:33,714:INFO:Initializing plot_model()
2025-08-05 03:49:33,714:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff167e73d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-08-05 03:49:33,714:INFO:Checking exceptions
2025-08-05 03:49:33,730:INFO:Preloading libraries
2025-08-05 03:49:33,734:INFO:Copying training dataset
2025-08-05 03:49:33,735:INFO:Plot type: feature
2025-08-05 03:49:33,735:WARNING:No coef_ found. Trying feature_importances_
2025-08-05 03:49:33,768:INFO:Saving 'Feature Importance.png'
2025-08-05 03:49:33,769:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,770:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,770:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,771:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,771:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,771:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,771:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,772:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,772:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,772:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,773:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,774:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,774:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,774:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,775:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,780:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,783:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,787:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,791:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,793:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,797:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,818:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,819:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,820:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,825:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,828:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,828:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,829:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,831:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,836:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,836:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,837:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,839:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,842:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,846:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,849:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,852:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,856:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,856:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,858:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,864:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,864:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,865:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,865:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,865:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,866:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,866:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,867:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,868:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,868:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,868:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,869:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,869:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,869:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,870:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,870:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,870:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,871:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,872:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,872:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,881:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,881:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,882:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,882:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,882:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,882:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,883:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,883:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,883:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,883:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,884:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,885:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,885:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,885:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,885:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,886:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,886:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,886:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,887:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,887:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,887:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,887:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,888:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,888:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,888:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,889:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,890:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,890:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,891:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,891:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,892:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,892:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,892:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,893:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,893:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,893:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,894:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,894:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,895:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 03:49:33,895:INFO:Visual Rendered Successfully
2025-08-05 03:49:33,981:INFO:plot_model() successfully completed......................................
2025-08-05 03:49:33,984:INFO:Initializing save_model()
2025-08-05 03:49:33,984:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 03:49:33,984:INFO:Adding model into prep_pipe
2025-08-05 03:49:33,984:WARNING:Only Model saved as it was a pipeline.
2025-08-05 03:49:34,011:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 03:49:34,012:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=42, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-05 03:49:34,013:INFO:save_model() successfully completed......................................
2025-08-05 03:51:13,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:51:13,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:51:13,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:51:13,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 03:51:14,575:INFO:Initializing load_model()
2025-08-05 03:51:14,575:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 03:51:24,489:INFO:Initializing predict_model()
2025-08-05 03:51:24,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff13b31b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff110f8040>)
2025-08-05 03:51:24,490:INFO:Checking exceptions
2025-08-05 03:51:24,490:INFO:Preloading libraries
2025-08-05 03:51:24,490:INFO:Set up data.
2025-08-05 03:51:24,494:INFO:Set up index.
2025-08-05 03:51:38,761:INFO:Initializing predict_model()
2025-08-05 03:51:38,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff12c939d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff1de0b560>)
2025-08-05 03:51:38,762:INFO:Checking exceptions
2025-08-05 03:51:38,762:INFO:Preloading libraries
2025-08-05 03:51:38,763:INFO:Set up data.
2025-08-05 03:51:38,766:INFO:Set up index.
2025-08-05 03:52:35,665:INFO:Initializing predict_model()
2025-08-05 03:52:35,665:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff12c9d150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 RandomForestClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff1de0b560>)
2025-08-05 03:52:35,666:INFO:Checking exceptions
2025-08-05 03:52:35,666:INFO:Preloading libraries
2025-08-05 03:52:35,666:INFO:Set up data.
2025-08-05 03:52:35,669:INFO:Set up index.
2025-08-05 15:56:49,765:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:56:49,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:56:49,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:56:49,766:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:56:50,253:INFO:PyCaret ClassificationExperiment
2025-08-05 15:56:50,253:INFO:Logging name: clf-default-name
2025-08-05 15:56:50,254:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-05 15:56:50,254:INFO:version 3.3.2
2025-08-05 15:56:50,254:INFO:Initializing setup()
2025-08-05 15:56:50,254:INFO:self.USI: 31ce
2025-08-05 15:56:50,254:INFO:self._variable_keys: {'X_train', 'memory', 'exp_id', 'fold_generator', 'USI', 'X', 'gpu_param', 'logging_param', 'log_plots_param', '_available_plots', 'gpu_n_jobs_param', 'target_param', 'html_param', 'fold_shuffle_param', 'idx', 'exp_name_log', 'data', 'is_multiclass', 'X_test', 'fold_groups_param', 'fix_imbalance', 'y_test', 'y_train', 'n_jobs_param', 'pipeline', '_ml_usecase', 'y', 'seed'}
2025-08-05 15:56:50,254:INFO:Checking environment
2025-08-05 15:56:50,254:INFO:python_version: 3.11.13
2025-08-05 15:56:50,254:INFO:python_build: ('main', 'Jul 23 2025 18:09:53')
2025-08-05 15:56:50,254:INFO:machine: aarch64
2025-08-05 15:56:50,254:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 15:56:50,254:INFO:Memory: svmem(total=17011818496, available=15904948224, percent=6.5, used=834994176, free=5036019712, active=1298210816, inactive=9481535488, buffers=529985536, cached=10610819072, shared=7790592, slab=1074692096)
2025-08-05 15:56:50,255:INFO:Physical Core: 16
2025-08-05 15:56:50,255:INFO:Logical Core: 16
2025-08-05 15:56:50,255:INFO:Checking libraries
2025-08-05 15:56:50,255:INFO:System:
2025-08-05 15:56:50,255:INFO:    python: 3.11.13 (main, Jul 23 2025, 18:09:53) [GCC 12.2.0]
2025-08-05 15:56:50,255:INFO:executable: /usr/local/bin/python
2025-08-05 15:56:50,255:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.36
2025-08-05 15:56:50,255:INFO:PyCaret required dependencies:
2025-08-05 15:56:50,517:INFO:                 pip: 24.0
2025-08-05 15:56:50,517:INFO:          setuptools: 80.9.0
2025-08-05 15:56:50,517:INFO:             pycaret: 3.3.2
2025-08-05 15:56:50,517:INFO:             IPython: 9.4.0
2025-08-05 15:56:50,518:INFO:          ipywidgets: 8.1.7
2025-08-05 15:56:50,518:INFO:                tqdm: 4.67.1
2025-08-05 15:56:50,518:INFO:               numpy: 1.26.4
2025-08-05 15:56:50,518:INFO:              pandas: 2.1.4
2025-08-05 15:56:50,518:INFO:              jinja2: 3.1.6
2025-08-05 15:56:50,518:INFO:               scipy: 1.11.4
2025-08-05 15:56:50,518:INFO:              joblib: 1.3.2
2025-08-05 15:56:50,518:INFO:             sklearn: 1.4.2
2025-08-05 15:56:50,518:INFO:                pyod: 2.0.5
2025-08-05 15:56:50,518:INFO:            imblearn: 0.13.0
2025-08-05 15:56:50,518:INFO:   category_encoders: 2.7.0
2025-08-05 15:56:50,518:INFO:            lightgbm: 4.6.0
2025-08-05 15:56:50,518:INFO:               numba: 0.61.0
2025-08-05 15:56:50,518:INFO:            requests: 2.32.4
2025-08-05 15:56:50,518:INFO:          matplotlib: 3.7.5
2025-08-05 15:56:50,518:INFO:          scikitplot: 0.3.7
2025-08-05 15:56:50,518:INFO:         yellowbrick: 1.5
2025-08-05 15:56:50,518:INFO:              plotly: 5.24.1
2025-08-05 15:56:50,519:INFO:    plotly-resampler: Not installed
2025-08-05 15:56:50,519:INFO:             kaleido: 1.0.0
2025-08-05 15:56:50,519:INFO:           schemdraw: 0.15
2025-08-05 15:56:50,519:INFO:         statsmodels: 0.14.5
2025-08-05 15:56:50,519:INFO:              sktime: 0.26.0
2025-08-05 15:56:50,519:INFO:               tbats: 1.1.3
2025-08-05 15:56:50,519:INFO:            pmdarima: 2.0.4
2025-08-05 15:56:50,519:INFO:              psutil: 7.0.0
2025-08-05 15:56:50,519:INFO:          markupsafe: 3.0.2
2025-08-05 15:56:50,519:INFO:             pickle5: Not installed
2025-08-05 15:56:50,519:INFO:         cloudpickle: 3.1.1
2025-08-05 15:56:50,519:INFO:         deprecation: 2.1.0
2025-08-05 15:56:50,519:INFO:              xxhash: 3.5.0
2025-08-05 15:56:50,519:INFO:           wurlitzer: 3.1.1
2025-08-05 15:56:50,519:INFO:PyCaret optional dependencies:
2025-08-05 15:56:51,554:INFO:                shap: 0.44.1
2025-08-05 15:56:51,555:INFO:           interpret: 0.7.1
2025-08-05 15:56:51,555:INFO:                umap: 0.5.7
2025-08-05 15:56:51,555:INFO:     ydata_profiling: 4.16.1
2025-08-05 15:56:51,555:INFO:  explainerdashboard: 0.5.1
2025-08-05 15:56:51,555:INFO:             autoviz: Not installed
2025-08-05 15:56:51,555:INFO:           fairlearn: 0.7.0
2025-08-05 15:56:51,555:INFO:          deepchecks: Not installed
2025-08-05 15:56:51,555:INFO:             xgboost: 3.0.3
2025-08-05 15:56:51,555:INFO:            catboost: 1.2.8
2025-08-05 15:56:51,555:INFO:              kmodes: 0.12.2
2025-08-05 15:56:51,555:INFO:             mlxtend: 0.23.4
2025-08-05 15:56:51,555:INFO:       statsforecast: 1.5.0
2025-08-05 15:56:51,555:INFO:        tune_sklearn: Not installed
2025-08-05 15:56:51,555:INFO:                 ray: Not installed
2025-08-05 15:56:51,555:INFO:            hyperopt: 0.2.7
2025-08-05 15:56:51,556:INFO:              optuna: 4.4.0
2025-08-05 15:56:51,556:INFO:               skopt: 0.10.2
2025-08-05 15:56:51,556:INFO:              mlflow: 3.1.4
2025-08-05 15:56:51,556:INFO:              gradio: 5.40.0
2025-08-05 15:56:51,556:INFO:             fastapi: 0.116.1
2025-08-05 15:56:51,556:INFO:             uvicorn: 0.35.0
2025-08-05 15:56:51,556:INFO:              m2cgen: 0.10.0
2025-08-05 15:56:51,556:INFO:           evidently: 0.4.40
2025-08-05 15:56:51,556:INFO:               fugue: 0.8.7
2025-08-05 15:56:51,556:INFO:           streamlit: 1.47.1
2025-08-05 15:56:51,556:INFO:             prophet: Not installed
2025-08-05 15:56:51,556:INFO:None
2025-08-05 15:56:51,556:INFO:Set up data.
2025-08-05 15:56:51,559:INFO:Set up folding strategy.
2025-08-05 15:56:51,559:INFO:Set up train/test split.
2025-08-05 15:56:51,561:INFO:Set up index.
2025-08-05 15:56:51,561:INFO:Assigning column types.
2025-08-05 15:56:51,562:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-05 15:56:51,577:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,578:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,589:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,590:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,620:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,621:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,621:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-05 15:56:51,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,645:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,646:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-05 15:56:51,672:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,673:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,673:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-05 15:56:51,698:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,699:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,725:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,726:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,727:INFO:Preparing preprocessing pipeline...
2025-08-05 15:56:51,727:INFO:Set up simple imputation.
2025-08-05 15:56:51,734:INFO:Finished creating preprocessing pipeline.
2025-08-05 15:56:51,735:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-08-05 15:56:51,735:INFO:Creating final display dataframe.
2025-08-05 15:56:51,758:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target             label
2                   Target type            Binary
3           Original data shape         (500, 13)
4        Transformed data shape         (500, 13)
5   Transformed train set shape         (350, 13)
6    Transformed test set shape         (150, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              31ce
2025-08-05 15:56:51,783:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,784:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,809:INFO:Soft dependency imported: xgboost: 3.0.3
2025-08-05 15:56:51,810:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-05 15:56:51,811:INFO:setup() successfully completed in 1.56s...............
2025-08-05 15:56:51,811:INFO:Initializing compare_models()
2025-08-05 15:56:51,811:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, include=['rf', 'et', 'lightgbm'], exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, 'include': ['rf', 'et', 'lightgbm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-05 15:56:51,811:INFO:Checking exceptions
2025-08-05 15:56:51,812:INFO:Preparing display monitor
2025-08-05 15:56:51,814:INFO:Initializing Random Forest Classifier
2025-08-05 15:56:51,814:INFO:Total runtime is 1.3470649719238282e-06 minutes
2025-08-05 15:56:51,814:INFO:SubProcess create_model() called ==================================
2025-08-05 15:56:51,814:INFO:Initializing create_model()
2025-08-05 15:56:51,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xfffef8e54190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 15:56:51,814:INFO:Checking exceptions
2025-08-05 15:56:51,814:INFO:Importing libraries
2025-08-05 15:56:51,814:INFO:Copying training dataset
2025-08-05 15:56:51,816:INFO:Defining folds
2025-08-05 15:56:51,816:INFO:Declaring metric variables
2025-08-05 15:56:51,816:INFO:Importing untrained model
2025-08-05 15:56:51,816:INFO:Random Forest Classifier Imported successfully
2025-08-05 15:56:51,816:INFO:Starting cross validation
2025-08-05 15:56:51,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 15:56:53,061:INFO:Calculating mean and std
2025-08-05 15:56:53,062:INFO:Creating metrics dataframe
2025-08-05 15:56:53,063:INFO:Uploading results into container
2025-08-05 15:56:53,064:INFO:Uploading model into container now
2025-08-05 15:56:53,064:INFO:_master_model_container: 1
2025-08-05 15:56:53,065:INFO:_display_container: 2
2025-08-05 15:56:53,065:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-05 15:56:53,065:INFO:create_model() successfully completed......................................
2025-08-05 15:56:53,160:INFO:SubProcess create_model() end ==================================
2025-08-05 15:56:53,161:INFO:Creating metrics dataframe
2025-08-05 15:56:53,162:INFO:Initializing Extra Trees Classifier
2025-08-05 15:56:53,162:INFO:Total runtime is 0.022471094131469724 minutes
2025-08-05 15:56:53,162:INFO:SubProcess create_model() called ==================================
2025-08-05 15:56:53,162:INFO:Initializing create_model()
2025-08-05 15:56:53,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xfffef8e54190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 15:56:53,162:INFO:Checking exceptions
2025-08-05 15:56:53,162:INFO:Importing libraries
2025-08-05 15:56:53,162:INFO:Copying training dataset
2025-08-05 15:56:53,164:INFO:Defining folds
2025-08-05 15:56:53,164:INFO:Declaring metric variables
2025-08-05 15:56:53,164:INFO:Importing untrained model
2025-08-05 15:56:53,164:INFO:Extra Trees Classifier Imported successfully
2025-08-05 15:56:53,164:INFO:Starting cross validation
2025-08-05 15:56:53,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 15:56:54,129:INFO:Calculating mean and std
2025-08-05 15:56:54,129:INFO:Creating metrics dataframe
2025-08-05 15:56:54,130:INFO:Uploading results into container
2025-08-05 15:56:54,130:INFO:Uploading model into container now
2025-08-05 15:56:54,131:INFO:_master_model_container: 2
2025-08-05 15:56:54,131:INFO:_display_container: 2
2025-08-05 15:56:54,131:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 15:56:54,131:INFO:create_model() successfully completed......................................
2025-08-05 15:56:54,213:INFO:SubProcess create_model() end ==================================
2025-08-05 15:56:54,214:INFO:Creating metrics dataframe
2025-08-05 15:56:54,215:INFO:Initializing Light Gradient Boosting Machine
2025-08-05 15:56:54,215:INFO:Total runtime is 0.040021848678588864 minutes
2025-08-05 15:56:54,215:INFO:SubProcess create_model() called ==================================
2025-08-05 15:56:54,215:INFO:Initializing create_model()
2025-08-05 15:56:54,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xfffef8e54190>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 15:56:54,215:INFO:Checking exceptions
2025-08-05 15:56:54,216:INFO:Importing libraries
2025-08-05 15:56:54,216:INFO:Copying training dataset
2025-08-05 15:56:54,217:INFO:Defining folds
2025-08-05 15:56:54,217:INFO:Declaring metric variables
2025-08-05 15:56:54,217:INFO:Importing untrained model
2025-08-05 15:56:54,217:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-05 15:56:54,217:INFO:Starting cross validation
2025-08-05 15:56:54,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-05 15:57:07,841:INFO:Calculating mean and std
2025-08-05 15:57:07,841:INFO:Creating metrics dataframe
2025-08-05 15:57:07,842:INFO:Uploading results into container
2025-08-05 15:57:07,842:INFO:Uploading model into container now
2025-08-05 15:57:07,842:INFO:_master_model_container: 3
2025-08-05 15:57:07,842:INFO:_display_container: 2
2025-08-05 15:57:07,843:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-05 15:57:07,843:INFO:create_model() successfully completed......................................
2025-08-05 15:57:07,916:INFO:SubProcess create_model() end ==================================
2025-08-05 15:57:07,916:INFO:Creating metrics dataframe
2025-08-05 15:57:07,917:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-05 15:57:07,918:INFO:Initializing create_model()
2025-08-05 15:57:07,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 15:57:07,918:INFO:Checking exceptions
2025-08-05 15:57:07,918:INFO:Importing libraries
2025-08-05 15:57:07,918:INFO:Copying training dataset
2025-08-05 15:57:07,919:INFO:Defining folds
2025-08-05 15:57:07,920:INFO:Declaring metric variables
2025-08-05 15:57:07,920:INFO:Importing untrained model
2025-08-05 15:57:07,920:INFO:Declaring custom model
2025-08-05 15:57:07,920:INFO:Extra Trees Classifier Imported successfully
2025-08-05 15:57:07,920:INFO:Cross validation set to False
2025-08-05 15:57:07,920:INFO:Fitting Model
2025-08-05 15:57:07,982:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 15:57:07,983:INFO:create_model() successfully completed......................................
2025-08-05 15:57:08,069:INFO:_master_model_container: 3
2025-08-05 15:57:08,069:INFO:_display_container: 2
2025-08-05 15:57:08,070:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 15:57:08,070:INFO:compare_models() successfully completed......................................
2025-08-05 15:57:08,070:INFO:Initializing finalize_model()
2025-08-05 15:57:08,070:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-05 15:57:08,070:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-05 15:57:08,071:INFO:Initializing create_model()
2025-08-05 15:57:08,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-05 15:57:08,071:INFO:Checking exceptions
2025-08-05 15:57:08,072:INFO:Importing libraries
2025-08-05 15:57:08,072:INFO:Copying training dataset
2025-08-05 15:57:08,072:INFO:Defining folds
2025-08-05 15:57:08,072:INFO:Declaring metric variables
2025-08-05 15:57:08,072:INFO:Importing untrained model
2025-08-05 15:57:08,072:INFO:Declaring custom model
2025-08-05 15:57:08,073:INFO:Extra Trees Classifier Imported successfully
2025-08-05 15:57:08,073:INFO:Cross validation set to False
2025-08-05 15:57:08,073:INFO:Fitting Model
2025-08-05 15:57:08,137:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-05 15:57:08,137:INFO:create_model() successfully completed......................................
2025-08-05 15:57:08,220:INFO:_master_model_container: 3
2025-08-05 15:57:08,220:INFO:_display_container: 2
2025-08-05 15:57:08,222:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-05 15:57:08,222:INFO:finalize_model() successfully completed......................................
2025-08-05 15:57:08,306:INFO:Initializing plot_model()
2025-08-05 15:57:08,306:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff1a6e34d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False), plot=feature, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-08-05 15:57:08,306:INFO:Checking exceptions
2025-08-05 15:57:08,322:INFO:Preloading libraries
2025-08-05 15:57:08,325:INFO:Copying training dataset
2025-08-05 15:57:08,325:INFO:Plot type: feature
2025-08-05 15:57:08,326:WARNING:No coef_ found. Trying feature_importances_
2025-08-05 15:57:08,358:INFO:Saving 'Feature Importance.png'
2025-08-05 15:57:08,359:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,360:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,360:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,360:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,361:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,361:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,361:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,362:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,362:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,362:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,363:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,364:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,364:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,364:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,365:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,370:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,370:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,373:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,374:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,374:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,376:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,381:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,406:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,406:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,407:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,408:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,408:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,409:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,409:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,410:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,411:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,411:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,411:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,413:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,414:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,414:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,414:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,416:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,417:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,417:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,418:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,418:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,418:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,419:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,420:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,420:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,421:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,422:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,422:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,425:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,425:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,427:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,428:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,429:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,430:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,431:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,431:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,432:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,433:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,435:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,435:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,438:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,439:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,455:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,455:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,456:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,456:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,456:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,456:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,456:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,457:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,457:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,457:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,457:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,458:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,458:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,458:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,459:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,459:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,460:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,460:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,460:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,460:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,460:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,461:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,461:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,461:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,461:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,462:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,462:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,463:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,463:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,464:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,465:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,465:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,466:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,466:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,466:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,467:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,468:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,469:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,469:WARNING:findfont: Generic family 'sans-serif' not found because none of the following families were found: Arial, Liberation Sans, Bitstream Vera Sans, sans-serif
2025-08-05 15:57:08,470:INFO:Visual Rendered Successfully
2025-08-05 15:57:08,555:INFO:plot_model() successfully completed......................................
2025-08-05 15:57:08,558:INFO:Initializing save_model()
2025-08-05 15:57:08,558:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False), model_name=models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-05 15:57:08,558:INFO:Adding model into prep_pipe
2025-08-05 15:57:08,559:WARNING:Only Model saved as it was a pipeline.
2025-08-05 15:57:08,586:INFO:models/phishing_url_detector.pkl saved in current working directory
2025-08-05 15:57:08,587:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer(add_indica...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=42, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-05 15:57:08,587:INFO:save_model() successfully completed......................................
2025-08-05 15:57:18,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:57:18,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:57:18,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:57:18,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 15:57:19,534:INFO:Initializing load_model()
2025-08-05 15:57:19,535:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 15:57:37,857:INFO:Initializing predict_model()
2025-08-05 15:57:37,857:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff980ddad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff1e135f80>)
2025-08-05 15:57:37,857:INFO:Checking exceptions
2025-08-05 15:57:37,858:INFO:Preloading libraries
2025-08-05 15:57:37,858:INFO:Set up data.
2025-08-05 15:57:37,862:INFO:Set up index.
2025-08-05 17:36:00,981:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:10,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:10,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:10,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:10,321:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 17:36:11,466:INFO:Initializing load_model()
2025-08-05 17:36:11,467:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-05 17:36:15,154:INFO:Initializing predict_model()
2025-08-05 17:36:15,155:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa45ddcd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['having_IP_Address', 'URL_Length',
                                             'Shortining_Service',
                                             'having_At_Symbol',
                                             'double_slash_redirecting',
                                             'Prefix_Suffix',
                                             'having_Sub_Domain',
                                             'SSLfinal_State', 'URL_of_Anchor',
                                             'Links_in_tags', 'SFH',
                                             'Abnormal_URL'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 ExtraTreesClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff2987a340>)
2025-08-05 17:36:15,155:INFO:Checking exceptions
2025-08-05 17:36:15,155:INFO:Preloading libraries
2025-08-05 17:36:15,156:INFO:Set up data.
2025-08-05 17:36:15,159:INFO:Set up index.
2025-08-05 19:33:06,295:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:06,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:06,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:06,296:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:21,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:21,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:21,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:21,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-05 19:33:22,466:INFO:Initializing load_model()
2025-08-05 19:33:22,467:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 15:42:59,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:42:59,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:42:59,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:42:59,674:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:46:44,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:46:44,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:46:44,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:46:44,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:46:45,122:INFO:PyCaret ClassificationExperiment
2025-08-13 15:46:45,122:INFO:Logging name: clf-default-name
2025-08-13 15:46:45,122:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 15:46:45,122:INFO:version 3.3.2
2025-08-13 15:46:45,122:INFO:Initializing setup()
2025-08-13 15:46:45,122:INFO:self.USI: 2577
2025-08-13 15:46:45,122:INFO:self._variable_keys: {'_ml_usecase', 'y', 'exp_id', 'html_param', 'fix_imbalance', 'gpu_n_jobs_param', 'memory', 'logging_param', 'X_train', 'gpu_param', 'pipeline', 'y_train', 'log_plots_param', 'exp_name_log', 'fold_generator', 'USI', 'fold_shuffle_param', '_available_plots', 'y_test', 'X', 'n_jobs_param', 'X_test', 'idx', 'fold_groups_param', 'target_param', 'data', 'is_multiclass', 'seed'}
2025-08-13 15:46:45,122:INFO:Checking environment
2025-08-13 15:46:45,122:INFO:python_version: 3.11.13
2025-08-13 15:46:45,122:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:46:45,122:INFO:machine: x86_64
2025-08-13 15:46:45,282:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:46:45,282:INFO:Memory: svmem(total=8589934592, available=529498112, percent=93.8, used=867860480, free=22990848, active=508760064, inactive=479506432, wired=359100416)
2025-08-13 15:46:45,282:INFO:Physical Core: 8
2025-08-13 15:46:45,282:INFO:Logical Core: 8
2025-08-13 15:46:45,282:INFO:Checking libraries
2025-08-13 15:46:45,283:INFO:System:
2025-08-13 15:46:45,283:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:46:45,283:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:46:45,283:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:46:45,283:INFO:PyCaret required dependencies:
2025-08-13 15:46:45,284:INFO:                 pip: 25.1
2025-08-13 15:46:45,284:INFO:          setuptools: 78.1.1
2025-08-13 15:46:45,284:INFO:             pycaret: 3.3.2
2025-08-13 15:46:45,284:INFO:             IPython: 9.4.0
2025-08-13 15:46:45,284:INFO:          ipywidgets: 8.1.7
2025-08-13 15:46:45,284:INFO:                tqdm: 4.67.1
2025-08-13 15:46:45,284:INFO:               numpy: 1.26.4
2025-08-13 15:46:45,284:INFO:              pandas: 2.1.4
2025-08-13 15:46:45,284:INFO:              jinja2: 3.1.6
2025-08-13 15:46:45,284:INFO:               scipy: 1.11.4
2025-08-13 15:46:45,284:INFO:              joblib: 1.3.2
2025-08-13 15:46:45,284:INFO:             sklearn: 1.4.2
2025-08-13 15:46:45,284:INFO:                pyod: 2.0.5
2025-08-13 15:46:45,284:INFO:            imblearn: 0.13.0
2025-08-13 15:46:45,284:INFO:   category_encoders: 2.7.0
2025-08-13 15:46:45,284:INFO:            lightgbm: 4.6.0
2025-08-13 15:46:45,284:INFO:               numba: 0.61.0
2025-08-13 15:46:45,284:INFO:            requests: 2.32.4
2025-08-13 15:46:45,284:INFO:          matplotlib: 3.10.1
2025-08-13 15:46:45,284:INFO:          scikitplot: 0.3.7
2025-08-13 15:46:45,284:INFO:         yellowbrick: 1.5
2025-08-13 15:46:45,284:INFO:              plotly: 5.24.1
2025-08-13 15:46:45,284:INFO:    plotly-resampler: Not installed
2025-08-13 15:46:45,284:INFO:             kaleido: 0.0.0
2025-08-13 15:46:45,284:INFO:           schemdraw: 0.15
2025-08-13 15:46:45,284:INFO:         statsmodels: 0.14.5
2025-08-13 15:46:45,284:INFO:              sktime: 0.26.0
2025-08-13 15:46:45,284:INFO:               tbats: 1.1.3
2025-08-13 15:46:45,284:INFO:            pmdarima: 2.0.4
2025-08-13 15:46:45,284:INFO:              psutil: 7.0.0
2025-08-13 15:46:45,284:INFO:          markupsafe: 3.0.2
2025-08-13 15:46:45,284:INFO:             pickle5: Not installed
2025-08-13 15:46:45,284:INFO:         cloudpickle: 3.1.1
2025-08-13 15:46:45,284:INFO:         deprecation: 2.1.0
2025-08-13 15:46:45,284:INFO:              xxhash: 3.5.0
2025-08-13 15:46:45,284:INFO:           wurlitzer: 3.1.1
2025-08-13 15:46:45,284:INFO:PyCaret optional dependencies:
2025-08-13 15:46:45,290:INFO:                shap: Not installed
2025-08-13 15:46:45,290:INFO:           interpret: Not installed
2025-08-13 15:46:45,290:INFO:                umap: 0.5.9.post2
2025-08-13 15:46:45,290:INFO:     ydata_profiling: Not installed
2025-08-13 15:46:45,290:INFO:  explainerdashboard: Not installed
2025-08-13 15:46:45,290:INFO:             autoviz: Not installed
2025-08-13 15:46:45,290:INFO:           fairlearn: Not installed
2025-08-13 15:46:45,290:INFO:          deepchecks: Not installed
2025-08-13 15:46:45,290:INFO:             xgboost: Not installed
2025-08-13 15:46:45,290:INFO:            catboost: Not installed
2025-08-13 15:46:45,290:INFO:              kmodes: Not installed
2025-08-13 15:46:45,290:INFO:             mlxtend: Not installed
2025-08-13 15:46:45,290:INFO:       statsforecast: Not installed
2025-08-13 15:46:45,290:INFO:        tune_sklearn: Not installed
2025-08-13 15:46:45,290:INFO:                 ray: Not installed
2025-08-13 15:46:45,290:INFO:            hyperopt: Not installed
2025-08-13 15:46:45,290:INFO:              optuna: Not installed
2025-08-13 15:46:45,290:INFO:               skopt: Not installed
2025-08-13 15:46:45,290:INFO:              mlflow: Not installed
2025-08-13 15:46:45,290:INFO:              gradio: Not installed
2025-08-13 15:46:45,290:INFO:             fastapi: Not installed
2025-08-13 15:46:45,290:INFO:             uvicorn: Not installed
2025-08-13 15:46:45,290:INFO:              m2cgen: Not installed
2025-08-13 15:46:45,290:INFO:           evidently: Not installed
2025-08-13 15:46:45,290:INFO:               fugue: Not installed
2025-08-13 15:46:45,290:INFO:           streamlit: Not installed
2025-08-13 15:46:45,290:INFO:             prophet: Not installed
2025-08-13 15:46:45,290:INFO:None
2025-08-13 15:46:45,290:INFO:Set up data.
2025-08-13 15:46:45,297:INFO:Set up folding strategy.
2025-08-13 15:46:45,297:INFO:Set up train/test split.
2025-08-13 15:46:45,680:INFO:Set up index.
2025-08-13 15:46:45,681:INFO:Assigning column types.
2025-08-13 15:46:45,683:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-13 15:46:45,706:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:46:45,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:46:45,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:46:47,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:46:47,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-13 15:46:47,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:46:47,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:46:47,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,866:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-13 15:46:47,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,904:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:47,944:INFO:Preparing preprocessing pipeline...
2025-08-13 15:46:47,945:INFO:Set up label encoding.
2025-08-13 15:46:47,945:INFO:Set up simple imputation.
2025-08-13 15:46:47,947:INFO:Set up encoding of categorical features.
2025-08-13 15:46:47,947:INFO:Set up feature normalization.
2025-08-13 15:46:47,976:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:46:47,979:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:46:47,979:INFO:Creating final display dataframe.
2025-08-13 15:46:48,051:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     2577
2025-08-13 15:46:48,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:48,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:48,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:48,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:48,128:INFO:setup() successfully completed in 3.01s...............
2025-08-13 15:46:48,128:INFO:Initializing compare_models()
2025-08-13 15:46:48,128:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-13 15:46:48,128:INFO:Checking exceptions
2025-08-13 15:46:48,130:INFO:Preparing display monitor
2025-08-13 15:46:48,682:INFO:Initializing Logistic Regression
2025-08-13 15:46:48,682:INFO:Total runtime is 2.868970235188802e-06 minutes
2025-08-13 15:46:48,682:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:48,682:INFO:Initializing create_model()
2025-08-13 15:46:48,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:48,682:INFO:Checking exceptions
2025-08-13 15:46:48,682:INFO:Importing libraries
2025-08-13 15:46:48,682:INFO:Copying training dataset
2025-08-13 15:46:48,685:INFO:Defining folds
2025-08-13 15:46:48,685:INFO:Declaring metric variables
2025-08-13 15:46:48,685:INFO:Importing untrained model
2025-08-13 15:46:48,686:INFO:Logistic Regression Imported successfully
2025-08-13 15:46:48,686:INFO:Starting cross validation
2025-08-13 15:46:48,687:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:50,848:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,848:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,848:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,850:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,852:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,852:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,853:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,854:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,855:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,856:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,857:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,858:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,859:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,860:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,864:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:50,884:INFO:Calculating mean and std
2025-08-13 15:46:50,885:INFO:Creating metrics dataframe
2025-08-13 15:46:50,888:INFO:Uploading results into container
2025-08-13 15:46:50,888:INFO:Uploading model into container now
2025-08-13 15:46:50,889:INFO:_master_model_container: 1
2025-08-13 15:46:50,889:INFO:_display_container: 2
2025-08-13 15:46:50,889:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:46:50,889:INFO:create_model() successfully completed......................................
2025-08-13 15:46:50,965:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:50,965:INFO:Creating metrics dataframe
2025-08-13 15:46:50,966:INFO:Initializing K Neighbors Classifier
2025-08-13 15:46:50,966:INFO:Total runtime is 0.038079798221588135 minutes
2025-08-13 15:46:50,967:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:50,967:INFO:Initializing create_model()
2025-08-13 15:46:50,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:50,967:INFO:Checking exceptions
2025-08-13 15:46:50,967:INFO:Importing libraries
2025-08-13 15:46:50,967:INFO:Copying training dataset
2025-08-13 15:46:50,969:INFO:Defining folds
2025-08-13 15:46:50,969:INFO:Declaring metric variables
2025-08-13 15:46:50,969:INFO:Importing untrained model
2025-08-13 15:46:50,970:INFO:K Neighbors Classifier Imported successfully
2025-08-13 15:46:50,970:INFO:Starting cross validation
2025-08-13 15:46:50,970:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:51,092:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,095:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,099:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,104:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,108:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,115:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,130:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,134:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:51,137:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,415:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,419:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,425:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,444:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,448:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,452:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,469:INFO:Calculating mean and std
2025-08-13 15:46:52,469:INFO:Creating metrics dataframe
2025-08-13 15:46:52,471:INFO:Uploading results into container
2025-08-13 15:46:52,471:INFO:Uploading model into container now
2025-08-13 15:46:52,471:INFO:_master_model_container: 2
2025-08-13 15:46:52,471:INFO:_display_container: 2
2025-08-13 15:46:52,472:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-13 15:46:52,472:INFO:create_model() successfully completed......................................
2025-08-13 15:46:52,511:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:52,511:INFO:Creating metrics dataframe
2025-08-13 15:46:52,512:INFO:Initializing Naive Bayes
2025-08-13 15:46:52,512:INFO:Total runtime is 0.06383808056513468 minutes
2025-08-13 15:46:52,512:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:52,512:INFO:Initializing create_model()
2025-08-13 15:46:52,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:52,512:INFO:Checking exceptions
2025-08-13 15:46:52,512:INFO:Importing libraries
2025-08-13 15:46:52,512:INFO:Copying training dataset
2025-08-13 15:46:52,515:INFO:Defining folds
2025-08-13 15:46:52,515:INFO:Declaring metric variables
2025-08-13 15:46:52,515:INFO:Importing untrained model
2025-08-13 15:46:52,515:INFO:Naive Bayes Imported successfully
2025-08-13 15:46:52,515:INFO:Starting cross validation
2025-08-13 15:46:52,516:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:52,556:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,563:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,563:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,563:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,565:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,566:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,567:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,569:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,570:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,570:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,570:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,573:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,574:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,575:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,578:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,591:INFO:Calculating mean and std
2025-08-13 15:46:52,591:INFO:Creating metrics dataframe
2025-08-13 15:46:52,592:INFO:Uploading results into container
2025-08-13 15:46:52,592:INFO:Uploading model into container now
2025-08-13 15:46:52,592:INFO:_master_model_container: 3
2025-08-13 15:46:52,592:INFO:_display_container: 2
2025-08-13 15:46:52,593:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-13 15:46:52,593:INFO:create_model() successfully completed......................................
2025-08-13 15:46:52,626:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:52,626:INFO:Creating metrics dataframe
2025-08-13 15:46:52,627:INFO:Initializing Decision Tree Classifier
2025-08-13 15:46:52,627:INFO:Total runtime is 0.06576346556345622 minutes
2025-08-13 15:46:52,628:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:52,628:INFO:Initializing create_model()
2025-08-13 15:46:52,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:52,628:INFO:Checking exceptions
2025-08-13 15:46:52,628:INFO:Importing libraries
2025-08-13 15:46:52,628:INFO:Copying training dataset
2025-08-13 15:46:52,630:INFO:Defining folds
2025-08-13 15:46:52,630:INFO:Declaring metric variables
2025-08-13 15:46:52,630:INFO:Importing untrained model
2025-08-13 15:46:52,631:INFO:Decision Tree Classifier Imported successfully
2025-08-13 15:46:52,631:INFO:Starting cross validation
2025-08-13 15:46:52,631:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:52,674:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,674:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,677:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,678:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,678:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,680:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,681:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,681:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,682:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,683:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,685:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:52,688:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:53,900:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:53,904:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:53,907:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:53,921:INFO:Calculating mean and std
2025-08-13 15:46:53,921:INFO:Creating metrics dataframe
2025-08-13 15:46:53,922:INFO:Uploading results into container
2025-08-13 15:46:53,922:INFO:Uploading model into container now
2025-08-13 15:46:53,922:INFO:_master_model_container: 4
2025-08-13 15:46:53,922:INFO:_display_container: 2
2025-08-13 15:46:53,922:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-13 15:46:53,922:INFO:create_model() successfully completed......................................
2025-08-13 15:46:53,958:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:53,958:INFO:Creating metrics dataframe
2025-08-13 15:46:53,959:INFO:Initializing SVM - Linear Kernel
2025-08-13 15:46:53,959:INFO:Total runtime is 0.08796112934748332 minutes
2025-08-13 15:46:53,959:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:53,959:INFO:Initializing create_model()
2025-08-13 15:46:53,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:53,959:INFO:Checking exceptions
2025-08-13 15:46:53,959:INFO:Importing libraries
2025-08-13 15:46:53,960:INFO:Copying training dataset
2025-08-13 15:46:53,962:INFO:Defining folds
2025-08-13 15:46:53,962:INFO:Declaring metric variables
2025-08-13 15:46:53,962:INFO:Importing untrained model
2025-08-13 15:46:53,962:INFO:SVM - Linear Kernel Imported successfully
2025-08-13 15:46:53,962:INFO:Starting cross validation
2025-08-13 15:46:53,963:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,017:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,018:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,021:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,022:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,024:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,025:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,026:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,026:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,028:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,029:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,030:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,032:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,033:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,034:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,036:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,053:INFO:Calculating mean and std
2025-08-13 15:46:54,054:INFO:Creating metrics dataframe
2025-08-13 15:46:54,055:INFO:Uploading results into container
2025-08-13 15:46:54,055:INFO:Uploading model into container now
2025-08-13 15:46:54,055:INFO:_master_model_container: 5
2025-08-13 15:46:54,055:INFO:_display_container: 2
2025-08-13 15:46:54,055:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-13 15:46:54,055:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,090:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,091:INFO:Creating metrics dataframe
2025-08-13 15:46:54,092:INFO:Initializing Ridge Classifier
2025-08-13 15:46:54,092:INFO:Total runtime is 0.09016822973887126 minutes
2025-08-13 15:46:54,092:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,092:INFO:Initializing create_model()
2025-08-13 15:46:54,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,092:INFO:Checking exceptions
2025-08-13 15:46:54,092:INFO:Importing libraries
2025-08-13 15:46:54,092:INFO:Copying training dataset
2025-08-13 15:46:54,095:INFO:Defining folds
2025-08-13 15:46:54,095:INFO:Declaring metric variables
2025-08-13 15:46:54,095:INFO:Importing untrained model
2025-08-13 15:46:54,095:INFO:Ridge Classifier Imported successfully
2025-08-13 15:46:54,095:INFO:Starting cross validation
2025-08-13 15:46:54,095:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,138:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,139:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,139:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,141:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,143:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,143:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,145:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,146:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,146:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,146:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,150:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,153:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,153:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,157:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,160:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,172:INFO:Calculating mean and std
2025-08-13 15:46:54,172:INFO:Creating metrics dataframe
2025-08-13 15:46:54,173:INFO:Uploading results into container
2025-08-13 15:46:54,173:INFO:Uploading model into container now
2025-08-13 15:46:54,173:INFO:_master_model_container: 6
2025-08-13 15:46:54,173:INFO:_display_container: 2
2025-08-13 15:46:54,173:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-13 15:46:54,173:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,205:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,205:INFO:Creating metrics dataframe
2025-08-13 15:46:54,207:INFO:Initializing Random Forest Classifier
2025-08-13 15:46:54,207:INFO:Total runtime is 0.09208398262659709 minutes
2025-08-13 15:46:54,207:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,207:INFO:Initializing create_model()
2025-08-13 15:46:54,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,207:INFO:Checking exceptions
2025-08-13 15:46:54,207:INFO:Importing libraries
2025-08-13 15:46:54,207:INFO:Copying training dataset
2025-08-13 15:46:54,210:INFO:Defining folds
2025-08-13 15:46:54,210:INFO:Declaring metric variables
2025-08-13 15:46:54,210:INFO:Importing untrained model
2025-08-13 15:46:54,210:INFO:Random Forest Classifier Imported successfully
2025-08-13 15:46:54,210:INFO:Starting cross validation
2025-08-13 15:46:54,210:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,405:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,409:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,411:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,414:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,415:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,419:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,424:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,427:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,428:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,430:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,432:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,433:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,434:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,436:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,440:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,446:INFO:Calculating mean and std
2025-08-13 15:46:54,446:INFO:Creating metrics dataframe
2025-08-13 15:46:54,447:INFO:Uploading results into container
2025-08-13 15:46:54,447:INFO:Uploading model into container now
2025-08-13 15:46:54,447:INFO:_master_model_container: 7
2025-08-13 15:46:54,447:INFO:_display_container: 2
2025-08-13 15:46:54,447:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-13 15:46:54,447:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,482:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,482:INFO:Creating metrics dataframe
2025-08-13 15:46:54,483:INFO:Initializing Quadratic Discriminant Analysis
2025-08-13 15:46:54,483:INFO:Total runtime is 0.0966961145401001 minutes
2025-08-13 15:46:54,483:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,484:INFO:Initializing create_model()
2025-08-13 15:46:54,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,484:INFO:Checking exceptions
2025-08-13 15:46:54,484:INFO:Importing libraries
2025-08-13 15:46:54,484:INFO:Copying training dataset
2025-08-13 15:46:54,486:INFO:Defining folds
2025-08-13 15:46:54,486:INFO:Declaring metric variables
2025-08-13 15:46:54,486:INFO:Importing untrained model
2025-08-13 15:46:54,487:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-13 15:46:54,487:INFO:Starting cross validation
2025-08-13 15:46:54,487:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,514:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:46:54,519:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:46:54,520:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:46:54,522:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:46:54,526:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:46:54,526:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:46:54,526:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:46:54,528:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:46:54,528:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:46:54,528:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:46:54,530:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:46:54,531:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-13 15:46:54,533:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,533:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,537:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,537:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,537:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,539:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:54,541:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,541:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,541:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,544:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,546:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,549:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,549:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,553:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,553:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,557:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,567:INFO:Calculating mean and std
2025-08-13 15:46:54,567:INFO:Creating metrics dataframe
2025-08-13 15:46:54,568:INFO:Uploading results into container
2025-08-13 15:46:54,568:INFO:Uploading model into container now
2025-08-13 15:46:54,568:INFO:_master_model_container: 8
2025-08-13 15:46:54,568:INFO:_display_container: 2
2025-08-13 15:46:54,569:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-13 15:46:54,569:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,604:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,604:INFO:Creating metrics dataframe
2025-08-13 15:46:54,605:INFO:Initializing Ada Boost Classifier
2025-08-13 15:46:54,605:INFO:Total runtime is 0.09871888160705566 minutes
2025-08-13 15:46:54,605:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,605:INFO:Initializing create_model()
2025-08-13 15:46:54,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,605:INFO:Checking exceptions
2025-08-13 15:46:54,605:INFO:Importing libraries
2025-08-13 15:46:54,605:INFO:Copying training dataset
2025-08-13 15:46:54,608:INFO:Defining folds
2025-08-13 15:46:54,608:INFO:Declaring metric variables
2025-08-13 15:46:54,608:INFO:Importing untrained model
2025-08-13 15:46:54,608:INFO:Ada Boost Classifier Imported successfully
2025-08-13 15:46:54,608:INFO:Starting cross validation
2025-08-13 15:46:54,608:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,634:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:46:54,634:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:46:54,635:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:46:54,649:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:46:54,657:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,658:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:46:54,658:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,662:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,663:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,664:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,668:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,668:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,672:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,674:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,677:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,679:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,681:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,683:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,685:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,687:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,697:INFO:Calculating mean and std
2025-08-13 15:46:54,697:INFO:Creating metrics dataframe
2025-08-13 15:46:54,698:INFO:Uploading results into container
2025-08-13 15:46:54,698:INFO:Uploading model into container now
2025-08-13 15:46:54,698:INFO:_master_model_container: 9
2025-08-13 15:46:54,699:INFO:_display_container: 2
2025-08-13 15:46:54,699:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-13 15:46:54,699:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,738:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,738:INFO:Creating metrics dataframe
2025-08-13 15:46:54,739:INFO:Initializing Gradient Boosting Classifier
2025-08-13 15:46:54,739:INFO:Total runtime is 0.10095693270365397 minutes
2025-08-13 15:46:54,739:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,739:INFO:Initializing create_model()
2025-08-13 15:46:54,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,739:INFO:Checking exceptions
2025-08-13 15:46:54,739:INFO:Importing libraries
2025-08-13 15:46:54,739:INFO:Copying training dataset
2025-08-13 15:46:54,742:INFO:Defining folds
2025-08-13 15:46:54,742:INFO:Declaring metric variables
2025-08-13 15:46:54,742:INFO:Importing untrained model
2025-08-13 15:46:54,742:INFO:Gradient Boosting Classifier Imported successfully
2025-08-13 15:46:54,742:INFO:Starting cross validation
2025-08-13 15:46:54,743:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:54,894:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,897:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,899:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,901:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,902:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,903:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,905:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,906:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,906:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,909:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,910:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,912:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,914:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,917:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,921:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:54,931:INFO:Calculating mean and std
2025-08-13 15:46:54,931:INFO:Creating metrics dataframe
2025-08-13 15:46:54,932:INFO:Uploading results into container
2025-08-13 15:46:54,932:INFO:Uploading model into container now
2025-08-13 15:46:54,932:INFO:_master_model_container: 10
2025-08-13 15:46:54,932:INFO:_display_container: 2
2025-08-13 15:46:54,932:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-13 15:46:54,932:INFO:create_model() successfully completed......................................
2025-08-13 15:46:54,965:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:54,965:INFO:Creating metrics dataframe
2025-08-13 15:46:54,966:INFO:Initializing Linear Discriminant Analysis
2025-08-13 15:46:54,966:INFO:Total runtime is 0.10473403533299763 minutes
2025-08-13 15:46:54,966:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:54,966:INFO:Initializing create_model()
2025-08-13 15:46:54,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:54,966:INFO:Checking exceptions
2025-08-13 15:46:54,966:INFO:Importing libraries
2025-08-13 15:46:54,966:INFO:Copying training dataset
2025-08-13 15:46:54,969:INFO:Defining folds
2025-08-13 15:46:54,969:INFO:Declaring metric variables
2025-08-13 15:46:54,969:INFO:Importing untrained model
2025-08-13 15:46:54,969:INFO:Linear Discriminant Analysis Imported successfully
2025-08-13 15:46:54,969:INFO:Starting cross validation
2025-08-13 15:46:54,969:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:55,012:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,015:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,016:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,016:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,018:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,020:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,020:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,023:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,023:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,024:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,026:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,027:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,030:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,031:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,034:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,047:INFO:Calculating mean and std
2025-08-13 15:46:55,047:INFO:Creating metrics dataframe
2025-08-13 15:46:55,048:INFO:Uploading results into container
2025-08-13 15:46:55,048:INFO:Uploading model into container now
2025-08-13 15:46:55,048:INFO:_master_model_container: 11
2025-08-13 15:46:55,048:INFO:_display_container: 2
2025-08-13 15:46:55,048:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-13 15:46:55,048:INFO:create_model() successfully completed......................................
2025-08-13 15:46:55,080:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:55,080:INFO:Creating metrics dataframe
2025-08-13 15:46:55,081:INFO:Initializing Extra Trees Classifier
2025-08-13 15:46:55,081:INFO:Total runtime is 0.10666304826736449 minutes
2025-08-13 15:46:55,081:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:55,082:INFO:Initializing create_model()
2025-08-13 15:46:55,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:55,082:INFO:Checking exceptions
2025-08-13 15:46:55,082:INFO:Importing libraries
2025-08-13 15:46:55,082:INFO:Copying training dataset
2025-08-13 15:46:55,085:INFO:Defining folds
2025-08-13 15:46:55,085:INFO:Declaring metric variables
2025-08-13 15:46:55,085:INFO:Importing untrained model
2025-08-13 15:46:55,085:INFO:Extra Trees Classifier Imported successfully
2025-08-13 15:46:55,085:INFO:Starting cross validation
2025-08-13 15:46:55,085:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:55,248:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,251:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,253:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,255:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,256:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,257:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,260:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,260:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,261:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,264:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,264:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,267:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,267:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,271:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,275:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,281:INFO:Calculating mean and std
2025-08-13 15:46:55,281:INFO:Creating metrics dataframe
2025-08-13 15:46:55,282:INFO:Uploading results into container
2025-08-13 15:46:55,282:INFO:Uploading model into container now
2025-08-13 15:46:55,282:INFO:_master_model_container: 12
2025-08-13 15:46:55,282:INFO:_display_container: 2
2025-08-13 15:46:55,282:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-13 15:46:55,282:INFO:create_model() successfully completed......................................
2025-08-13 15:46:55,314:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:55,314:INFO:Creating metrics dataframe
2025-08-13 15:46:55,315:INFO:Initializing Light Gradient Boosting Machine
2025-08-13 15:46:55,315:INFO:Total runtime is 0.11055951515833536 minutes
2025-08-13 15:46:55,315:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:55,315:INFO:Initializing create_model()
2025-08-13 15:46:55,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:55,315:INFO:Checking exceptions
2025-08-13 15:46:55,315:INFO:Importing libraries
2025-08-13 15:46:55,315:INFO:Copying training dataset
2025-08-13 15:46:55,318:INFO:Defining folds
2025-08-13 15:46:55,318:INFO:Declaring metric variables
2025-08-13 15:46:55,318:INFO:Importing untrained model
2025-08-13 15:46:55,319:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-13 15:46:55,319:INFO:Starting cross validation
2025-08-13 15:46:55,319:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:55,719:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,722:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,726:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,736:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,740:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,744:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,747:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,748:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,751:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,752:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,754:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,754:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,756:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,757:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,761:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,776:INFO:Calculating mean and std
2025-08-13 15:46:55,777:INFO:Creating metrics dataframe
2025-08-13 15:46:55,778:INFO:Uploading results into container
2025-08-13 15:46:55,778:INFO:Uploading model into container now
2025-08-13 15:46:55,778:INFO:_master_model_container: 13
2025-08-13 15:46:55,778:INFO:_display_container: 2
2025-08-13 15:46:55,778:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-13 15:46:55,778:INFO:create_model() successfully completed......................................
2025-08-13 15:46:55,814:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:55,814:INFO:Creating metrics dataframe
2025-08-13 15:46:55,815:INFO:Initializing Dummy Classifier
2025-08-13 15:46:55,815:INFO:Total runtime is 0.11889659961064655 minutes
2025-08-13 15:46:55,815:INFO:SubProcess create_model() called ==================================
2025-08-13 15:46:55,816:INFO:Initializing create_model()
2025-08-13 15:46:55,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x173c8f2d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:55,816:INFO:Checking exceptions
2025-08-13 15:46:55,816:INFO:Importing libraries
2025-08-13 15:46:55,816:INFO:Copying training dataset
2025-08-13 15:46:55,819:INFO:Defining folds
2025-08-13 15:46:55,819:INFO:Declaring metric variables
2025-08-13 15:46:55,819:INFO:Importing untrained model
2025-08-13 15:46:55,819:INFO:Dummy Classifier Imported successfully
2025-08-13 15:46:55,819:INFO:Starting cross validation
2025-08-13 15:46:55,819:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:46:55,858:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,861:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,862:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,864:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:55,865:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,866:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,867:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:55,869:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,872:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,876:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,878:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:55,878:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,879:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,880:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,882:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,884:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,884:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:55,885:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,885:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:46:55,887:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:46:55,900:INFO:Calculating mean and std
2025-08-13 15:46:55,901:INFO:Creating metrics dataframe
2025-08-13 15:46:55,902:INFO:Uploading results into container
2025-08-13 15:46:55,902:INFO:Uploading model into container now
2025-08-13 15:46:55,902:INFO:_master_model_container: 14
2025-08-13 15:46:55,902:INFO:_display_container: 2
2025-08-13 15:46:55,902:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-13 15:46:55,902:INFO:create_model() successfully completed......................................
2025-08-13 15:46:55,938:INFO:SubProcess create_model() end ==================================
2025-08-13 15:46:55,938:INFO:Creating metrics dataframe
2025-08-13 15:46:55,941:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-08-13 15:46:55,942:INFO:Initializing create_model()
2025-08-13 15:46:55,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:55,942:INFO:Checking exceptions
2025-08-13 15:46:55,942:INFO:Importing libraries
2025-08-13 15:46:55,942:INFO:Copying training dataset
2025-08-13 15:46:55,945:INFO:Defining folds
2025-08-13 15:46:55,945:INFO:Declaring metric variables
2025-08-13 15:46:55,945:INFO:Importing untrained model
2025-08-13 15:46:55,945:INFO:Declaring custom model
2025-08-13 15:46:55,945:INFO:Logistic Regression Imported successfully
2025-08-13 15:46:55,946:INFO:Cross validation set to False
2025-08-13 15:46:55,946:INFO:Fitting Model
2025-08-13 15:46:55,965:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:46:55,965:INFO:create_model() successfully completed......................................
2025-08-13 15:46:56,009:INFO:_master_model_container: 14
2025-08-13 15:46:56,009:INFO:_display_container: 2
2025-08-13 15:46:56,009:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:46:56,009:INFO:compare_models() successfully completed......................................
2025-08-13 15:46:56,009:INFO:Initializing finalize_model()
2025-08-13 15:46:56,009:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-13 15:46:56,009:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:46:56,011:INFO:Initializing create_model()
2025-08-13 15:46:56,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x164ca60d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:46:56,011:INFO:Checking exceptions
2025-08-13 15:46:56,011:INFO:Importing libraries
2025-08-13 15:46:56,011:INFO:Copying training dataset
2025-08-13 15:46:56,011:INFO:Defining folds
2025-08-13 15:46:56,012:INFO:Declaring metric variables
2025-08-13 15:46:56,012:INFO:Importing untrained model
2025-08-13 15:46:56,012:INFO:Declaring custom model
2025-08-13 15:46:56,012:INFO:Logistic Regression Imported successfully
2025-08-13 15:46:56,012:INFO:Cross validation set to False
2025-08-13 15:46:56,012:INFO:Fitting Model
2025-08-13 15:46:56,036:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:46:56,036:INFO:create_model() successfully completed......................................
2025-08-13 15:46:56,070:INFO:_master_model_container: 14
2025-08-13 15:46:56,071:INFO:_display_container: 2
2025-08-13 15:46:56,074:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:46:56,074:INFO:finalize_model() successfully completed......................................
2025-08-13 15:46:56,112:INFO:Initializing save_model()
2025-08-13 15:46:56,112:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-13 15:46:56,112:INFO:Adding model into prep_pipe
2025-08-13 15:46:56,112:WARNING:Only Model saved as it was a pipeline.
2025-08-13 15:46:56,115:INFO:/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector.pkl saved in current working directory
2025-08-13 15:46:56,118:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:46:56,118:INFO:save_model() successfully completed......................................
2025-08-13 15:46:56,154:INFO:PyCaret ClusteringExperiment
2025-08-13 15:46:56,154:INFO:Logging name: cluster-default-name
2025-08-13 15:46:56,154:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-13 15:46:56,154:INFO:version 3.3.2
2025-08-13 15:46:56,154:INFO:Initializing setup()
2025-08-13 15:46:56,154:INFO:self.USI: 8c96
2025-08-13 15:46:56,154:INFO:self._variable_keys: {'_ml_usecase', 'exp_id', 'html_param', 'gpu_n_jobs_param', 'memory', 'logging_param', 'gpu_param', 'pipeline', 'log_plots_param', 'exp_name_log', 'USI', '_available_plots', 'X', 'n_jobs_param', 'idx', 'data', 'seed'}
2025-08-13 15:46:56,154:INFO:Checking environment
2025-08-13 15:46:56,154:INFO:python_version: 3.11.13
2025-08-13 15:46:56,154:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:46:56,154:INFO:machine: x86_64
2025-08-13 15:46:56,154:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:46:56,154:INFO:Memory: svmem(total=8589934592, available=411648000, percent=95.2, used=761815040, free=15777792, active=396529664, inactive=390832128, wired=365285376)
2025-08-13 15:46:56,154:INFO:Physical Core: 8
2025-08-13 15:46:56,154:INFO:Logical Core: 8
2025-08-13 15:46:56,154:INFO:Checking libraries
2025-08-13 15:46:56,154:INFO:System:
2025-08-13 15:46:56,154:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:46:56,154:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:46:56,154:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:46:56,154:INFO:PyCaret required dependencies:
2025-08-13 15:46:56,154:INFO:                 pip: 25.1
2025-08-13 15:46:56,154:INFO:          setuptools: 78.1.1
2025-08-13 15:46:56,154:INFO:             pycaret: 3.3.2
2025-08-13 15:46:56,154:INFO:             IPython: 9.4.0
2025-08-13 15:46:56,154:INFO:          ipywidgets: 8.1.7
2025-08-13 15:46:56,154:INFO:                tqdm: 4.67.1
2025-08-13 15:46:56,154:INFO:               numpy: 1.26.4
2025-08-13 15:46:56,154:INFO:              pandas: 2.1.4
2025-08-13 15:46:56,154:INFO:              jinja2: 3.1.6
2025-08-13 15:46:56,154:INFO:               scipy: 1.11.4
2025-08-13 15:46:56,154:INFO:              joblib: 1.3.2
2025-08-13 15:46:56,154:INFO:             sklearn: 1.4.2
2025-08-13 15:46:56,154:INFO:                pyod: 2.0.5
2025-08-13 15:46:56,154:INFO:            imblearn: 0.13.0
2025-08-13 15:46:56,154:INFO:   category_encoders: 2.7.0
2025-08-13 15:46:56,154:INFO:            lightgbm: 4.6.0
2025-08-13 15:46:56,154:INFO:               numba: 0.61.0
2025-08-13 15:46:56,154:INFO:            requests: 2.32.4
2025-08-13 15:46:56,154:INFO:          matplotlib: 3.10.1
2025-08-13 15:46:56,154:INFO:          scikitplot: 0.3.7
2025-08-13 15:46:56,154:INFO:         yellowbrick: 1.5
2025-08-13 15:46:56,154:INFO:              plotly: 5.24.1
2025-08-13 15:46:56,154:INFO:    plotly-resampler: Not installed
2025-08-13 15:46:56,154:INFO:             kaleido: 0.0.0
2025-08-13 15:46:56,154:INFO:           schemdraw: 0.15
2025-08-13 15:46:56,154:INFO:         statsmodels: 0.14.5
2025-08-13 15:46:56,154:INFO:              sktime: 0.26.0
2025-08-13 15:46:56,154:INFO:               tbats: 1.1.3
2025-08-13 15:46:56,154:INFO:            pmdarima: 2.0.4
2025-08-13 15:46:56,154:INFO:              psutil: 7.0.0
2025-08-13 15:46:56,154:INFO:          markupsafe: 3.0.2
2025-08-13 15:46:56,154:INFO:             pickle5: Not installed
2025-08-13 15:46:56,154:INFO:         cloudpickle: 3.1.1
2025-08-13 15:46:56,154:INFO:         deprecation: 2.1.0
2025-08-13 15:46:56,154:INFO:              xxhash: 3.5.0
2025-08-13 15:46:56,154:INFO:           wurlitzer: 3.1.1
2025-08-13 15:46:56,154:INFO:PyCaret optional dependencies:
2025-08-13 15:46:56,154:INFO:                shap: Not installed
2025-08-13 15:46:56,154:INFO:           interpret: Not installed
2025-08-13 15:46:56,154:INFO:                umap: 0.5.9.post2
2025-08-13 15:46:56,154:INFO:     ydata_profiling: Not installed
2025-08-13 15:46:56,154:INFO:  explainerdashboard: Not installed
2025-08-13 15:46:56,154:INFO:             autoviz: Not installed
2025-08-13 15:46:56,154:INFO:           fairlearn: Not installed
2025-08-13 15:46:56,154:INFO:          deepchecks: Not installed
2025-08-13 15:46:56,154:INFO:             xgboost: Not installed
2025-08-13 15:46:56,154:INFO:            catboost: Not installed
2025-08-13 15:46:56,154:INFO:              kmodes: Not installed
2025-08-13 15:46:56,154:INFO:             mlxtend: Not installed
2025-08-13 15:46:56,154:INFO:       statsforecast: Not installed
2025-08-13 15:46:56,154:INFO:        tune_sklearn: Not installed
2025-08-13 15:46:56,154:INFO:                 ray: Not installed
2025-08-13 15:46:56,154:INFO:            hyperopt: Not installed
2025-08-13 15:46:56,155:INFO:              optuna: Not installed
2025-08-13 15:46:56,155:INFO:               skopt: Not installed
2025-08-13 15:46:56,155:INFO:              mlflow: Not installed
2025-08-13 15:46:56,155:INFO:              gradio: Not installed
2025-08-13 15:46:56,155:INFO:             fastapi: Not installed
2025-08-13 15:46:56,155:INFO:             uvicorn: Not installed
2025-08-13 15:46:56,155:INFO:              m2cgen: Not installed
2025-08-13 15:46:56,155:INFO:           evidently: Not installed
2025-08-13 15:46:56,155:INFO:               fugue: Not installed
2025-08-13 15:46:56,155:INFO:           streamlit: Not installed
2025-08-13 15:46:56,155:INFO:             prophet: Not installed
2025-08-13 15:46:56,155:INFO:None
2025-08-13 15:46:56,155:INFO:Set up data.
2025-08-13 15:46:56,156:INFO:Set up index.
2025-08-13 15:46:56,156:INFO:Assigning column types.
2025-08-13 15:46:56,157:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-13 15:46:56,157:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:46:56,157:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,157:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:46:56,157:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,157:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-13 15:46:56,157:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,157:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,158:INFO:Preparing preprocessing pipeline...
2025-08-13 15:46:56,158:INFO:Set up simple imputation.
2025-08-13 15:46:56,158:INFO:Set up feature normalization.
2025-08-13 15:46:56,164:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:46:56,166:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    trans...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:46:56,166:INFO:Creating final display dataframe.
2025-08-13 15:46:56,177:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  8c96
2025-08-13 15:46:56,177:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,177:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:46:56,177:INFO:setup() successfully completed in 0.02s...............
2025-08-13 15:46:56,177:INFO:Initializing create_model()
2025-08-13 15:46:56,177:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x173979e50>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-13 15:46:56,177:INFO:Checking exceptions
2025-08-13 15:46:56,184:INFO:Importing untrained model
2025-08-13 15:46:56,184:INFO:K-Means Clustering Imported successfully
2025-08-13 15:46:56,184:INFO:Fitting Model
2025-08-13 15:46:56,320:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:46:56,320:INFO:create_models() successfully completed......................................
2025-08-13 15:46:56,320:INFO:Uploading results into container
2025-08-13 15:46:56,321:INFO:Uploading model into container now
2025-08-13 15:46:56,324:INFO:_master_model_container: 1
2025-08-13 15:46:56,324:INFO:_display_container: 2
2025-08-13 15:46:56,324:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:46:56,324:INFO:create_model() successfully completed......................................
2025-08-13 15:46:56,372:INFO:Initializing assign_model()
2025-08-13 15:46:56,372:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x173979e50>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-13 15:46:56,372:INFO:Checking exceptions
2025-08-13 15:46:56,372:INFO:Determining Trained Model
2025-08-13 15:46:56,372:INFO:Trained Model : K-Means Clustering
2025-08-13 15:46:56,372:INFO:Copying data
2025-08-13 15:46:56,373:INFO:(3000, 12)
2025-08-13 15:46:56,373:INFO:assign_model() successfully completed......................................
2025-08-13 15:50:26,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:50:26,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:50:26,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:50:26,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:50:27,143:INFO:PyCaret ClassificationExperiment
2025-08-13 15:50:27,143:INFO:Logging name: clf-default-name
2025-08-13 15:50:27,143:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 15:50:27,143:INFO:version 3.3.2
2025-08-13 15:50:27,143:INFO:Initializing setup()
2025-08-13 15:50:27,143:INFO:self.USI: 1626
2025-08-13 15:50:27,143:INFO:self._variable_keys: {'fix_imbalance', 'n_jobs_param', 'y', 'target_param', 'data', 'exp_name_log', 'html_param', 'X_train', 'gpu_n_jobs_param', 'fold_generator', '_ml_usecase', 'USI', 'log_plots_param', 'y_test', 'X_test', 'memory', 'X', 'y_train', 'is_multiclass', '_available_plots', 'gpu_param', 'logging_param', 'exp_id', 'pipeline', 'fold_groups_param', 'idx', 'fold_shuffle_param', 'seed'}
2025-08-13 15:50:27,143:INFO:Checking environment
2025-08-13 15:50:27,143:INFO:python_version: 3.11.13
2025-08-13 15:50:27,143:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:50:27,143:INFO:machine: x86_64
2025-08-13 15:50:27,180:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:50:27,180:INFO:Memory: svmem(total=8589934592, available=524488704, percent=93.9, used=861761536, free=18251776, active=506486784, inactive=480260096, wired=355274752)
2025-08-13 15:50:27,180:INFO:Physical Core: 8
2025-08-13 15:50:27,180:INFO:Logical Core: 8
2025-08-13 15:50:27,180:INFO:Checking libraries
2025-08-13 15:50:27,180:INFO:System:
2025-08-13 15:50:27,180:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:50:27,180:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:50:27,180:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:50:27,180:INFO:PyCaret required dependencies:
2025-08-13 15:50:27,181:INFO:                 pip: 25.1
2025-08-13 15:50:27,181:INFO:          setuptools: 78.1.1
2025-08-13 15:50:27,181:INFO:             pycaret: 3.3.2
2025-08-13 15:50:27,181:INFO:             IPython: 9.4.0
2025-08-13 15:50:27,181:INFO:          ipywidgets: 8.1.7
2025-08-13 15:50:27,181:INFO:                tqdm: 4.67.1
2025-08-13 15:50:27,181:INFO:               numpy: 1.26.4
2025-08-13 15:50:27,181:INFO:              pandas: 2.1.4
2025-08-13 15:50:27,182:INFO:              jinja2: 3.1.6
2025-08-13 15:50:27,182:INFO:               scipy: 1.11.4
2025-08-13 15:50:27,182:INFO:              joblib: 1.3.2
2025-08-13 15:50:27,182:INFO:             sklearn: 1.4.2
2025-08-13 15:50:27,182:INFO:                pyod: 2.0.5
2025-08-13 15:50:27,182:INFO:            imblearn: 0.13.0
2025-08-13 15:50:27,182:INFO:   category_encoders: 2.7.0
2025-08-13 15:50:27,182:INFO:            lightgbm: 4.6.0
2025-08-13 15:50:27,182:INFO:               numba: 0.61.0
2025-08-13 15:50:27,182:INFO:            requests: 2.32.4
2025-08-13 15:50:27,182:INFO:          matplotlib: 3.10.1
2025-08-13 15:50:27,182:INFO:          scikitplot: 0.3.7
2025-08-13 15:50:27,182:INFO:         yellowbrick: 1.5
2025-08-13 15:50:27,182:INFO:              plotly: 5.24.1
2025-08-13 15:50:27,182:INFO:    plotly-resampler: Not installed
2025-08-13 15:50:27,182:INFO:             kaleido: 0.0.0
2025-08-13 15:50:27,182:INFO:           schemdraw: 0.15
2025-08-13 15:50:27,182:INFO:         statsmodels: 0.14.5
2025-08-13 15:50:27,182:INFO:              sktime: 0.26.0
2025-08-13 15:50:27,182:INFO:               tbats: 1.1.3
2025-08-13 15:50:27,182:INFO:            pmdarima: 2.0.4
2025-08-13 15:50:27,182:INFO:              psutil: 7.0.0
2025-08-13 15:50:27,182:INFO:          markupsafe: 3.0.2
2025-08-13 15:50:27,182:INFO:             pickle5: Not installed
2025-08-13 15:50:27,182:INFO:         cloudpickle: 3.1.1
2025-08-13 15:50:27,182:INFO:         deprecation: 2.1.0
2025-08-13 15:50:27,182:INFO:              xxhash: 3.5.0
2025-08-13 15:50:27,182:INFO:           wurlitzer: 3.1.1
2025-08-13 15:50:27,182:INFO:PyCaret optional dependencies:
2025-08-13 15:50:27,188:INFO:                shap: Not installed
2025-08-13 15:50:27,188:INFO:           interpret: Not installed
2025-08-13 15:50:27,188:INFO:                umap: 0.5.9.post2
2025-08-13 15:50:27,188:INFO:     ydata_profiling: Not installed
2025-08-13 15:50:27,188:INFO:  explainerdashboard: Not installed
2025-08-13 15:50:27,188:INFO:             autoviz: Not installed
2025-08-13 15:50:27,188:INFO:           fairlearn: Not installed
2025-08-13 15:50:27,188:INFO:          deepchecks: Not installed
2025-08-13 15:50:27,188:INFO:             xgboost: Not installed
2025-08-13 15:50:27,188:INFO:            catboost: Not installed
2025-08-13 15:50:27,188:INFO:              kmodes: Not installed
2025-08-13 15:50:27,188:INFO:             mlxtend: Not installed
2025-08-13 15:50:27,188:INFO:       statsforecast: Not installed
2025-08-13 15:50:27,188:INFO:        tune_sklearn: Not installed
2025-08-13 15:50:27,188:INFO:                 ray: Not installed
2025-08-13 15:50:27,188:INFO:            hyperopt: Not installed
2025-08-13 15:50:27,188:INFO:              optuna: Not installed
2025-08-13 15:50:27,188:INFO:               skopt: Not installed
2025-08-13 15:50:27,188:INFO:              mlflow: Not installed
2025-08-13 15:50:27,188:INFO:              gradio: Not installed
2025-08-13 15:50:27,188:INFO:             fastapi: Not installed
2025-08-13 15:50:27,188:INFO:             uvicorn: Not installed
2025-08-13 15:50:27,188:INFO:              m2cgen: Not installed
2025-08-13 15:50:27,188:INFO:           evidently: Not installed
2025-08-13 15:50:27,188:INFO:               fugue: Not installed
2025-08-13 15:50:27,188:INFO:           streamlit: Not installed
2025-08-13 15:50:27,188:INFO:             prophet: Not installed
2025-08-13 15:50:27,188:INFO:None
2025-08-13 15:50:27,188:INFO:Set up data.
2025-08-13 15:50:27,194:INFO:Set up folding strategy.
2025-08-13 15:50:27,194:INFO:Set up train/test split.
2025-08-13 15:50:27,207:INFO:Set up index.
2025-08-13 15:50:27,207:INFO:Assigning column types.
2025-08-13 15:50:27,210:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-13 15:50:27,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,235:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,304:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,319:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-13 15:50:27,343:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:50:27,396:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,396:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-13 15:50:27,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,474:INFO:Preparing preprocessing pipeline...
2025-08-13 15:50:27,475:INFO:Set up label encoding.
2025-08-13 15:50:27,475:INFO:Set up simple imputation.
2025-08-13 15:50:27,477:INFO:Set up encoding of categorical features.
2025-08-13 15:50:27,477:INFO:Set up feature normalization.
2025-08-13 15:50:27,507:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:50:27,510:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:50:27,510:INFO:Creating final display dataframe.
2025-08-13 15:50:27,582:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     1626
2025-08-13 15:50:27,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:27,661:INFO:setup() successfully completed in 0.52s...............
2025-08-13 15:50:27,662:INFO:Initializing compare_models()
2025-08-13 15:50:27,662:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-13 15:50:27,662:INFO:Checking exceptions
2025-08-13 15:50:27,663:INFO:Preparing display monitor
2025-08-13 15:50:27,685:INFO:Initializing Logistic Regression
2025-08-13 15:50:27,685:INFO:Total runtime is 2.8967857360839845e-06 minutes
2025-08-13 15:50:27,685:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:27,686:INFO:Initializing create_model()
2025-08-13 15:50:27,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:27,686:INFO:Checking exceptions
2025-08-13 15:50:27,686:INFO:Importing libraries
2025-08-13 15:50:27,686:INFO:Copying training dataset
2025-08-13 15:50:27,689:INFO:Defining folds
2025-08-13 15:50:27,689:INFO:Declaring metric variables
2025-08-13 15:50:27,689:INFO:Importing untrained model
2025-08-13 15:50:27,689:INFO:Logistic Regression Imported successfully
2025-08-13 15:50:27,690:INFO:Starting cross validation
2025-08-13 15:50:27,690:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:29,707:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,712:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,716:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,716:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,719:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,719:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,723:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,723:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,725:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,727:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,729:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,734:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,736:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,743:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,747:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,763:INFO:Calculating mean and std
2025-08-13 15:50:29,764:INFO:Creating metrics dataframe
2025-08-13 15:50:29,768:INFO:Uploading results into container
2025-08-13 15:50:29,768:INFO:Uploading model into container now
2025-08-13 15:50:29,769:INFO:_master_model_container: 1
2025-08-13 15:50:29,769:INFO:_display_container: 2
2025-08-13 15:50:29,769:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:50:29,769:INFO:create_model() successfully completed......................................
2025-08-13 15:50:29,849:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:29,849:INFO:Creating metrics dataframe
2025-08-13 15:50:29,850:INFO:Initializing K Neighbors Classifier
2025-08-13 15:50:29,850:INFO:Total runtime is 0.03608909845352173 minutes
2025-08-13 15:50:29,851:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:29,851:INFO:Initializing create_model()
2025-08-13 15:50:29,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:29,851:INFO:Checking exceptions
2025-08-13 15:50:29,851:INFO:Importing libraries
2025-08-13 15:50:29,851:INFO:Copying training dataset
2025-08-13 15:50:29,853:INFO:Defining folds
2025-08-13 15:50:29,854:INFO:Declaring metric variables
2025-08-13 15:50:29,854:INFO:Importing untrained model
2025-08-13 15:50:29,854:INFO:K Neighbors Classifier Imported successfully
2025-08-13 15:50:29,854:INFO:Starting cross validation
2025-08-13 15:50:29,854:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:29,966:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,970:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,986:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,989:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,993:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:29,997:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:30,000:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:30,004:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:30,008:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,338:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,341:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,345:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,350:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,354:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,358:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,371:INFO:Calculating mean and std
2025-08-13 15:50:31,372:INFO:Creating metrics dataframe
2025-08-13 15:50:31,373:INFO:Uploading results into container
2025-08-13 15:50:31,373:INFO:Uploading model into container now
2025-08-13 15:50:31,374:INFO:_master_model_container: 2
2025-08-13 15:50:31,374:INFO:_display_container: 2
2025-08-13 15:50:31,374:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-13 15:50:31,374:INFO:create_model() successfully completed......................................
2025-08-13 15:50:31,410:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:31,410:INFO:Creating metrics dataframe
2025-08-13 15:50:31,411:INFO:Initializing Naive Bayes
2025-08-13 15:50:31,411:INFO:Total runtime is 0.06210158268610636 minutes
2025-08-13 15:50:31,411:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:31,411:INFO:Initializing create_model()
2025-08-13 15:50:31,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:31,411:INFO:Checking exceptions
2025-08-13 15:50:31,411:INFO:Importing libraries
2025-08-13 15:50:31,411:INFO:Copying training dataset
2025-08-13 15:50:31,414:INFO:Defining folds
2025-08-13 15:50:31,414:INFO:Declaring metric variables
2025-08-13 15:50:31,414:INFO:Importing untrained model
2025-08-13 15:50:31,414:INFO:Naive Bayes Imported successfully
2025-08-13 15:50:31,414:INFO:Starting cross validation
2025-08-13 15:50:31,415:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:31,453:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,454:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,455:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,457:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,458:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,459:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,460:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,471:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,474:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,478:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,479:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,483:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,487:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,504:INFO:Calculating mean and std
2025-08-13 15:50:31,504:INFO:Creating metrics dataframe
2025-08-13 15:50:31,505:INFO:Uploading results into container
2025-08-13 15:50:31,505:INFO:Uploading model into container now
2025-08-13 15:50:31,505:INFO:_master_model_container: 3
2025-08-13 15:50:31,505:INFO:_display_container: 2
2025-08-13 15:50:31,505:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-13 15:50:31,505:INFO:create_model() successfully completed......................................
2025-08-13 15:50:31,536:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:31,536:INFO:Creating metrics dataframe
2025-08-13 15:50:31,537:INFO:Initializing Decision Tree Classifier
2025-08-13 15:50:31,537:INFO:Total runtime is 0.06419221560160318 minutes
2025-08-13 15:50:31,537:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:31,537:INFO:Initializing create_model()
2025-08-13 15:50:31,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:31,537:INFO:Checking exceptions
2025-08-13 15:50:31,537:INFO:Importing libraries
2025-08-13 15:50:31,537:INFO:Copying training dataset
2025-08-13 15:50:31,540:INFO:Defining folds
2025-08-13 15:50:31,540:INFO:Declaring metric variables
2025-08-13 15:50:31,540:INFO:Importing untrained model
2025-08-13 15:50:31,540:INFO:Decision Tree Classifier Imported successfully
2025-08-13 15:50:31,540:INFO:Starting cross validation
2025-08-13 15:50:31,540:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:31,576:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,578:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,580:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,582:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,582:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,584:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,586:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,586:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,590:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,590:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,594:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:31,598:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,834:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,837:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,841:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,855:INFO:Calculating mean and std
2025-08-13 15:50:32,856:INFO:Creating metrics dataframe
2025-08-13 15:50:32,857:INFO:Uploading results into container
2025-08-13 15:50:32,857:INFO:Uploading model into container now
2025-08-13 15:50:32,857:INFO:_master_model_container: 4
2025-08-13 15:50:32,857:INFO:_display_container: 2
2025-08-13 15:50:32,857:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-13 15:50:32,857:INFO:create_model() successfully completed......................................
2025-08-13 15:50:32,896:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:32,896:INFO:Creating metrics dataframe
2025-08-13 15:50:32,897:INFO:Initializing SVM - Linear Kernel
2025-08-13 15:50:32,897:INFO:Total runtime is 0.08685941298802693 minutes
2025-08-13 15:50:32,897:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:32,897:INFO:Initializing create_model()
2025-08-13 15:50:32,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:32,897:INFO:Checking exceptions
2025-08-13 15:50:32,897:INFO:Importing libraries
2025-08-13 15:50:32,897:INFO:Copying training dataset
2025-08-13 15:50:32,900:INFO:Defining folds
2025-08-13 15:50:32,900:INFO:Declaring metric variables
2025-08-13 15:50:32,900:INFO:Importing untrained model
2025-08-13 15:50:32,900:INFO:SVM - Linear Kernel Imported successfully
2025-08-13 15:50:32,900:INFO:Starting cross validation
2025-08-13 15:50:32,900:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:32,940:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,940:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,941:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,943:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,944:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,947:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,947:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,947:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,950:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,953:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,954:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,957:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,967:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,971:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,974:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:32,991:INFO:Calculating mean and std
2025-08-13 15:50:32,991:INFO:Creating metrics dataframe
2025-08-13 15:50:32,992:INFO:Uploading results into container
2025-08-13 15:50:32,992:INFO:Uploading model into container now
2025-08-13 15:50:32,992:INFO:_master_model_container: 5
2025-08-13 15:50:32,992:INFO:_display_container: 2
2025-08-13 15:50:32,993:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-13 15:50:32,993:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,025:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,025:INFO:Creating metrics dataframe
2025-08-13 15:50:33,027:INFO:Initializing Ridge Classifier
2025-08-13 15:50:33,027:INFO:Total runtime is 0.08902479807535807 minutes
2025-08-13 15:50:33,027:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,027:INFO:Initializing create_model()
2025-08-13 15:50:33,027:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,027:INFO:Checking exceptions
2025-08-13 15:50:33,027:INFO:Importing libraries
2025-08-13 15:50:33,027:INFO:Copying training dataset
2025-08-13 15:50:33,029:INFO:Defining folds
2025-08-13 15:50:33,029:INFO:Declaring metric variables
2025-08-13 15:50:33,030:INFO:Importing untrained model
2025-08-13 15:50:33,030:INFO:Ridge Classifier Imported successfully
2025-08-13 15:50:33,030:INFO:Starting cross validation
2025-08-13 15:50:33,030:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,066:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,071:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,071:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,074:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,074:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,074:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,078:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,078:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,078:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,082:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,082:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,083:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,085:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,087:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,091:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,107:INFO:Calculating mean and std
2025-08-13 15:50:33,107:INFO:Creating metrics dataframe
2025-08-13 15:50:33,108:INFO:Uploading results into container
2025-08-13 15:50:33,108:INFO:Uploading model into container now
2025-08-13 15:50:33,108:INFO:_master_model_container: 6
2025-08-13 15:50:33,108:INFO:_display_container: 2
2025-08-13 15:50:33,109:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-13 15:50:33,109:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,141:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,141:INFO:Creating metrics dataframe
2025-08-13 15:50:33,142:INFO:Initializing Random Forest Classifier
2025-08-13 15:50:33,142:INFO:Total runtime is 0.09094321727752686 minutes
2025-08-13 15:50:33,142:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,142:INFO:Initializing create_model()
2025-08-13 15:50:33,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,142:INFO:Checking exceptions
2025-08-13 15:50:33,142:INFO:Importing libraries
2025-08-13 15:50:33,142:INFO:Copying training dataset
2025-08-13 15:50:33,145:INFO:Defining folds
2025-08-13 15:50:33,145:INFO:Declaring metric variables
2025-08-13 15:50:33,145:INFO:Importing untrained model
2025-08-13 15:50:33,145:INFO:Random Forest Classifier Imported successfully
2025-08-13 15:50:33,145:INFO:Starting cross validation
2025-08-13 15:50:33,145:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,335:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,335:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,339:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,339:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,342:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,342:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,347:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,347:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,350:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,351:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,353:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,354:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,354:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,356:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,360:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,366:INFO:Calculating mean and std
2025-08-13 15:50:33,366:INFO:Creating metrics dataframe
2025-08-13 15:50:33,367:INFO:Uploading results into container
2025-08-13 15:50:33,367:INFO:Uploading model into container now
2025-08-13 15:50:33,367:INFO:_master_model_container: 7
2025-08-13 15:50:33,367:INFO:_display_container: 2
2025-08-13 15:50:33,368:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-13 15:50:33,368:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,399:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,399:INFO:Creating metrics dataframe
2025-08-13 15:50:33,400:INFO:Initializing Quadratic Discriminant Analysis
2025-08-13 15:50:33,400:INFO:Total runtime is 0.09525033235549926 minutes
2025-08-13 15:50:33,400:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,400:INFO:Initializing create_model()
2025-08-13 15:50:33,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,400:INFO:Checking exceptions
2025-08-13 15:50:33,400:INFO:Importing libraries
2025-08-13 15:50:33,400:INFO:Copying training dataset
2025-08-13 15:50:33,403:INFO:Defining folds
2025-08-13 15:50:33,403:INFO:Declaring metric variables
2025-08-13 15:50:33,403:INFO:Importing untrained model
2025-08-13 15:50:33,403:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-13 15:50:33,404:INFO:Starting cross validation
2025-08-13 15:50:33,404:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,429:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:50:33,435:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:50:33,436:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:50:33,439:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:50:33,439:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:50:33,439:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:50:33,441:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:50:33,441:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:50:33,441:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:50:33,441:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:50:33,444:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:50:33,445:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-13 15:50:33,446:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,450:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,452:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:33,452:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,454:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,455:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,456:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,456:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,459:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,459:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,460:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,460:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,464:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,464:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,467:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,483:INFO:Calculating mean and std
2025-08-13 15:50:33,483:INFO:Creating metrics dataframe
2025-08-13 15:50:33,484:INFO:Uploading results into container
2025-08-13 15:50:33,484:INFO:Uploading model into container now
2025-08-13 15:50:33,484:INFO:_master_model_container: 8
2025-08-13 15:50:33,484:INFO:_display_container: 2
2025-08-13 15:50:33,484:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-13 15:50:33,484:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,515:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,515:INFO:Creating metrics dataframe
2025-08-13 15:50:33,516:INFO:Initializing Ada Boost Classifier
2025-08-13 15:50:33,516:INFO:Total runtime is 0.0971810499827067 minutes
2025-08-13 15:50:33,516:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,516:INFO:Initializing create_model()
2025-08-13 15:50:33,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,516:INFO:Checking exceptions
2025-08-13 15:50:33,516:INFO:Importing libraries
2025-08-13 15:50:33,516:INFO:Copying training dataset
2025-08-13 15:50:33,519:INFO:Defining folds
2025-08-13 15:50:33,519:INFO:Declaring metric variables
2025-08-13 15:50:33,519:INFO:Importing untrained model
2025-08-13 15:50:33,519:INFO:Ada Boost Classifier Imported successfully
2025-08-13 15:50:33,519:INFO:Starting cross validation
2025-08-13 15:50:33,520:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,542:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:50:33,543:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:50:33,543:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:50:33,546:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:50:33,556:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:50:33,557:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,559:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,560:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,561:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,562:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,563:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,564:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,565:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,567:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,569:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,570:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,572:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,574:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,575:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,579:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,585:INFO:Calculating mean and std
2025-08-13 15:50:33,585:INFO:Creating metrics dataframe
2025-08-13 15:50:33,586:INFO:Uploading results into container
2025-08-13 15:50:33,586:INFO:Uploading model into container now
2025-08-13 15:50:33,586:INFO:_master_model_container: 9
2025-08-13 15:50:33,586:INFO:_display_container: 2
2025-08-13 15:50:33,586:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-13 15:50:33,586:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,617:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,617:INFO:Creating metrics dataframe
2025-08-13 15:50:33,618:INFO:Initializing Gradient Boosting Classifier
2025-08-13 15:50:33,618:INFO:Total runtime is 0.0988887627919515 minutes
2025-08-13 15:50:33,619:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,619:INFO:Initializing create_model()
2025-08-13 15:50:33,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,619:INFO:Checking exceptions
2025-08-13 15:50:33,619:INFO:Importing libraries
2025-08-13 15:50:33,619:INFO:Copying training dataset
2025-08-13 15:50:33,621:INFO:Defining folds
2025-08-13 15:50:33,621:INFO:Declaring metric variables
2025-08-13 15:50:33,622:INFO:Importing untrained model
2025-08-13 15:50:33,622:INFO:Gradient Boosting Classifier Imported successfully
2025-08-13 15:50:33,622:INFO:Starting cross validation
2025-08-13 15:50:33,622:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,764:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,770:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,773:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,774:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,776:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,777:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,780:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,781:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,782:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,784:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,786:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,788:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,790:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,792:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,795:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,808:INFO:Calculating mean and std
2025-08-13 15:50:33,808:INFO:Creating metrics dataframe
2025-08-13 15:50:33,809:INFO:Uploading results into container
2025-08-13 15:50:33,809:INFO:Uploading model into container now
2025-08-13 15:50:33,809:INFO:_master_model_container: 10
2025-08-13 15:50:33,809:INFO:_display_container: 2
2025-08-13 15:50:33,809:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-13 15:50:33,809:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,840:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,840:INFO:Creating metrics dataframe
2025-08-13 15:50:33,841:INFO:Initializing Linear Discriminant Analysis
2025-08-13 15:50:33,841:INFO:Total runtime is 0.10260351498921712 minutes
2025-08-13 15:50:33,841:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,842:INFO:Initializing create_model()
2025-08-13 15:50:33,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,842:INFO:Checking exceptions
2025-08-13 15:50:33,842:INFO:Importing libraries
2025-08-13 15:50:33,842:INFO:Copying training dataset
2025-08-13 15:50:33,844:INFO:Defining folds
2025-08-13 15:50:33,844:INFO:Declaring metric variables
2025-08-13 15:50:33,844:INFO:Importing untrained model
2025-08-13 15:50:33,845:INFO:Linear Discriminant Analysis Imported successfully
2025-08-13 15:50:33,845:INFO:Starting cross validation
2025-08-13 15:50:33,845:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:33,887:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,887:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,891:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,892:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,892:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,895:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,895:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,897:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,897:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,899:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,900:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,900:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,903:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,904:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,908:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:33,925:INFO:Calculating mean and std
2025-08-13 15:50:33,925:INFO:Creating metrics dataframe
2025-08-13 15:50:33,926:INFO:Uploading results into container
2025-08-13 15:50:33,926:INFO:Uploading model into container now
2025-08-13 15:50:33,926:INFO:_master_model_container: 11
2025-08-13 15:50:33,926:INFO:_display_container: 2
2025-08-13 15:50:33,926:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-13 15:50:33,926:INFO:create_model() successfully completed......................................
2025-08-13 15:50:33,957:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:33,957:INFO:Creating metrics dataframe
2025-08-13 15:50:33,958:INFO:Initializing Extra Trees Classifier
2025-08-13 15:50:33,958:INFO:Total runtime is 0.10454192956288655 minutes
2025-08-13 15:50:33,958:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:33,958:INFO:Initializing create_model()
2025-08-13 15:50:33,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:33,958:INFO:Checking exceptions
2025-08-13 15:50:33,958:INFO:Importing libraries
2025-08-13 15:50:33,958:INFO:Copying training dataset
2025-08-13 15:50:33,961:INFO:Defining folds
2025-08-13 15:50:33,961:INFO:Declaring metric variables
2025-08-13 15:50:33,961:INFO:Importing untrained model
2025-08-13 15:50:33,961:INFO:Extra Trees Classifier Imported successfully
2025-08-13 15:50:33,961:INFO:Starting cross validation
2025-08-13 15:50:33,961:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:34,118:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,122:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,122:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,123:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,126:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,126:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,127:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,130:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,132:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,134:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,134:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,137:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,138:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,141:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,142:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,148:INFO:Calculating mean and std
2025-08-13 15:50:34,148:INFO:Creating metrics dataframe
2025-08-13 15:50:34,149:INFO:Uploading results into container
2025-08-13 15:50:34,149:INFO:Uploading model into container now
2025-08-13 15:50:34,149:INFO:_master_model_container: 12
2025-08-13 15:50:34,149:INFO:_display_container: 2
2025-08-13 15:50:34,150:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-13 15:50:34,150:INFO:create_model() successfully completed......................................
2025-08-13 15:50:34,180:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:34,180:INFO:Creating metrics dataframe
2025-08-13 15:50:34,182:INFO:Initializing Light Gradient Boosting Machine
2025-08-13 15:50:34,182:INFO:Total runtime is 0.10827323198318481 minutes
2025-08-13 15:50:34,182:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:34,182:INFO:Initializing create_model()
2025-08-13 15:50:34,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:34,182:INFO:Checking exceptions
2025-08-13 15:50:34,182:INFO:Importing libraries
2025-08-13 15:50:34,182:INFO:Copying training dataset
2025-08-13 15:50:34,184:INFO:Defining folds
2025-08-13 15:50:34,185:INFO:Declaring metric variables
2025-08-13 15:50:34,185:INFO:Importing untrained model
2025-08-13 15:50:34,185:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-13 15:50:34,185:INFO:Starting cross validation
2025-08-13 15:50:34,185:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:34,592:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,592:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,592:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,596:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,596:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,596:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,599:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,600:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,600:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,620:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,624:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,628:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,628:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,632:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,636:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,646:INFO:Calculating mean and std
2025-08-13 15:50:34,647:INFO:Creating metrics dataframe
2025-08-13 15:50:34,648:INFO:Uploading results into container
2025-08-13 15:50:34,648:INFO:Uploading model into container now
2025-08-13 15:50:34,648:INFO:_master_model_container: 13
2025-08-13 15:50:34,648:INFO:_display_container: 2
2025-08-13 15:50:34,648:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-13 15:50:34,648:INFO:create_model() successfully completed......................................
2025-08-13 15:50:34,684:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:34,684:INFO:Creating metrics dataframe
2025-08-13 15:50:34,685:INFO:Initializing Dummy Classifier
2025-08-13 15:50:34,685:INFO:Total runtime is 0.11666423082351685 minutes
2025-08-13 15:50:34,685:INFO:SubProcess create_model() called ==================================
2025-08-13 15:50:34,685:INFO:Initializing create_model()
2025-08-13 15:50:34,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16f950510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:34,685:INFO:Checking exceptions
2025-08-13 15:50:34,685:INFO:Importing libraries
2025-08-13 15:50:34,685:INFO:Copying training dataset
2025-08-13 15:50:34,688:INFO:Defining folds
2025-08-13 15:50:34,688:INFO:Declaring metric variables
2025-08-13 15:50:34,688:INFO:Importing untrained model
2025-08-13 15:50:34,688:INFO:Dummy Classifier Imported successfully
2025-08-13 15:50:34,688:INFO:Starting cross validation
2025-08-13 15:50:34,689:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:50:34,724:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,724:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,726:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,728:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,729:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,730:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,730:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:34,731:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:34,732:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,733:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,734:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:34,735:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,736:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,739:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,741:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:34,742:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,744:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,748:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,750:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:50:34,752:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:50:34,768:INFO:Calculating mean and std
2025-08-13 15:50:34,769:INFO:Creating metrics dataframe
2025-08-13 15:50:34,770:INFO:Uploading results into container
2025-08-13 15:50:34,770:INFO:Uploading model into container now
2025-08-13 15:50:34,770:INFO:_master_model_container: 14
2025-08-13 15:50:34,770:INFO:_display_container: 2
2025-08-13 15:50:34,770:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-13 15:50:34,770:INFO:create_model() successfully completed......................................
2025-08-13 15:50:34,806:INFO:SubProcess create_model() end ==================================
2025-08-13 15:50:34,806:INFO:Creating metrics dataframe
2025-08-13 15:50:34,809:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-08-13 15:50:34,810:INFO:Initializing create_model()
2025-08-13 15:50:34,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:34,810:INFO:Checking exceptions
2025-08-13 15:50:34,810:INFO:Importing libraries
2025-08-13 15:50:34,810:INFO:Copying training dataset
2025-08-13 15:50:34,813:INFO:Defining folds
2025-08-13 15:50:34,813:INFO:Declaring metric variables
2025-08-13 15:50:34,813:INFO:Importing untrained model
2025-08-13 15:50:34,813:INFO:Declaring custom model
2025-08-13 15:50:34,813:INFO:Logistic Regression Imported successfully
2025-08-13 15:50:34,814:INFO:Cross validation set to False
2025-08-13 15:50:34,814:INFO:Fitting Model
2025-08-13 15:50:34,834:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:50:34,834:INFO:create_model() successfully completed......................................
2025-08-13 15:50:34,875:INFO:_master_model_container: 14
2025-08-13 15:50:34,875:INFO:_display_container: 2
2025-08-13 15:50:34,875:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:50:34,875:INFO:compare_models() successfully completed......................................
2025-08-13 15:50:34,875:INFO:Initializing finalize_model()
2025-08-13 15:50:34,875:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-13 15:50:34,875:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:50:34,877:INFO:Initializing create_model()
2025-08-13 15:50:34,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160a06650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:50:34,877:INFO:Checking exceptions
2025-08-13 15:50:34,878:INFO:Importing libraries
2025-08-13 15:50:34,878:INFO:Copying training dataset
2025-08-13 15:50:34,878:INFO:Defining folds
2025-08-13 15:50:34,878:INFO:Declaring metric variables
2025-08-13 15:50:34,878:INFO:Importing untrained model
2025-08-13 15:50:34,878:INFO:Declaring custom model
2025-08-13 15:50:34,878:INFO:Logistic Regression Imported successfully
2025-08-13 15:50:34,879:INFO:Cross validation set to False
2025-08-13 15:50:34,879:INFO:Fitting Model
2025-08-13 15:50:34,902:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:50:34,902:INFO:create_model() successfully completed......................................
2025-08-13 15:50:34,937:INFO:_master_model_container: 14
2025-08-13 15:50:34,937:INFO:_display_container: 2
2025-08-13 15:50:34,940:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:50:34,940:INFO:finalize_model() successfully completed......................................
2025-08-13 15:50:34,978:INFO:Initializing save_model()
2025-08-13 15:50:34,978:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-13 15:50:34,978:INFO:Adding model into prep_pipe
2025-08-13 15:50:34,978:WARNING:Only Model saved as it was a pipeline.
2025-08-13 15:50:34,981:INFO:/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector.pkl saved in current working directory
2025-08-13 15:50:34,984:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:50:34,984:INFO:save_model() successfully completed......................................
2025-08-13 15:50:35,020:INFO:PyCaret ClusteringExperiment
2025-08-13 15:50:35,020:INFO:Logging name: cluster-default-name
2025-08-13 15:50:35,020:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-13 15:50:35,020:INFO:version 3.3.2
2025-08-13 15:50:35,020:INFO:Initializing setup()
2025-08-13 15:50:35,020:INFO:self.USI: b0f7
2025-08-13 15:50:35,020:INFO:self._variable_keys: {'n_jobs_param', 'data', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', '_ml_usecase', 'USI', 'log_plots_param', 'memory', 'X', '_available_plots', 'gpu_param', 'logging_param', 'exp_id', 'pipeline', 'idx', 'seed'}
2025-08-13 15:50:35,020:INFO:Checking environment
2025-08-13 15:50:35,020:INFO:python_version: 3.11.13
2025-08-13 15:50:35,020:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:50:35,020:INFO:machine: x86_64
2025-08-13 15:50:35,020:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:50:35,020:INFO:Memory: svmem(total=8589934592, available=427286528, percent=95.0, used=767553536, free=16986112, active=414224384, inactive=408162304, wired=353329152)
2025-08-13 15:50:35,020:INFO:Physical Core: 8
2025-08-13 15:50:35,020:INFO:Logical Core: 8
2025-08-13 15:50:35,020:INFO:Checking libraries
2025-08-13 15:50:35,020:INFO:System:
2025-08-13 15:50:35,020:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:50:35,020:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:50:35,020:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:50:35,020:INFO:PyCaret required dependencies:
2025-08-13 15:50:35,020:INFO:                 pip: 25.1
2025-08-13 15:50:35,020:INFO:          setuptools: 78.1.1
2025-08-13 15:50:35,020:INFO:             pycaret: 3.3.2
2025-08-13 15:50:35,020:INFO:             IPython: 9.4.0
2025-08-13 15:50:35,020:INFO:          ipywidgets: 8.1.7
2025-08-13 15:50:35,020:INFO:                tqdm: 4.67.1
2025-08-13 15:50:35,020:INFO:               numpy: 1.26.4
2025-08-13 15:50:35,020:INFO:              pandas: 2.1.4
2025-08-13 15:50:35,020:INFO:              jinja2: 3.1.6
2025-08-13 15:50:35,020:INFO:               scipy: 1.11.4
2025-08-13 15:50:35,020:INFO:              joblib: 1.3.2
2025-08-13 15:50:35,020:INFO:             sklearn: 1.4.2
2025-08-13 15:50:35,020:INFO:                pyod: 2.0.5
2025-08-13 15:50:35,020:INFO:            imblearn: 0.13.0
2025-08-13 15:50:35,020:INFO:   category_encoders: 2.7.0
2025-08-13 15:50:35,020:INFO:            lightgbm: 4.6.0
2025-08-13 15:50:35,021:INFO:               numba: 0.61.0
2025-08-13 15:50:35,021:INFO:            requests: 2.32.4
2025-08-13 15:50:35,021:INFO:          matplotlib: 3.10.1
2025-08-13 15:50:35,021:INFO:          scikitplot: 0.3.7
2025-08-13 15:50:35,021:INFO:         yellowbrick: 1.5
2025-08-13 15:50:35,021:INFO:              plotly: 5.24.1
2025-08-13 15:50:35,021:INFO:    plotly-resampler: Not installed
2025-08-13 15:50:35,021:INFO:             kaleido: 0.0.0
2025-08-13 15:50:35,021:INFO:           schemdraw: 0.15
2025-08-13 15:50:35,021:INFO:         statsmodels: 0.14.5
2025-08-13 15:50:35,021:INFO:              sktime: 0.26.0
2025-08-13 15:50:35,021:INFO:               tbats: 1.1.3
2025-08-13 15:50:35,021:INFO:            pmdarima: 2.0.4
2025-08-13 15:50:35,021:INFO:              psutil: 7.0.0
2025-08-13 15:50:35,021:INFO:          markupsafe: 3.0.2
2025-08-13 15:50:35,021:INFO:             pickle5: Not installed
2025-08-13 15:50:35,021:INFO:         cloudpickle: 3.1.1
2025-08-13 15:50:35,021:INFO:         deprecation: 2.1.0
2025-08-13 15:50:35,021:INFO:              xxhash: 3.5.0
2025-08-13 15:50:35,021:INFO:           wurlitzer: 3.1.1
2025-08-13 15:50:35,021:INFO:PyCaret optional dependencies:
2025-08-13 15:50:35,021:INFO:                shap: Not installed
2025-08-13 15:50:35,021:INFO:           interpret: Not installed
2025-08-13 15:50:35,021:INFO:                umap: 0.5.9.post2
2025-08-13 15:50:35,021:INFO:     ydata_profiling: Not installed
2025-08-13 15:50:35,021:INFO:  explainerdashboard: Not installed
2025-08-13 15:50:35,021:INFO:             autoviz: Not installed
2025-08-13 15:50:35,021:INFO:           fairlearn: Not installed
2025-08-13 15:50:35,021:INFO:          deepchecks: Not installed
2025-08-13 15:50:35,021:INFO:             xgboost: Not installed
2025-08-13 15:50:35,021:INFO:            catboost: Not installed
2025-08-13 15:50:35,021:INFO:              kmodes: Not installed
2025-08-13 15:50:35,021:INFO:             mlxtend: Not installed
2025-08-13 15:50:35,021:INFO:       statsforecast: Not installed
2025-08-13 15:50:35,021:INFO:        tune_sklearn: Not installed
2025-08-13 15:50:35,021:INFO:                 ray: Not installed
2025-08-13 15:50:35,021:INFO:            hyperopt: Not installed
2025-08-13 15:50:35,021:INFO:              optuna: Not installed
2025-08-13 15:50:35,021:INFO:               skopt: Not installed
2025-08-13 15:50:35,021:INFO:              mlflow: Not installed
2025-08-13 15:50:35,021:INFO:              gradio: Not installed
2025-08-13 15:50:35,021:INFO:             fastapi: Not installed
2025-08-13 15:50:35,021:INFO:             uvicorn: Not installed
2025-08-13 15:50:35,021:INFO:              m2cgen: Not installed
2025-08-13 15:50:35,021:INFO:           evidently: Not installed
2025-08-13 15:50:35,021:INFO:               fugue: Not installed
2025-08-13 15:50:35,021:INFO:           streamlit: Not installed
2025-08-13 15:50:35,021:INFO:             prophet: Not installed
2025-08-13 15:50:35,021:INFO:None
2025-08-13 15:50:35,021:INFO:Set up data.
2025-08-13 15:50:35,022:INFO:Set up index.
2025-08-13 15:50:35,022:INFO:Assigning column types.
2025-08-13 15:50:35,023:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-13 15:50:35,024:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:50:35,024:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,024:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:50:35,024:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,024:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-13 15:50:35,024:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,024:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,024:INFO:Preparing preprocessing pipeline...
2025-08-13 15:50:35,024:INFO:Set up simple imputation.
2025-08-13 15:50:35,024:INFO:Set up feature normalization.
2025-08-13 15:50:35,032:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:50:35,034:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    trans...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:50:35,034:INFO:Creating final display dataframe.
2025-08-13 15:50:35,042:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  b0f7
2025-08-13 15:50:35,042:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,042:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:50:35,042:INFO:setup() successfully completed in 0.02s...............
2025-08-13 15:50:35,042:INFO:Initializing create_model()
2025-08-13 15:50:35,042:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16f5a6bd0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-13 15:50:35,042:INFO:Checking exceptions
2025-08-13 15:50:35,049:INFO:Importing untrained model
2025-08-13 15:50:35,049:INFO:K-Means Clustering Imported successfully
2025-08-13 15:50:35,049:INFO:Fitting Model
2025-08-13 15:50:35,185:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:50:35,185:INFO:create_models() successfully completed......................................
2025-08-13 15:50:35,185:INFO:Uploading results into container
2025-08-13 15:50:35,186:INFO:Uploading model into container now
2025-08-13 15:50:35,189:INFO:_master_model_container: 1
2025-08-13 15:50:35,189:INFO:_display_container: 2
2025-08-13 15:50:35,189:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:50:35,189:INFO:create_model() successfully completed......................................
2025-08-13 15:50:35,236:INFO:Initializing assign_model()
2025-08-13 15:50:35,236:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16f5a6bd0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-13 15:50:35,236:INFO:Checking exceptions
2025-08-13 15:50:35,236:INFO:Determining Trained Model
2025-08-13 15:50:35,236:INFO:Trained Model : K-Means Clustering
2025-08-13 15:50:35,236:INFO:Copying data
2025-08-13 15:50:35,238:INFO:(3000, 12)
2025-08-13 15:50:35,238:INFO:assign_model() successfully completed......................................
2025-08-13 15:50:35,243:INFO:Initializing save_model()
2025-08-13 15:50:35,243:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/Users/serpilsena/Desktop/hands-on/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    trans...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-13 15:50:35,243:INFO:Adding model into prep_pipe
2025-08-13 15:50:35,244:INFO:/Users/serpilsena/Desktop/hands-on/models/threat_actor_profiler.pkl saved in current working directory
2025-08-13 15:50:35,246:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-13 15:50:35,246:INFO:save_model() successfully completed......................................
2025-08-13 15:52:30,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:52:30,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:52:30,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:52:30,049:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 15:52:30,610:INFO:PyCaret ClassificationExperiment
2025-08-13 15:52:30,610:INFO:Logging name: clf-default-name
2025-08-13 15:52:30,610:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 15:52:30,610:INFO:version 3.3.2
2025-08-13 15:52:30,610:INFO:Initializing setup()
2025-08-13 15:52:30,610:INFO:self.USI: 10de
2025-08-13 15:52:30,610:INFO:self._variable_keys: {'seed', 'X_train', 'data', 'exp_name_log', 'n_jobs_param', 'logging_param', 'y', 'fold_groups_param', 'X_test', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'fold_shuffle_param', 'is_multiclass', 'idx', 'exp_id', 'target_param', 'USI', 'html_param', '_ml_usecase', 'y_test', 'y_train', 'pipeline', 'X', '_available_plots', 'log_plots_param', 'fix_imbalance', 'fold_generator'}
2025-08-13 15:52:30,610:INFO:Checking environment
2025-08-13 15:52:30,610:INFO:python_version: 3.11.13
2025-08-13 15:52:30,610:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:52:30,610:INFO:machine: x86_64
2025-08-13 15:52:30,648:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:52:30,648:INFO:Memory: svmem(total=8589934592, available=530427904, percent=93.8, used=820436992, free=60325888, active=456843264, inactive=436326400, wired=363593728)
2025-08-13 15:52:30,648:INFO:Physical Core: 8
2025-08-13 15:52:30,648:INFO:Logical Core: 8
2025-08-13 15:52:30,648:INFO:Checking libraries
2025-08-13 15:52:30,648:INFO:System:
2025-08-13 15:52:30,648:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:52:30,648:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:52:30,648:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:52:30,648:INFO:PyCaret required dependencies:
2025-08-13 15:52:30,649:INFO:                 pip: 25.1
2025-08-13 15:52:30,649:INFO:          setuptools: 78.1.1
2025-08-13 15:52:30,649:INFO:             pycaret: 3.3.2
2025-08-13 15:52:30,649:INFO:             IPython: 9.4.0
2025-08-13 15:52:30,649:INFO:          ipywidgets: 8.1.7
2025-08-13 15:52:30,650:INFO:                tqdm: 4.67.1
2025-08-13 15:52:30,650:INFO:               numpy: 1.26.4
2025-08-13 15:52:30,650:INFO:              pandas: 2.1.4
2025-08-13 15:52:30,650:INFO:              jinja2: 3.1.6
2025-08-13 15:52:30,650:INFO:               scipy: 1.11.4
2025-08-13 15:52:30,650:INFO:              joblib: 1.3.2
2025-08-13 15:52:30,650:INFO:             sklearn: 1.4.2
2025-08-13 15:52:30,650:INFO:                pyod: 2.0.5
2025-08-13 15:52:30,650:INFO:            imblearn: 0.13.0
2025-08-13 15:52:30,650:INFO:   category_encoders: 2.7.0
2025-08-13 15:52:30,650:INFO:            lightgbm: 4.6.0
2025-08-13 15:52:30,650:INFO:               numba: 0.61.0
2025-08-13 15:52:30,650:INFO:            requests: 2.32.4
2025-08-13 15:52:30,650:INFO:          matplotlib: 3.10.1
2025-08-13 15:52:30,650:INFO:          scikitplot: 0.3.7
2025-08-13 15:52:30,650:INFO:         yellowbrick: 1.5
2025-08-13 15:52:30,650:INFO:              plotly: 5.24.1
2025-08-13 15:52:30,650:INFO:    plotly-resampler: Not installed
2025-08-13 15:52:30,650:INFO:             kaleido: 0.0.0
2025-08-13 15:52:30,650:INFO:           schemdraw: 0.15
2025-08-13 15:52:30,650:INFO:         statsmodels: 0.14.5
2025-08-13 15:52:30,650:INFO:              sktime: 0.26.0
2025-08-13 15:52:30,650:INFO:               tbats: 1.1.3
2025-08-13 15:52:30,650:INFO:            pmdarima: 2.0.4
2025-08-13 15:52:30,650:INFO:              psutil: 7.0.0
2025-08-13 15:52:30,650:INFO:          markupsafe: 3.0.2
2025-08-13 15:52:30,650:INFO:             pickle5: Not installed
2025-08-13 15:52:30,650:INFO:         cloudpickle: 3.1.1
2025-08-13 15:52:30,650:INFO:         deprecation: 2.1.0
2025-08-13 15:52:30,650:INFO:              xxhash: 3.5.0
2025-08-13 15:52:30,650:INFO:           wurlitzer: 3.1.1
2025-08-13 15:52:30,650:INFO:PyCaret optional dependencies:
2025-08-13 15:52:30,656:INFO:                shap: Not installed
2025-08-13 15:52:30,656:INFO:           interpret: Not installed
2025-08-13 15:52:30,656:INFO:                umap: 0.5.9.post2
2025-08-13 15:52:30,656:INFO:     ydata_profiling: Not installed
2025-08-13 15:52:30,656:INFO:  explainerdashboard: Not installed
2025-08-13 15:52:30,656:INFO:             autoviz: Not installed
2025-08-13 15:52:30,656:INFO:           fairlearn: Not installed
2025-08-13 15:52:30,656:INFO:          deepchecks: Not installed
2025-08-13 15:52:30,656:INFO:             xgboost: Not installed
2025-08-13 15:52:30,656:INFO:            catboost: Not installed
2025-08-13 15:52:30,656:INFO:              kmodes: Not installed
2025-08-13 15:52:30,656:INFO:             mlxtend: Not installed
2025-08-13 15:52:30,656:INFO:       statsforecast: Not installed
2025-08-13 15:52:30,656:INFO:        tune_sklearn: Not installed
2025-08-13 15:52:30,656:INFO:                 ray: Not installed
2025-08-13 15:52:30,656:INFO:            hyperopt: Not installed
2025-08-13 15:52:30,656:INFO:              optuna: Not installed
2025-08-13 15:52:30,656:INFO:               skopt: Not installed
2025-08-13 15:52:30,656:INFO:              mlflow: Not installed
2025-08-13 15:52:30,656:INFO:              gradio: Not installed
2025-08-13 15:52:30,656:INFO:             fastapi: Not installed
2025-08-13 15:52:30,656:INFO:             uvicorn: Not installed
2025-08-13 15:52:30,656:INFO:              m2cgen: Not installed
2025-08-13 15:52:30,656:INFO:           evidently: Not installed
2025-08-13 15:52:30,656:INFO:               fugue: Not installed
2025-08-13 15:52:30,656:INFO:           streamlit: Not installed
2025-08-13 15:52:30,656:INFO:             prophet: Not installed
2025-08-13 15:52:30,656:INFO:None
2025-08-13 15:52:30,656:INFO:Set up data.
2025-08-13 15:52:30,661:INFO:Set up folding strategy.
2025-08-13 15:52:30,661:INFO:Set up train/test split.
2025-08-13 15:52:30,672:INFO:Set up index.
2025-08-13 15:52:30,672:INFO:Assigning column types.
2025-08-13 15:52:30,674:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-13 15:52:30,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,699:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,778:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-13 15:52:30,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 15:52:30,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,855:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-13 15:52:30,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:30,934:INFO:Preparing preprocessing pipeline...
2025-08-13 15:52:30,934:INFO:Set up label encoding.
2025-08-13 15:52:30,934:INFO:Set up simple imputation.
2025-08-13 15:52:30,936:INFO:Set up encoding of categorical features.
2025-08-13 15:52:30,936:INFO:Set up feature normalization.
2025-08-13 15:52:30,964:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:52:30,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:52:30,968:INFO:Creating final display dataframe.
2025-08-13 15:52:31,039:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     10de
2025-08-13 15:52:31,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:31,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:31,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:31,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:31,119:INFO:setup() successfully completed in 0.51s...............
2025-08-13 15:52:31,119:INFO:Initializing compare_models()
2025-08-13 15:52:31,119:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-13 15:52:31,119:INFO:Checking exceptions
2025-08-13 15:52:31,121:INFO:Preparing display monitor
2025-08-13 15:52:31,141:INFO:Initializing Logistic Regression
2025-08-13 15:52:31,141:INFO:Total runtime is 3.401438395182292e-06 minutes
2025-08-13 15:52:31,141:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:31,141:INFO:Initializing create_model()
2025-08-13 15:52:31,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:31,141:INFO:Checking exceptions
2025-08-13 15:52:31,141:INFO:Importing libraries
2025-08-13 15:52:31,141:INFO:Copying training dataset
2025-08-13 15:52:31,145:INFO:Defining folds
2025-08-13 15:52:31,145:INFO:Declaring metric variables
2025-08-13 15:52:31,145:INFO:Importing untrained model
2025-08-13 15:52:31,145:INFO:Logistic Regression Imported successfully
2025-08-13 15:52:31,145:INFO:Starting cross validation
2025-08-13 15:52:31,146:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:33,138:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,143:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,145:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,146:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,147:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,149:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,151:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,152:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,153:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,155:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,155:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,159:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,205:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,208:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,212:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,219:INFO:Calculating mean and std
2025-08-13 15:52:33,220:INFO:Creating metrics dataframe
2025-08-13 15:52:33,226:INFO:Uploading results into container
2025-08-13 15:52:33,226:INFO:Uploading model into container now
2025-08-13 15:52:33,227:INFO:_master_model_container: 1
2025-08-13 15:52:33,227:INFO:_display_container: 2
2025-08-13 15:52:33,227:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:52:33,227:INFO:create_model() successfully completed......................................
2025-08-13 15:52:33,323:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:33,323:INFO:Creating metrics dataframe
2025-08-13 15:52:33,324:INFO:Initializing K Neighbors Classifier
2025-08-13 15:52:33,324:INFO:Total runtime is 0.03638784885406494 minutes
2025-08-13 15:52:33,324:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:33,324:INFO:Initializing create_model()
2025-08-13 15:52:33,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:33,324:INFO:Checking exceptions
2025-08-13 15:52:33,324:INFO:Importing libraries
2025-08-13 15:52:33,324:INFO:Copying training dataset
2025-08-13 15:52:33,327:INFO:Defining folds
2025-08-13 15:52:33,327:INFO:Declaring metric variables
2025-08-13 15:52:33,327:INFO:Importing untrained model
2025-08-13 15:52:33,327:INFO:K Neighbors Classifier Imported successfully
2025-08-13 15:52:33,327:INFO:Starting cross validation
2025-08-13 15:52:33,328:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:33,449:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,452:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,456:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,463:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,466:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,467:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,470:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,470:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,473:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,477:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:33,481:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,709:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,712:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,716:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,721:INFO:Calculating mean and std
2025-08-13 15:52:34,722:INFO:Creating metrics dataframe
2025-08-13 15:52:34,723:INFO:Uploading results into container
2025-08-13 15:52:34,723:INFO:Uploading model into container now
2025-08-13 15:52:34,723:INFO:_master_model_container: 2
2025-08-13 15:52:34,723:INFO:_display_container: 2
2025-08-13 15:52:34,723:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-13 15:52:34,723:INFO:create_model() successfully completed......................................
2025-08-13 15:52:34,760:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:34,760:INFO:Creating metrics dataframe
2025-08-13 15:52:34,761:INFO:Initializing Naive Bayes
2025-08-13 15:52:34,761:INFO:Total runtime is 0.06033589839935302 minutes
2025-08-13 15:52:34,761:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:34,761:INFO:Initializing create_model()
2025-08-13 15:52:34,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:34,761:INFO:Checking exceptions
2025-08-13 15:52:34,761:INFO:Importing libraries
2025-08-13 15:52:34,761:INFO:Copying training dataset
2025-08-13 15:52:34,763:INFO:Defining folds
2025-08-13 15:52:34,763:INFO:Declaring metric variables
2025-08-13 15:52:34,764:INFO:Importing untrained model
2025-08-13 15:52:34,764:INFO:Naive Bayes Imported successfully
2025-08-13 15:52:34,764:INFO:Starting cross validation
2025-08-13 15:52:34,764:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:34,804:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,807:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,808:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,810:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,811:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,812:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,814:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,815:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:34,817:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,214:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,214:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,218:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,218:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,221:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,222:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,229:INFO:Calculating mean and std
2025-08-13 15:52:36,229:INFO:Creating metrics dataframe
2025-08-13 15:52:36,231:INFO:Uploading results into container
2025-08-13 15:52:36,231:INFO:Uploading model into container now
2025-08-13 15:52:36,231:INFO:_master_model_container: 3
2025-08-13 15:52:36,231:INFO:_display_container: 2
2025-08-13 15:52:36,231:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-13 15:52:36,231:INFO:create_model() successfully completed......................................
2025-08-13 15:52:36,275:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:36,275:INFO:Creating metrics dataframe
2025-08-13 15:52:36,276:INFO:Initializing Decision Tree Classifier
2025-08-13 15:52:36,276:INFO:Total runtime is 0.0855938990910848 minutes
2025-08-13 15:52:36,276:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:36,276:INFO:Initializing create_model()
2025-08-13 15:52:36,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:36,276:INFO:Checking exceptions
2025-08-13 15:52:36,276:INFO:Importing libraries
2025-08-13 15:52:36,276:INFO:Copying training dataset
2025-08-13 15:52:36,279:INFO:Defining folds
2025-08-13 15:52:36,279:INFO:Declaring metric variables
2025-08-13 15:52:36,279:INFO:Importing untrained model
2025-08-13 15:52:36,279:INFO:Decision Tree Classifier Imported successfully
2025-08-13 15:52:36,279:INFO:Starting cross validation
2025-08-13 15:52:36,280:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:36,319:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,321:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,322:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,324:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,325:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,326:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,328:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,329:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,332:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,334:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,334:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,338:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,338:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,341:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,341:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,356:INFO:Calculating mean and std
2025-08-13 15:52:36,357:INFO:Creating metrics dataframe
2025-08-13 15:52:36,358:INFO:Uploading results into container
2025-08-13 15:52:36,358:INFO:Uploading model into container now
2025-08-13 15:52:36,358:INFO:_master_model_container: 4
2025-08-13 15:52:36,358:INFO:_display_container: 2
2025-08-13 15:52:36,358:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-13 15:52:36,358:INFO:create_model() successfully completed......................................
2025-08-13 15:52:36,393:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:36,393:INFO:Creating metrics dataframe
2025-08-13 15:52:36,395:INFO:Initializing SVM - Linear Kernel
2025-08-13 15:52:36,395:INFO:Total runtime is 0.0875663161277771 minutes
2025-08-13 15:52:36,395:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:36,395:INFO:Initializing create_model()
2025-08-13 15:52:36,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:36,395:INFO:Checking exceptions
2025-08-13 15:52:36,395:INFO:Importing libraries
2025-08-13 15:52:36,395:INFO:Copying training dataset
2025-08-13 15:52:36,397:INFO:Defining folds
2025-08-13 15:52:36,397:INFO:Declaring metric variables
2025-08-13 15:52:36,397:INFO:Importing untrained model
2025-08-13 15:52:36,398:INFO:SVM - Linear Kernel Imported successfully
2025-08-13 15:52:36,398:INFO:Starting cross validation
2025-08-13 15:52:36,398:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:36,441:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,445:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,450:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,450:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,452:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,453:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,454:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,458:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,458:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,459:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,462:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,468:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,472:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,476:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,491:INFO:Calculating mean and std
2025-08-13 15:52:36,491:INFO:Creating metrics dataframe
2025-08-13 15:52:36,492:INFO:Uploading results into container
2025-08-13 15:52:36,492:INFO:Uploading model into container now
2025-08-13 15:52:36,492:INFO:_master_model_container: 5
2025-08-13 15:52:36,492:INFO:_display_container: 2
2025-08-13 15:52:36,492:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-13 15:52:36,492:INFO:create_model() successfully completed......................................
2025-08-13 15:52:36,526:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:36,526:INFO:Creating metrics dataframe
2025-08-13 15:52:36,527:INFO:Initializing Ridge Classifier
2025-08-13 15:52:36,527:INFO:Total runtime is 0.08977833588918051 minutes
2025-08-13 15:52:36,527:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:36,527:INFO:Initializing create_model()
2025-08-13 15:52:36,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:36,527:INFO:Checking exceptions
2025-08-13 15:52:36,527:INFO:Importing libraries
2025-08-13 15:52:36,527:INFO:Copying training dataset
2025-08-13 15:52:36,530:INFO:Defining folds
2025-08-13 15:52:36,530:INFO:Declaring metric variables
2025-08-13 15:52:36,530:INFO:Importing untrained model
2025-08-13 15:52:36,530:INFO:Ridge Classifier Imported successfully
2025-08-13 15:52:36,530:INFO:Starting cross validation
2025-08-13 15:52:36,531:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:36,568:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,571:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,573:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,575:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,575:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,577:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,578:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,579:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,583:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,583:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,586:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,590:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,596:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,599:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,603:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,621:INFO:Calculating mean and std
2025-08-13 15:52:36,621:INFO:Creating metrics dataframe
2025-08-13 15:52:36,622:INFO:Uploading results into container
2025-08-13 15:52:36,622:INFO:Uploading model into container now
2025-08-13 15:52:36,622:INFO:_master_model_container: 6
2025-08-13 15:52:36,622:INFO:_display_container: 2
2025-08-13 15:52:36,622:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-13 15:52:36,622:INFO:create_model() successfully completed......................................
2025-08-13 15:52:36,653:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:36,653:INFO:Creating metrics dataframe
2025-08-13 15:52:36,654:INFO:Initializing Random Forest Classifier
2025-08-13 15:52:36,654:INFO:Total runtime is 0.09189346631368002 minutes
2025-08-13 15:52:36,654:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:36,654:INFO:Initializing create_model()
2025-08-13 15:52:36,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:36,654:INFO:Checking exceptions
2025-08-13 15:52:36,654:INFO:Importing libraries
2025-08-13 15:52:36,654:INFO:Copying training dataset
2025-08-13 15:52:36,657:INFO:Defining folds
2025-08-13 15:52:36,657:INFO:Declaring metric variables
2025-08-13 15:52:36,657:INFO:Importing untrained model
2025-08-13 15:52:36,657:INFO:Random Forest Classifier Imported successfully
2025-08-13 15:52:36,658:INFO:Starting cross validation
2025-08-13 15:52:36,658:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:36,873:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,877:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,877:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,879:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,881:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,881:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,883:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,885:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,885:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,887:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,888:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,889:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,893:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,893:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,896:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:36,913:INFO:Calculating mean and std
2025-08-13 15:52:36,914:INFO:Creating metrics dataframe
2025-08-13 15:52:36,915:INFO:Uploading results into container
2025-08-13 15:52:36,915:INFO:Uploading model into container now
2025-08-13 15:52:36,915:INFO:_master_model_container: 7
2025-08-13 15:52:36,915:INFO:_display_container: 2
2025-08-13 15:52:36,916:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-13 15:52:36,916:INFO:create_model() successfully completed......................................
2025-08-13 15:52:36,957:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:36,958:INFO:Creating metrics dataframe
2025-08-13 15:52:36,959:INFO:Initializing Quadratic Discriminant Analysis
2025-08-13 15:52:36,959:INFO:Total runtime is 0.09696884950002035 minutes
2025-08-13 15:52:36,959:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:36,959:INFO:Initializing create_model()
2025-08-13 15:52:36,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:36,959:INFO:Checking exceptions
2025-08-13 15:52:36,959:INFO:Importing libraries
2025-08-13 15:52:36,959:INFO:Copying training dataset
2025-08-13 15:52:36,962:INFO:Defining folds
2025-08-13 15:52:36,962:INFO:Declaring metric variables
2025-08-13 15:52:36,962:INFO:Importing untrained model
2025-08-13 15:52:36,962:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-13 15:52:36,962:INFO:Starting cross validation
2025-08-13 15:52:36,962:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:36,989:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:52:36,989:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:52:36,992:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:52:37,000:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:52:37,000:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:52:37,001:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:52:37,003:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,005:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:52:37,005:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 15:52:37,006:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,006:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 15:52:37,006:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:52:37,007:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,008:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 15:52:37,010:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,011:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,012:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-13 15:52:37,013:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,014:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,018:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,020:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:37,021:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,022:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,025:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,026:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,028:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,030:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,033:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,041:INFO:Calculating mean and std
2025-08-13 15:52:37,041:INFO:Creating metrics dataframe
2025-08-13 15:52:37,042:INFO:Uploading results into container
2025-08-13 15:52:37,042:INFO:Uploading model into container now
2025-08-13 15:52:37,043:INFO:_master_model_container: 8
2025-08-13 15:52:37,043:INFO:_display_container: 2
2025-08-13 15:52:37,043:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-13 15:52:37,043:INFO:create_model() successfully completed......................................
2025-08-13 15:52:37,077:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:37,077:INFO:Creating metrics dataframe
2025-08-13 15:52:37,078:INFO:Initializing Ada Boost Classifier
2025-08-13 15:52:37,079:INFO:Total runtime is 0.0989657998085022 minutes
2025-08-13 15:52:37,079:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:37,079:INFO:Initializing create_model()
2025-08-13 15:52:37,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:37,079:INFO:Checking exceptions
2025-08-13 15:52:37,079:INFO:Importing libraries
2025-08-13 15:52:37,079:INFO:Copying training dataset
2025-08-13 15:52:37,081:INFO:Defining folds
2025-08-13 15:52:37,081:INFO:Declaring metric variables
2025-08-13 15:52:37,081:INFO:Importing untrained model
2025-08-13 15:52:37,082:INFO:Ada Boost Classifier Imported successfully
2025-08-13 15:52:37,082:INFO:Starting cross validation
2025-08-13 15:52:37,082:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:37,106:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:52:37,107:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:52:37,110:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:52:37,112:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:52:37,118:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 15:52:37,122:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,124:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,125:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,125:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,128:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,129:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,129:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,132:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,132:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,132:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,133:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,136:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,139:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,143:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,146:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,161:INFO:Calculating mean and std
2025-08-13 15:52:37,161:INFO:Creating metrics dataframe
2025-08-13 15:52:37,162:INFO:Uploading results into container
2025-08-13 15:52:37,162:INFO:Uploading model into container now
2025-08-13 15:52:37,162:INFO:_master_model_container: 9
2025-08-13 15:52:37,162:INFO:_display_container: 2
2025-08-13 15:52:37,163:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-13 15:52:37,163:INFO:create_model() successfully completed......................................
2025-08-13 15:52:37,197:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:37,197:INFO:Creating metrics dataframe
2025-08-13 15:52:37,198:INFO:Initializing Gradient Boosting Classifier
2025-08-13 15:52:37,198:INFO:Total runtime is 0.10095494985580444 minutes
2025-08-13 15:52:37,198:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:37,198:INFO:Initializing create_model()
2025-08-13 15:52:37,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:37,198:INFO:Checking exceptions
2025-08-13 15:52:37,198:INFO:Importing libraries
2025-08-13 15:52:37,198:INFO:Copying training dataset
2025-08-13 15:52:37,201:INFO:Defining folds
2025-08-13 15:52:37,201:INFO:Declaring metric variables
2025-08-13 15:52:37,201:INFO:Importing untrained model
2025-08-13 15:52:37,201:INFO:Gradient Boosting Classifier Imported successfully
2025-08-13 15:52:37,201:INFO:Starting cross validation
2025-08-13 15:52:37,202:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:37,352:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,356:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,358:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,360:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,361:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,361:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,364:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,364:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,365:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,368:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,368:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,368:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,378:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,382:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,385:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,393:INFO:Calculating mean and std
2025-08-13 15:52:37,393:INFO:Creating metrics dataframe
2025-08-13 15:52:37,394:INFO:Uploading results into container
2025-08-13 15:52:37,394:INFO:Uploading model into container now
2025-08-13 15:52:37,394:INFO:_master_model_container: 10
2025-08-13 15:52:37,394:INFO:_display_container: 2
2025-08-13 15:52:37,394:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-13 15:52:37,394:INFO:create_model() successfully completed......................................
2025-08-13 15:52:37,427:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:37,428:INFO:Creating metrics dataframe
2025-08-13 15:52:37,429:INFO:Initializing Linear Discriminant Analysis
2025-08-13 15:52:37,429:INFO:Total runtime is 0.10480040311813354 minutes
2025-08-13 15:52:37,429:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:37,429:INFO:Initializing create_model()
2025-08-13 15:52:37,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:37,429:INFO:Checking exceptions
2025-08-13 15:52:37,429:INFO:Importing libraries
2025-08-13 15:52:37,429:INFO:Copying training dataset
2025-08-13 15:52:37,431:INFO:Defining folds
2025-08-13 15:52:37,431:INFO:Declaring metric variables
2025-08-13 15:52:37,432:INFO:Importing untrained model
2025-08-13 15:52:37,432:INFO:Linear Discriminant Analysis Imported successfully
2025-08-13 15:52:37,432:INFO:Starting cross validation
2025-08-13 15:52:37,432:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:37,478:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,480:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,482:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,483:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,484:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,486:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,487:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,488:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,489:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,490:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,490:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,493:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,494:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,498:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,502:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,507:INFO:Calculating mean and std
2025-08-13 15:52:37,507:INFO:Creating metrics dataframe
2025-08-13 15:52:37,508:INFO:Uploading results into container
2025-08-13 15:52:37,508:INFO:Uploading model into container now
2025-08-13 15:52:37,509:INFO:_master_model_container: 11
2025-08-13 15:52:37,509:INFO:_display_container: 2
2025-08-13 15:52:37,509:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-13 15:52:37,509:INFO:create_model() successfully completed......................................
2025-08-13 15:52:37,542:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:37,542:INFO:Creating metrics dataframe
2025-08-13 15:52:37,543:INFO:Initializing Extra Trees Classifier
2025-08-13 15:52:37,543:INFO:Total runtime is 0.10671023527781169 minutes
2025-08-13 15:52:37,543:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:37,543:INFO:Initializing create_model()
2025-08-13 15:52:37,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:37,543:INFO:Checking exceptions
2025-08-13 15:52:37,543:INFO:Importing libraries
2025-08-13 15:52:37,543:INFO:Copying training dataset
2025-08-13 15:52:37,546:INFO:Defining folds
2025-08-13 15:52:37,546:INFO:Declaring metric variables
2025-08-13 15:52:37,546:INFO:Importing untrained model
2025-08-13 15:52:37,546:INFO:Extra Trees Classifier Imported successfully
2025-08-13 15:52:37,546:INFO:Starting cross validation
2025-08-13 15:52:37,547:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:37,706:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,710:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,711:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,714:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,714:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,715:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,718:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,718:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,719:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,721:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,722:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,725:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,725:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,728:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,732:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:37,743:INFO:Calculating mean and std
2025-08-13 15:52:37,743:INFO:Creating metrics dataframe
2025-08-13 15:52:37,744:INFO:Uploading results into container
2025-08-13 15:52:37,744:INFO:Uploading model into container now
2025-08-13 15:52:37,744:INFO:_master_model_container: 12
2025-08-13 15:52:37,744:INFO:_display_container: 2
2025-08-13 15:52:37,745:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-13 15:52:37,745:INFO:create_model() successfully completed......................................
2025-08-13 15:52:37,775:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:37,775:INFO:Creating metrics dataframe
2025-08-13 15:52:37,776:INFO:Initializing Light Gradient Boosting Machine
2025-08-13 15:52:37,776:INFO:Total runtime is 0.11059859991073609 minutes
2025-08-13 15:52:37,777:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:37,777:INFO:Initializing create_model()
2025-08-13 15:52:37,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:37,777:INFO:Checking exceptions
2025-08-13 15:52:37,777:INFO:Importing libraries
2025-08-13 15:52:37,777:INFO:Copying training dataset
2025-08-13 15:52:37,779:INFO:Defining folds
2025-08-13 15:52:37,779:INFO:Declaring metric variables
2025-08-13 15:52:37,780:INFO:Importing untrained model
2025-08-13 15:52:37,780:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-13 15:52:37,780:INFO:Starting cross validation
2025-08-13 15:52:37,780:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:38,189:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,193:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,196:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,207:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,211:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,212:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,215:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,216:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,220:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,222:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,224:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,227:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,238:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,242:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,245:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,258:INFO:Calculating mean and std
2025-08-13 15:52:38,259:INFO:Creating metrics dataframe
2025-08-13 15:52:38,259:INFO:Uploading results into container
2025-08-13 15:52:38,260:INFO:Uploading model into container now
2025-08-13 15:52:38,260:INFO:_master_model_container: 13
2025-08-13 15:52:38,260:INFO:_display_container: 2
2025-08-13 15:52:38,260:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-13 15:52:38,260:INFO:create_model() successfully completed......................................
2025-08-13 15:52:38,297:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:38,298:INFO:Creating metrics dataframe
2025-08-13 15:52:38,299:INFO:Initializing Dummy Classifier
2025-08-13 15:52:38,299:INFO:Total runtime is 0.11930190324783325 minutes
2025-08-13 15:52:38,299:INFO:SubProcess create_model() called ==================================
2025-08-13 15:52:38,299:INFO:Initializing create_model()
2025-08-13 15:52:38,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x16fc9b0d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:38,299:INFO:Checking exceptions
2025-08-13 15:52:38,299:INFO:Importing libraries
2025-08-13 15:52:38,299:INFO:Copying training dataset
2025-08-13 15:52:38,302:INFO:Defining folds
2025-08-13 15:52:38,302:INFO:Declaring metric variables
2025-08-13 15:52:38,302:INFO:Importing untrained model
2025-08-13 15:52:38,302:INFO:Dummy Classifier Imported successfully
2025-08-13 15:52:38,302:INFO:Starting cross validation
2025-08-13 15:52:38,303:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 15:52:38,341:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,341:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,342:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,344:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,345:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,345:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,346:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,346:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:38,346:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:38,348:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:38,348:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,348:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,349:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,349:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,351:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:38,352:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,355:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,359:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,361:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 15:52:38,363:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 15:52:38,380:INFO:Calculating mean and std
2025-08-13 15:52:38,380:INFO:Creating metrics dataframe
2025-08-13 15:52:38,381:INFO:Uploading results into container
2025-08-13 15:52:38,381:INFO:Uploading model into container now
2025-08-13 15:52:38,381:INFO:_master_model_container: 14
2025-08-13 15:52:38,381:INFO:_display_container: 2
2025-08-13 15:52:38,381:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-13 15:52:38,381:INFO:create_model() successfully completed......................................
2025-08-13 15:52:38,418:INFO:SubProcess create_model() end ==================================
2025-08-13 15:52:38,418:INFO:Creating metrics dataframe
2025-08-13 15:52:38,422:WARNING:/opt/anaconda3/envs/soar-env/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-08-13 15:52:38,422:INFO:Initializing create_model()
2025-08-13 15:52:38,422:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:38,422:INFO:Checking exceptions
2025-08-13 15:52:38,423:INFO:Importing libraries
2025-08-13 15:52:38,423:INFO:Copying training dataset
2025-08-13 15:52:38,425:INFO:Defining folds
2025-08-13 15:52:38,426:INFO:Declaring metric variables
2025-08-13 15:52:38,426:INFO:Importing untrained model
2025-08-13 15:52:38,426:INFO:Declaring custom model
2025-08-13 15:52:38,426:INFO:Logistic Regression Imported successfully
2025-08-13 15:52:38,426:INFO:Cross validation set to False
2025-08-13 15:52:38,426:INFO:Fitting Model
2025-08-13 15:52:38,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:52:38,446:INFO:create_model() successfully completed......................................
2025-08-13 15:52:38,487:INFO:_master_model_container: 14
2025-08-13 15:52:38,487:INFO:_display_container: 2
2025-08-13 15:52:38,487:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:52:38,487:INFO:compare_models() successfully completed......................................
2025-08-13 15:52:38,487:INFO:Initializing finalize_model()
2025-08-13 15:52:38,487:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-13 15:52:38,487:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 15:52:38,489:INFO:Initializing create_model()
2025-08-13 15:52:38,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f5c0190>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 15:52:38,489:INFO:Checking exceptions
2025-08-13 15:52:38,490:INFO:Importing libraries
2025-08-13 15:52:38,490:INFO:Copying training dataset
2025-08-13 15:52:38,490:INFO:Defining folds
2025-08-13 15:52:38,490:INFO:Declaring metric variables
2025-08-13 15:52:38,490:INFO:Importing untrained model
2025-08-13 15:52:38,490:INFO:Declaring custom model
2025-08-13 15:52:38,490:INFO:Logistic Regression Imported successfully
2025-08-13 15:52:38,491:INFO:Cross validation set to False
2025-08-13 15:52:38,491:INFO:Fitting Model
2025-08-13 15:52:38,513:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:52:38,514:INFO:create_model() successfully completed......................................
2025-08-13 15:52:38,549:INFO:_master_model_container: 14
2025-08-13 15:52:38,549:INFO:_display_container: 2
2025-08-13 15:52:38,552:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:52:38,552:INFO:finalize_model() successfully completed......................................
2025-08-13 15:52:38,591:INFO:Initializing save_model()
2025-08-13 15:52:38,591:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-13 15:52:38,591:INFO:Adding model into prep_pipe
2025-08-13 15:52:38,591:WARNING:Only Model saved as it was a pipeline.
2025-08-13 15:52:38,594:INFO:/Users/serpilsena/Desktop/hands-on/models/phishing_url_detector.pkl saved in current working directory
2025-08-13 15:52:38,597:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 15:52:38,597:INFO:save_model() successfully completed......................................
2025-08-13 15:52:38,633:INFO:PyCaret ClusteringExperiment
2025-08-13 15:52:38,633:INFO:Logging name: cluster-default-name
2025-08-13 15:52:38,633:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-13 15:52:38,633:INFO:version 3.3.2
2025-08-13 15:52:38,633:INFO:Initializing setup()
2025-08-13 15:52:38,633:INFO:self.USI: 4955
2025-08-13 15:52:38,633:INFO:self._variable_keys: {'seed', 'data', 'exp_name_log', 'n_jobs_param', 'logging_param', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'idx', 'exp_id', 'USI', 'html_param', '_ml_usecase', 'pipeline', 'X', '_available_plots', 'log_plots_param'}
2025-08-13 15:52:38,633:INFO:Checking environment
2025-08-13 15:52:38,633:INFO:python_version: 3.11.13
2025-08-13 15:52:38,633:INFO:python_build: ('main', 'Jun  5 2025 08:14:07')
2025-08-13 15:52:38,633:INFO:machine: x86_64
2025-08-13 15:52:38,633:INFO:platform: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:52:38,633:INFO:Memory: svmem(total=8589934592, available=397615104, percent=95.4, used=747302912, free=14950400, active=387158016, inactive=380108800, wired=360144896)
2025-08-13 15:52:38,634:INFO:Physical Core: 8
2025-08-13 15:52:38,634:INFO:Logical Core: 8
2025-08-13 15:52:38,634:INFO:Checking libraries
2025-08-13 15:52:38,634:INFO:System:
2025-08-13 15:52:38,634:INFO:    python: 3.11.13 (main, Jun  5 2025, 08:14:07) [Clang 14.0.6 ]
2025-08-13 15:52:38,634:INFO:executable: /opt/anaconda3/envs/soar-env/bin/python
2025-08-13 15:52:38,634:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2025-08-13 15:52:38,634:INFO:PyCaret required dependencies:
2025-08-13 15:52:38,634:INFO:                 pip: 25.1
2025-08-13 15:52:38,634:INFO:          setuptools: 78.1.1
2025-08-13 15:52:38,634:INFO:             pycaret: 3.3.2
2025-08-13 15:52:38,634:INFO:             IPython: 9.4.0
2025-08-13 15:52:38,634:INFO:          ipywidgets: 8.1.7
2025-08-13 15:52:38,634:INFO:                tqdm: 4.67.1
2025-08-13 15:52:38,634:INFO:               numpy: 1.26.4
2025-08-13 15:52:38,634:INFO:              pandas: 2.1.4
2025-08-13 15:52:38,634:INFO:              jinja2: 3.1.6
2025-08-13 15:52:38,634:INFO:               scipy: 1.11.4
2025-08-13 15:52:38,634:INFO:              joblib: 1.3.2
2025-08-13 15:52:38,634:INFO:             sklearn: 1.4.2
2025-08-13 15:52:38,634:INFO:                pyod: 2.0.5
2025-08-13 15:52:38,634:INFO:            imblearn: 0.13.0
2025-08-13 15:52:38,634:INFO:   category_encoders: 2.7.0
2025-08-13 15:52:38,634:INFO:            lightgbm: 4.6.0
2025-08-13 15:52:38,634:INFO:               numba: 0.61.0
2025-08-13 15:52:38,634:INFO:            requests: 2.32.4
2025-08-13 15:52:38,634:INFO:          matplotlib: 3.10.1
2025-08-13 15:52:38,634:INFO:          scikitplot: 0.3.7
2025-08-13 15:52:38,634:INFO:         yellowbrick: 1.5
2025-08-13 15:52:38,634:INFO:              plotly: 5.24.1
2025-08-13 15:52:38,634:INFO:    plotly-resampler: Not installed
2025-08-13 15:52:38,634:INFO:             kaleido: 0.0.0
2025-08-13 15:52:38,634:INFO:           schemdraw: 0.15
2025-08-13 15:52:38,634:INFO:         statsmodels: 0.14.5
2025-08-13 15:52:38,634:INFO:              sktime: 0.26.0
2025-08-13 15:52:38,634:INFO:               tbats: 1.1.3
2025-08-13 15:52:38,634:INFO:            pmdarima: 2.0.4
2025-08-13 15:52:38,634:INFO:              psutil: 7.0.0
2025-08-13 15:52:38,634:INFO:          markupsafe: 3.0.2
2025-08-13 15:52:38,634:INFO:             pickle5: Not installed
2025-08-13 15:52:38,634:INFO:         cloudpickle: 3.1.1
2025-08-13 15:52:38,634:INFO:         deprecation: 2.1.0
2025-08-13 15:52:38,634:INFO:              xxhash: 3.5.0
2025-08-13 15:52:38,634:INFO:           wurlitzer: 3.1.1
2025-08-13 15:52:38,634:INFO:PyCaret optional dependencies:
2025-08-13 15:52:38,634:INFO:                shap: Not installed
2025-08-13 15:52:38,634:INFO:           interpret: Not installed
2025-08-13 15:52:38,634:INFO:                umap: 0.5.9.post2
2025-08-13 15:52:38,634:INFO:     ydata_profiling: Not installed
2025-08-13 15:52:38,634:INFO:  explainerdashboard: Not installed
2025-08-13 15:52:38,634:INFO:             autoviz: Not installed
2025-08-13 15:52:38,634:INFO:           fairlearn: Not installed
2025-08-13 15:52:38,634:INFO:          deepchecks: Not installed
2025-08-13 15:52:38,634:INFO:             xgboost: Not installed
2025-08-13 15:52:38,634:INFO:            catboost: Not installed
2025-08-13 15:52:38,634:INFO:              kmodes: Not installed
2025-08-13 15:52:38,634:INFO:             mlxtend: Not installed
2025-08-13 15:52:38,634:INFO:       statsforecast: Not installed
2025-08-13 15:52:38,634:INFO:        tune_sklearn: Not installed
2025-08-13 15:52:38,634:INFO:                 ray: Not installed
2025-08-13 15:52:38,634:INFO:            hyperopt: Not installed
2025-08-13 15:52:38,634:INFO:              optuna: Not installed
2025-08-13 15:52:38,634:INFO:               skopt: Not installed
2025-08-13 15:52:38,634:INFO:              mlflow: Not installed
2025-08-13 15:52:38,634:INFO:              gradio: Not installed
2025-08-13 15:52:38,634:INFO:             fastapi: Not installed
2025-08-13 15:52:38,634:INFO:             uvicorn: Not installed
2025-08-13 15:52:38,634:INFO:              m2cgen: Not installed
2025-08-13 15:52:38,634:INFO:           evidently: Not installed
2025-08-13 15:52:38,634:INFO:               fugue: Not installed
2025-08-13 15:52:38,634:INFO:           streamlit: Not installed
2025-08-13 15:52:38,634:INFO:             prophet: Not installed
2025-08-13 15:52:38,634:INFO:None
2025-08-13 15:52:38,634:INFO:Set up data.
2025-08-13 15:52:38,635:INFO:Set up index.
2025-08-13 15:52:38,636:INFO:Assigning column types.
2025-08-13 15:52:38,637:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-13 15:52:38,637:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:52:38,637:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,637:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 15:52:38,637:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,637:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-13 15:52:38,637:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,637:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,637:INFO:Preparing preprocessing pipeline...
2025-08-13 15:52:38,637:INFO:Set up simple imputation.
2025-08-13 15:52:38,637:INFO:Set up feature normalization.
2025-08-13 15:52:38,647:INFO:Finished creating preprocessing pipeline.
2025-08-13 15:52:38,649:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    trans...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 15:52:38,649:INFO:Creating final display dataframe.
2025-08-13 15:52:38,658:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  4955
2025-08-13 15:52:38,658:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,658:WARNING:
'kmodes' is a soft dependency and not included in the pycaret installation. Please run: `pip install kmodes` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-13 15:52:38,658:INFO:setup() successfully completed in 0.03s...............
2025-08-13 15:52:38,658:INFO:Initializing create_model()
2025-08-13 15:52:38,658:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16f996690>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-13 15:52:38,658:INFO:Checking exceptions
2025-08-13 15:52:38,665:INFO:Importing untrained model
2025-08-13 15:52:38,665:INFO:K-Means Clustering Imported successfully
2025-08-13 15:52:38,666:INFO:Fitting Model
2025-08-13 15:52:38,786:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:52:38,787:INFO:create_models() successfully completed......................................
2025-08-13 15:52:38,787:INFO:Uploading results into container
2025-08-13 15:52:38,788:INFO:Uploading model into container now
2025-08-13 15:52:38,790:INFO:_master_model_container: 1
2025-08-13 15:52:38,790:INFO:_display_container: 2
2025-08-13 15:52:38,790:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 15:52:38,790:INFO:create_model() successfully completed......................................
2025-08-13 15:52:38,837:INFO:Initializing assign_model()
2025-08-13 15:52:38,837:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0x16f996690>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-13 15:52:38,837:INFO:Checking exceptions
2025-08-13 15:52:38,837:INFO:Determining Trained Model
2025-08-13 15:52:38,837:INFO:Trained Model : K-Means Clustering
2025-08-13 15:52:38,837:INFO:Copying data
2025-08-13 15:52:38,838:INFO:(3000, 12)
2025-08-13 15:52:38,838:INFO:assign_model() successfully completed......................................
2025-08-13 15:52:38,842:INFO:Initializing save_model()
2025-08-13 15:52:38,842:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/Users/serpilsena/Desktop/hands-on/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gy/znwkgt1n1_q0tc24r3q9j7880000gq/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    trans...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-13 15:52:38,842:INFO:Adding model into prep_pipe
2025-08-13 15:52:38,844:INFO:/Users/serpilsena/Desktop/hands-on/models/threat_actor_profiler.pkl saved in current working directory
2025-08-13 15:52:38,846:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-13 15:52:38,846:INFO:save_model() successfully completed......................................
2025-08-13 21:00:37,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:00:37,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:00:37,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:00:37,096:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:00:37,649:INFO:PyCaret ClassificationExperiment
2025-08-13 21:00:37,649:INFO:Logging name: clf-default-name
2025-08-13 21:00:37,649:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 21:00:37,649:INFO:version 3.3.2
2025-08-13 21:00:37,649:INFO:Initializing setup()
2025-08-13 21:00:37,649:INFO:self.USI: 9338
2025-08-13 21:00:37,649:INFO:self._variable_keys: {'y_test', 'log_plots_param', 'seed', 'html_param', 'logging_param', 'target_param', 'idx', 'data', 'X', 'y_train', 'is_multiclass', 'fold_shuffle_param', 'USI', 'fold_groups_param', 'gpu_n_jobs_param', 'y', 'n_jobs_param', '_ml_usecase', 'X_train', 'gpu_param', 'exp_id', 'fix_imbalance', 'memory', 'fold_generator', '_available_plots', 'exp_name_log', 'X_test', 'pipeline'}
2025-08-13 21:00:37,649:INFO:Checking environment
2025-08-13 21:00:37,649:INFO:python_version: 3.11.13
2025-08-13 21:00:37,649:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-13 21:00:37,649:INFO:machine: aarch64
2025-08-13 21:00:37,649:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 21:00:37,649:INFO:Memory: svmem(total=4109803520, available=3209715712, percent=21.9, used=707190784, free=83861504, active=389746688, inactive=3123453952, buffers=100081664, cached=3218669568, shared=684032, slab=367431680)
2025-08-13 21:00:37,650:INFO:Physical Core: 8
2025-08-13 21:00:37,650:INFO:Logical Core: 8
2025-08-13 21:00:37,650:INFO:Checking libraries
2025-08-13 21:00:37,650:INFO:System:
2025-08-13 21:00:37,650:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-13 21:00:37,650:INFO:executable: /usr/local/bin/python
2025-08-13 21:00:37,650:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 21:00:37,650:INFO:PyCaret required dependencies:
2025-08-13 21:00:37,900:INFO:                 pip: 24.0
2025-08-13 21:00:37,901:INFO:          setuptools: 80.9.0
2025-08-13 21:00:37,901:INFO:             pycaret: 3.3.2
2025-08-13 21:00:37,901:INFO:             IPython: 9.4.0
2025-08-13 21:00:37,901:INFO:          ipywidgets: 8.1.7
2025-08-13 21:00:37,901:INFO:                tqdm: 4.67.1
2025-08-13 21:00:37,901:INFO:               numpy: 1.26.4
2025-08-13 21:00:37,901:INFO:              pandas: 2.1.4
2025-08-13 21:00:37,901:INFO:              jinja2: 3.1.6
2025-08-13 21:00:37,901:INFO:               scipy: 1.11.4
2025-08-13 21:00:37,901:INFO:              joblib: 1.3.2
2025-08-13 21:00:37,901:INFO:             sklearn: 1.4.2
2025-08-13 21:00:37,901:INFO:                pyod: 2.0.5
2025-08-13 21:00:37,901:INFO:            imblearn: 0.13.0
2025-08-13 21:00:37,901:INFO:   category_encoders: 2.7.0
2025-08-13 21:00:37,901:INFO:            lightgbm: 4.6.0
2025-08-13 21:00:37,901:INFO:               numba: 0.61.0
2025-08-13 21:00:37,901:INFO:            requests: 2.32.4
2025-08-13 21:00:37,901:INFO:          matplotlib: 3.7.5
2025-08-13 21:00:37,901:INFO:          scikitplot: 0.3.7
2025-08-13 21:00:37,901:INFO:         yellowbrick: 1.5
2025-08-13 21:00:37,902:INFO:              plotly: 5.24.1
2025-08-13 21:00:37,902:INFO:    plotly-resampler: Not installed
2025-08-13 21:00:37,902:INFO:             kaleido: 1.0.0
2025-08-13 21:00:37,902:INFO:           schemdraw: 0.15
2025-08-13 21:00:37,902:INFO:         statsmodels: 0.14.5
2025-08-13 21:00:37,902:INFO:              sktime: 0.26.0
2025-08-13 21:00:37,902:INFO:               tbats: 1.1.3
2025-08-13 21:00:37,902:INFO:            pmdarima: 2.0.4
2025-08-13 21:00:37,902:INFO:              psutil: 7.0.0
2025-08-13 21:00:37,902:INFO:          markupsafe: 3.0.2
2025-08-13 21:00:37,902:INFO:             pickle5: Not installed
2025-08-13 21:00:37,902:INFO:         cloudpickle: 3.1.1
2025-08-13 21:00:37,902:INFO:         deprecation: 2.1.0
2025-08-13 21:00:37,902:INFO:              xxhash: 3.5.0
2025-08-13 21:00:37,902:INFO:           wurlitzer: 3.1.1
2025-08-13 21:00:37,902:INFO:PyCaret optional dependencies:
2025-08-13 21:00:38,914:INFO:                shap: 0.44.1
2025-08-13 21:00:38,914:INFO:           interpret: 0.7.2
2025-08-13 21:00:38,914:INFO:                umap: 0.5.7
2025-08-13 21:00:38,914:INFO:     ydata_profiling: 4.16.1
2025-08-13 21:00:38,914:INFO:  explainerdashboard: 0.5.1
2025-08-13 21:00:38,914:INFO:             autoviz: Not installed
2025-08-13 21:00:38,914:INFO:           fairlearn: 0.7.0
2025-08-13 21:00:38,914:INFO:          deepchecks: Not installed
2025-08-13 21:00:38,914:INFO:             xgboost: 3.0.4
2025-08-13 21:00:38,914:INFO:            catboost: 1.2.8
2025-08-13 21:00:38,914:INFO:              kmodes: 0.12.2
2025-08-13 21:00:38,914:INFO:             mlxtend: 0.23.4
2025-08-13 21:00:38,914:INFO:       statsforecast: 1.5.0
2025-08-13 21:00:38,914:INFO:        tune_sklearn: Not installed
2025-08-13 21:00:38,914:INFO:                 ray: Not installed
2025-08-13 21:00:38,914:INFO:            hyperopt: 0.2.7
2025-08-13 21:00:38,914:INFO:              optuna: 4.4.0
2025-08-13 21:00:38,914:INFO:               skopt: 0.10.2
2025-08-13 21:00:38,914:INFO:              mlflow: 3.2.0
2025-08-13 21:00:38,914:INFO:              gradio: 5.42.0
2025-08-13 21:00:38,914:INFO:             fastapi: 0.116.1
2025-08-13 21:00:38,914:INFO:             uvicorn: 0.35.0
2025-08-13 21:00:38,915:INFO:              m2cgen: 0.10.0
2025-08-13 21:00:38,915:INFO:           evidently: 0.4.40
2025-08-13 21:00:38,915:INFO:               fugue: 0.8.7
2025-08-13 21:00:38,915:INFO:           streamlit: 1.48.1
2025-08-13 21:00:38,915:INFO:             prophet: Not installed
2025-08-13 21:00:38,915:INFO:None
2025-08-13 21:00:38,915:INFO:Set up data.
2025-08-13 21:00:38,918:INFO:Set up folding strategy.
2025-08-13 21:00:38,918:INFO:Set up train/test split.
2025-08-13 21:00:38,921:INFO:Set up index.
2025-08-13 21:00:38,922:INFO:Assigning column types.
2025-08-13 21:00:38,923:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-13 21:00:38,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 21:00:38,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 21:00:38,950:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:38,951:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 21:00:39,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 21:00:39,010:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,011:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,011:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-13 21:00:39,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 21:00:39,036:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,037:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,052:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 21:00:39,061:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,062:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,062:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-13 21:00:39,086:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,087:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,111:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,112:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,113:INFO:Preparing preprocessing pipeline...
2025-08-13 21:00:39,114:INFO:Set up label encoding.
2025-08-13 21:00:39,114:INFO:Set up simple imputation.
2025-08-13 21:00:39,115:INFO:Set up encoding of categorical features.
2025-08-13 21:00:39,115:INFO:Set up feature normalization.
2025-08-13 21:00:39,136:INFO:Finished creating preprocessing pipeline.
2025-08-13 21:00:39,138:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 21:00:39,138:INFO:Creating final display dataframe.
2025-08-13 21:00:39,191:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     9338
2025-08-13 21:00:39,215:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,217:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,241:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 21:00:39,242:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 21:00:39,243:INFO:setup() successfully completed in 1.6s...............
2025-08-13 21:00:39,243:INFO:Initializing compare_models()
2025-08-13 21:00:39,243:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-13 21:00:39,243:INFO:Checking exceptions
2025-08-13 21:00:39,245:INFO:Preparing display monitor
2025-08-13 21:00:39,246:INFO:Initializing Logistic Regression
2025-08-13 21:00:39,246:INFO:Total runtime is 1.815954844156901e-06 minutes
2025-08-13 21:00:39,246:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:39,246:INFO:Initializing create_model()
2025-08-13 21:00:39,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:39,246:INFO:Checking exceptions
2025-08-13 21:00:39,246:INFO:Importing libraries
2025-08-13 21:00:39,247:INFO:Copying training dataset
2025-08-13 21:00:39,248:INFO:Defining folds
2025-08-13 21:00:39,248:INFO:Declaring metric variables
2025-08-13 21:00:39,248:INFO:Importing untrained model
2025-08-13 21:00:39,249:INFO:Logistic Regression Imported successfully
2025-08-13 21:00:39,249:INFO:Starting cross validation
2025-08-13 21:00:39,249:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:40,725:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,728:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,728:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,729:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,731:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,731:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,732:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,735:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,736:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,742:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:40,765:INFO:Calculating mean and std
2025-08-13 21:00:40,769:INFO:Creating metrics dataframe
2025-08-13 21:00:40,777:INFO:Uploading results into container
2025-08-13 21:00:40,779:INFO:Uploading model into container now
2025-08-13 21:00:40,782:INFO:_master_model_container: 1
2025-08-13 21:00:40,786:INFO:_display_container: 2
2025-08-13 21:00:40,787:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 21:00:40,787:INFO:create_model() successfully completed......................................
2025-08-13 21:00:40,995:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:40,995:INFO:Creating metrics dataframe
2025-08-13 21:00:40,997:INFO:Initializing K Neighbors Classifier
2025-08-13 21:00:40,997:INFO:Total runtime is 0.029184643427530924 minutes
2025-08-13 21:00:40,997:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:40,997:INFO:Initializing create_model()
2025-08-13 21:00:40,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:40,997:INFO:Checking exceptions
2025-08-13 21:00:40,997:INFO:Importing libraries
2025-08-13 21:00:40,997:INFO:Copying training dataset
2025-08-13 21:00:40,999:INFO:Defining folds
2025-08-13 21:00:40,999:INFO:Declaring metric variables
2025-08-13 21:00:40,999:INFO:Importing untrained model
2025-08-13 21:00:41,000:INFO:K Neighbors Classifier Imported successfully
2025-08-13 21:00:41,000:INFO:Starting cross validation
2025-08-13 21:00:41,000:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:41,129:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:41,132:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:41,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:41,136:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:41,137:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:41,142:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,061:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,072:INFO:Calculating mean and std
2025-08-13 21:00:42,072:INFO:Creating metrics dataframe
2025-08-13 21:00:42,073:INFO:Uploading results into container
2025-08-13 21:00:42,074:INFO:Uploading model into container now
2025-08-13 21:00:42,074:INFO:_master_model_container: 2
2025-08-13 21:00:42,074:INFO:_display_container: 2
2025-08-13 21:00:42,074:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-13 21:00:42,074:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,159:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,160:INFO:Creating metrics dataframe
2025-08-13 21:00:42,161:INFO:Initializing Naive Bayes
2025-08-13 21:00:42,161:INFO:Total runtime is 0.048587163289388016 minutes
2025-08-13 21:00:42,161:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,161:INFO:Initializing create_model()
2025-08-13 21:00:42,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,161:INFO:Checking exceptions
2025-08-13 21:00:42,161:INFO:Importing libraries
2025-08-13 21:00:42,161:INFO:Copying training dataset
2025-08-13 21:00:42,163:INFO:Defining folds
2025-08-13 21:00:42,163:INFO:Declaring metric variables
2025-08-13 21:00:42,163:INFO:Importing untrained model
2025-08-13 21:00:42,163:INFO:Naive Bayes Imported successfully
2025-08-13 21:00:42,163:INFO:Starting cross validation
2025-08-13 21:00:42,164:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:42,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,220:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,220:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,220:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,222:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,224:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,224:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,225:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,225:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,226:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,227:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,228:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,228:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,229:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,232:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,240:INFO:Calculating mean and std
2025-08-13 21:00:42,240:INFO:Creating metrics dataframe
2025-08-13 21:00:42,241:INFO:Uploading results into container
2025-08-13 21:00:42,241:INFO:Uploading model into container now
2025-08-13 21:00:42,241:INFO:_master_model_container: 3
2025-08-13 21:00:42,241:INFO:_display_container: 2
2025-08-13 21:00:42,241:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-13 21:00:42,241:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,308:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,309:INFO:Creating metrics dataframe
2025-08-13 21:00:42,309:INFO:Initializing Decision Tree Classifier
2025-08-13 21:00:42,310:INFO:Total runtime is 0.051067531108856194 minutes
2025-08-13 21:00:42,310:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,310:INFO:Initializing create_model()
2025-08-13 21:00:42,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,310:INFO:Checking exceptions
2025-08-13 21:00:42,310:INFO:Importing libraries
2025-08-13 21:00:42,310:INFO:Copying training dataset
2025-08-13 21:00:42,312:INFO:Defining folds
2025-08-13 21:00:42,312:INFO:Declaring metric variables
2025-08-13 21:00:42,312:INFO:Importing untrained model
2025-08-13 21:00:42,312:INFO:Decision Tree Classifier Imported successfully
2025-08-13 21:00:42,312:INFO:Starting cross validation
2025-08-13 21:00:42,313:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:42,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,345:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,346:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,348:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,349:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,349:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,352:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,361:INFO:Calculating mean and std
2025-08-13 21:00:42,362:INFO:Creating metrics dataframe
2025-08-13 21:00:42,363:INFO:Uploading results into container
2025-08-13 21:00:42,363:INFO:Uploading model into container now
2025-08-13 21:00:42,363:INFO:_master_model_container: 4
2025-08-13 21:00:42,363:INFO:_display_container: 2
2025-08-13 21:00:42,363:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-13 21:00:42,363:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,432:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,432:INFO:Creating metrics dataframe
2025-08-13 21:00:42,433:INFO:Initializing SVM - Linear Kernel
2025-08-13 21:00:42,433:INFO:Total runtime is 0.05312523841857909 minutes
2025-08-13 21:00:42,433:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,433:INFO:Initializing create_model()
2025-08-13 21:00:42,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,433:INFO:Checking exceptions
2025-08-13 21:00:42,433:INFO:Importing libraries
2025-08-13 21:00:42,433:INFO:Copying training dataset
2025-08-13 21:00:42,435:INFO:Defining folds
2025-08-13 21:00:42,435:INFO:Declaring metric variables
2025-08-13 21:00:42,435:INFO:Importing untrained model
2025-08-13 21:00:42,435:INFO:SVM - Linear Kernel Imported successfully
2025-08-13 21:00:42,436:INFO:Starting cross validation
2025-08-13 21:00:42,436:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:42,465:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,468:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,471:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,471:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,471:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,472:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,474:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,474:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,476:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,476:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,481:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,486:INFO:Calculating mean and std
2025-08-13 21:00:42,486:INFO:Creating metrics dataframe
2025-08-13 21:00:42,487:INFO:Uploading results into container
2025-08-13 21:00:42,487:INFO:Uploading model into container now
2025-08-13 21:00:42,488:INFO:_master_model_container: 5
2025-08-13 21:00:42,488:INFO:_display_container: 2
2025-08-13 21:00:42,488:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-13 21:00:42,488:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,555:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,555:INFO:Creating metrics dataframe
2025-08-13 21:00:42,556:INFO:Initializing Ridge Classifier
2025-08-13 21:00:42,556:INFO:Total runtime is 0.0551711082458496 minutes
2025-08-13 21:00:42,556:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,556:INFO:Initializing create_model()
2025-08-13 21:00:42,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,556:INFO:Checking exceptions
2025-08-13 21:00:42,556:INFO:Importing libraries
2025-08-13 21:00:42,556:INFO:Copying training dataset
2025-08-13 21:00:42,558:INFO:Defining folds
2025-08-13 21:00:42,558:INFO:Declaring metric variables
2025-08-13 21:00:42,558:INFO:Importing untrained model
2025-08-13 21:00:42,558:INFO:Ridge Classifier Imported successfully
2025-08-13 21:00:42,558:INFO:Starting cross validation
2025-08-13 21:00:42,559:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:42,591:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,592:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,592:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,595:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,595:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,596:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,596:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,596:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,599:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,599:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,599:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,599:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,600:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,602:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,606:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,622:INFO:Calculating mean and std
2025-08-13 21:00:42,622:INFO:Creating metrics dataframe
2025-08-13 21:00:42,623:INFO:Uploading results into container
2025-08-13 21:00:42,623:INFO:Uploading model into container now
2025-08-13 21:00:42,624:INFO:_master_model_container: 6
2025-08-13 21:00:42,624:INFO:_display_container: 2
2025-08-13 21:00:42,624:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-13 21:00:42,624:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,691:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,691:INFO:Creating metrics dataframe
2025-08-13 21:00:42,692:INFO:Initializing Random Forest Classifier
2025-08-13 21:00:42,692:INFO:Total runtime is 0.05744246244430541 minutes
2025-08-13 21:00:42,692:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,692:INFO:Initializing create_model()
2025-08-13 21:00:42,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,692:INFO:Checking exceptions
2025-08-13 21:00:42,692:INFO:Importing libraries
2025-08-13 21:00:42,692:INFO:Copying training dataset
2025-08-13 21:00:42,694:INFO:Defining folds
2025-08-13 21:00:42,694:INFO:Declaring metric variables
2025-08-13 21:00:42,694:INFO:Importing untrained model
2025-08-13 21:00:42,695:INFO:Random Forest Classifier Imported successfully
2025-08-13 21:00:42,695:INFO:Starting cross validation
2025-08-13 21:00:42,695:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:42,868:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,870:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,871:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,872:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,875:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,875:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,879:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,892:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,893:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,894:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,895:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,897:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:42,913:INFO:Calculating mean and std
2025-08-13 21:00:42,913:INFO:Creating metrics dataframe
2025-08-13 21:00:42,914:INFO:Uploading results into container
2025-08-13 21:00:42,914:INFO:Uploading model into container now
2025-08-13 21:00:42,914:INFO:_master_model_container: 7
2025-08-13 21:00:42,914:INFO:_display_container: 2
2025-08-13 21:00:42,914:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-13 21:00:42,915:INFO:create_model() successfully completed......................................
2025-08-13 21:00:42,981:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:42,981:INFO:Creating metrics dataframe
2025-08-13 21:00:42,982:INFO:Initializing Quadratic Discriminant Analysis
2025-08-13 21:00:42,982:INFO:Total runtime is 0.06227713425954182 minutes
2025-08-13 21:00:42,982:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:42,982:INFO:Initializing create_model()
2025-08-13 21:00:42,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:42,982:INFO:Checking exceptions
2025-08-13 21:00:42,982:INFO:Importing libraries
2025-08-13 21:00:42,983:INFO:Copying training dataset
2025-08-13 21:00:42,984:INFO:Defining folds
2025-08-13 21:00:42,984:INFO:Declaring metric variables
2025-08-13 21:00:42,984:INFO:Importing untrained model
2025-08-13 21:00:42,985:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-13 21:00:42,985:INFO:Starting cross validation
2025-08-13 21:00:42,985:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 21:00:43,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 21:00:43,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 21:00:43,007:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 21:00:43,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 21:00:43,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 21:00:43,012:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 21:00:43,013:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 21:00:43,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 21:00:43,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 21:00:43,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 21:00:43,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,018:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,019:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,019:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-13 21:00:43,021:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,021:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,023:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,024:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,024:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,026:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,026:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:43,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,028:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,029:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,048:INFO:Calculating mean and std
2025-08-13 21:00:43,048:INFO:Creating metrics dataframe
2025-08-13 21:00:43,049:INFO:Uploading results into container
2025-08-13 21:00:43,049:INFO:Uploading model into container now
2025-08-13 21:00:43,049:INFO:_master_model_container: 8
2025-08-13 21:00:43,049:INFO:_display_container: 2
2025-08-13 21:00:43,050:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-13 21:00:43,050:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,116:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,116:INFO:Creating metrics dataframe
2025-08-13 21:00:43,117:INFO:Initializing Ada Boost Classifier
2025-08-13 21:00:43,117:INFO:Total runtime is 0.06452823877334594 minutes
2025-08-13 21:00:43,117:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,117:INFO:Initializing create_model()
2025-08-13 21:00:43,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,117:INFO:Checking exceptions
2025-08-13 21:00:43,118:INFO:Importing libraries
2025-08-13 21:00:43,118:INFO:Copying training dataset
2025-08-13 21:00:43,119:INFO:Defining folds
2025-08-13 21:00:43,119:INFO:Declaring metric variables
2025-08-13 21:00:43,119:INFO:Importing untrained model
2025-08-13 21:00:43,120:INFO:Ada Boost Classifier Imported successfully
2025-08-13 21:00:43,120:INFO:Starting cross validation
2025-08-13 21:00:43,120:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,139:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 21:00:43,139:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 21:00:43,139:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 21:00:43,141:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 21:00:43,146:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 21:00:43,149:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,149:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,151:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,152:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,153:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,153:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,155:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,156:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,156:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,158:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,159:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,159:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,161:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,161:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,164:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,170:INFO:Calculating mean and std
2025-08-13 21:00:43,170:INFO:Creating metrics dataframe
2025-08-13 21:00:43,171:INFO:Uploading results into container
2025-08-13 21:00:43,171:INFO:Uploading model into container now
2025-08-13 21:00:43,172:INFO:_master_model_container: 9
2025-08-13 21:00:43,172:INFO:_display_container: 2
2025-08-13 21:00:43,172:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-13 21:00:43,172:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,238:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,238:INFO:Creating metrics dataframe
2025-08-13 21:00:43,239:INFO:Initializing Gradient Boosting Classifier
2025-08-13 21:00:43,239:INFO:Total runtime is 0.06656541029612223 minutes
2025-08-13 21:00:43,240:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,240:INFO:Initializing create_model()
2025-08-13 21:00:43,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,240:INFO:Checking exceptions
2025-08-13 21:00:43,240:INFO:Importing libraries
2025-08-13 21:00:43,240:INFO:Copying training dataset
2025-08-13 21:00:43,242:INFO:Defining folds
2025-08-13 21:00:43,242:INFO:Declaring metric variables
2025-08-13 21:00:43,242:INFO:Importing untrained model
2025-08-13 21:00:43,242:INFO:Gradient Boosting Classifier Imported successfully
2025-08-13 21:00:43,242:INFO:Starting cross validation
2025-08-13 21:00:43,242:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,353:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,357:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,357:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,357:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,382:INFO:Calculating mean and std
2025-08-13 21:00:43,382:INFO:Creating metrics dataframe
2025-08-13 21:00:43,383:INFO:Uploading results into container
2025-08-13 21:00:43,383:INFO:Uploading model into container now
2025-08-13 21:00:43,383:INFO:_master_model_container: 10
2025-08-13 21:00:43,383:INFO:_display_container: 2
2025-08-13 21:00:43,384:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-13 21:00:43,384:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,450:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,451:INFO:Creating metrics dataframe
2025-08-13 21:00:43,452:INFO:Initializing Linear Discriminant Analysis
2025-08-13 21:00:43,452:INFO:Total runtime is 0.07010142405827839 minutes
2025-08-13 21:00:43,452:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,452:INFO:Initializing create_model()
2025-08-13 21:00:43,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,452:INFO:Checking exceptions
2025-08-13 21:00:43,452:INFO:Importing libraries
2025-08-13 21:00:43,452:INFO:Copying training dataset
2025-08-13 21:00:43,454:INFO:Defining folds
2025-08-13 21:00:43,454:INFO:Declaring metric variables
2025-08-13 21:00:43,454:INFO:Importing untrained model
2025-08-13 21:00:43,454:INFO:Linear Discriminant Analysis Imported successfully
2025-08-13 21:00:43,454:INFO:Starting cross validation
2025-08-13 21:00:43,455:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,491:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,491:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,494:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,517:INFO:Calculating mean and std
2025-08-13 21:00:43,517:INFO:Creating metrics dataframe
2025-08-13 21:00:43,518:INFO:Uploading results into container
2025-08-13 21:00:43,518:INFO:Uploading model into container now
2025-08-13 21:00:43,518:INFO:_master_model_container: 11
2025-08-13 21:00:43,518:INFO:_display_container: 2
2025-08-13 21:00:43,519:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-13 21:00:43,519:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,586:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,586:INFO:Creating metrics dataframe
2025-08-13 21:00:43,587:INFO:Initializing Extra Trees Classifier
2025-08-13 21:00:43,587:INFO:Total runtime is 0.07236148516337076 minutes
2025-08-13 21:00:43,587:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,587:INFO:Initializing create_model()
2025-08-13 21:00:43,587:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,587:INFO:Checking exceptions
2025-08-13 21:00:43,588:INFO:Importing libraries
2025-08-13 21:00:43,588:INFO:Copying training dataset
2025-08-13 21:00:43,589:INFO:Defining folds
2025-08-13 21:00:43,589:INFO:Declaring metric variables
2025-08-13 21:00:43,590:INFO:Importing untrained model
2025-08-13 21:00:43,590:INFO:Extra Trees Classifier Imported successfully
2025-08-13 21:00:43,590:INFO:Starting cross validation
2025-08-13 21:00:43,590:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,725:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,732:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,739:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,741:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,762:INFO:Calculating mean and std
2025-08-13 21:00:43,762:INFO:Creating metrics dataframe
2025-08-13 21:00:43,763:INFO:Uploading results into container
2025-08-13 21:00:43,763:INFO:Uploading model into container now
2025-08-13 21:00:43,763:INFO:_master_model_container: 12
2025-08-13 21:00:43,763:INFO:_display_container: 2
2025-08-13 21:00:43,764:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-13 21:00:43,764:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,831:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,831:INFO:Creating metrics dataframe
2025-08-13 21:00:43,832:INFO:Initializing Extreme Gradient Boosting
2025-08-13 21:00:43,832:INFO:Total runtime is 0.076449982325236 minutes
2025-08-13 21:00:43,833:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,833:INFO:Initializing create_model()
2025-08-13 21:00:43,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,833:INFO:Checking exceptions
2025-08-13 21:00:43,833:INFO:Importing libraries
2025-08-13 21:00:43,833:INFO:Copying training dataset
2025-08-13 21:00:43,835:INFO:Defining folds
2025-08-13 21:00:43,835:INFO:Declaring metric variables
2025-08-13 21:00:43,835:INFO:Importing untrained model
2025-08-13 21:00:43,835:INFO:Extreme Gradient Boosting Imported successfully
2025-08-13 21:00:43,835:INFO:Starting cross validation
2025-08-13 21:00:43,836:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:43,896:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,896:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,899:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,903:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,911:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:43,920:INFO:Calculating mean and std
2025-08-13 21:00:43,920:INFO:Creating metrics dataframe
2025-08-13 21:00:43,921:INFO:Uploading results into container
2025-08-13 21:00:43,921:INFO:Uploading model into container now
2025-08-13 21:00:43,921:INFO:_master_model_container: 13
2025-08-13 21:00:43,921:INFO:_display_container: 2
2025-08-13 21:00:43,922:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-13 21:00:43,922:INFO:create_model() successfully completed......................................
2025-08-13 21:00:43,989:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:43,989:INFO:Creating metrics dataframe
2025-08-13 21:00:43,990:INFO:Initializing Light Gradient Boosting Machine
2025-08-13 21:00:43,990:INFO:Total runtime is 0.07907067934672038 minutes
2025-08-13 21:00:43,990:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:43,990:INFO:Initializing create_model()
2025-08-13 21:00:43,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:43,990:INFO:Checking exceptions
2025-08-13 21:00:43,990:INFO:Importing libraries
2025-08-13 21:00:43,990:INFO:Copying training dataset
2025-08-13 21:00:43,992:INFO:Defining folds
2025-08-13 21:00:43,992:INFO:Declaring metric variables
2025-08-13 21:00:43,992:INFO:Importing untrained model
2025-08-13 21:00:43,992:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-13 21:00:43,992:INFO:Starting cross validation
2025-08-13 21:00:43,993:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:46,647:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,652:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,655:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,694:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,698:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,702:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,711:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,713:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,716:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,717:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,717:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,719:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,719:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:46,737:INFO:Calculating mean and std
2025-08-13 21:00:46,738:INFO:Creating metrics dataframe
2025-08-13 21:00:46,740:INFO:Uploading results into container
2025-08-13 21:00:46,740:INFO:Uploading model into container now
2025-08-13 21:00:46,740:INFO:_master_model_container: 14
2025-08-13 21:00:46,740:INFO:_display_container: 2
2025-08-13 21:00:46,741:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-13 21:00:46,741:INFO:create_model() successfully completed......................................
2025-08-13 21:00:46,823:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:46,823:INFO:Creating metrics dataframe
2025-08-13 21:00:46,824:INFO:Initializing CatBoost Classifier
2025-08-13 21:00:46,824:INFO:Total runtime is 0.12631590366363527 minutes
2025-08-13 21:00:46,825:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:46,825:INFO:Initializing create_model()
2025-08-13 21:00:46,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:46,825:INFO:Checking exceptions
2025-08-13 21:00:46,825:INFO:Importing libraries
2025-08-13 21:00:46,825:INFO:Copying training dataset
2025-08-13 21:00:46,827:INFO:Defining folds
2025-08-13 21:00:46,827:INFO:Declaring metric variables
2025-08-13 21:00:46,827:INFO:Importing untrained model
2025-08-13 21:00:46,827:INFO:CatBoost Classifier Imported successfully
2025-08-13 21:00:46,827:INFO:Starting cross validation
2025-08-13 21:00:46,828:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:51,925:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:51,930:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:51,937:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,040:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,046:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,047:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,049:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,051:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,070:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,074:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,078:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,097:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,100:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,103:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,109:INFO:Calculating mean and std
2025-08-13 21:00:52,110:INFO:Creating metrics dataframe
2025-08-13 21:00:52,111:INFO:Uploading results into container
2025-08-13 21:00:52,111:INFO:Uploading model into container now
2025-08-13 21:00:52,112:INFO:_master_model_container: 15
2025-08-13 21:00:52,112:INFO:_display_container: 2
2025-08-13 21:00:52,112:INFO:<catboost.core.CatBoostClassifier object at 0xffff503d9890>
2025-08-13 21:00:52,112:INFO:create_model() successfully completed......................................
2025-08-13 21:00:52,239:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:52,239:INFO:Creating metrics dataframe
2025-08-13 21:00:52,240:INFO:Initializing Dummy Classifier
2025-08-13 21:00:52,240:INFO:Total runtime is 0.21657639741897583 minutes
2025-08-13 21:00:52,240:INFO:SubProcess create_model() called ==================================
2025-08-13 21:00:52,240:INFO:Initializing create_model()
2025-08-13 21:00:52,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3ef4a950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:52,240:INFO:Checking exceptions
2025-08-13 21:00:52,240:INFO:Importing libraries
2025-08-13 21:00:52,241:INFO:Copying training dataset
2025-08-13 21:00:52,243:INFO:Defining folds
2025-08-13 21:00:52,243:INFO:Declaring metric variables
2025-08-13 21:00:52,243:INFO:Importing untrained model
2025-08-13 21:00:52,243:INFO:Dummy Classifier Imported successfully
2025-08-13 21:00:52,243:INFO:Starting cross validation
2025-08-13 21:00:52,244:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 21:00:52,281:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,282:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,285:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,285:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,287:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,287:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:52,288:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:52,288:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,289:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,289:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,290:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,290:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,291:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,293:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:52,294:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:52,294:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,295:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,295:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,297:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 21:00:52,301:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 21:00:52,314:INFO:Calculating mean and std
2025-08-13 21:00:52,314:INFO:Creating metrics dataframe
2025-08-13 21:00:52,315:INFO:Uploading results into container
2025-08-13 21:00:52,315:INFO:Uploading model into container now
2025-08-13 21:00:52,315:INFO:_master_model_container: 16
2025-08-13 21:00:52,315:INFO:_display_container: 2
2025-08-13 21:00:52,316:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-13 21:00:52,316:INFO:create_model() successfully completed......................................
2025-08-13 21:00:52,384:INFO:SubProcess create_model() end ==================================
2025-08-13 21:00:52,384:INFO:Creating metrics dataframe
2025-08-13 21:00:52,385:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-13 21:00:52,386:INFO:Initializing create_model()
2025-08-13 21:00:52,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:52,386:INFO:Checking exceptions
2025-08-13 21:00:52,386:INFO:Importing libraries
2025-08-13 21:00:52,386:INFO:Copying training dataset
2025-08-13 21:00:52,388:INFO:Defining folds
2025-08-13 21:00:52,388:INFO:Declaring metric variables
2025-08-13 21:00:52,388:INFO:Importing untrained model
2025-08-13 21:00:52,388:INFO:Declaring custom model
2025-08-13 21:00:52,388:INFO:Logistic Regression Imported successfully
2025-08-13 21:00:52,389:INFO:Cross validation set to False
2025-08-13 21:00:52,389:INFO:Fitting Model
2025-08-13 21:00:52,407:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 21:00:52,408:INFO:create_model() successfully completed......................................
2025-08-13 21:00:52,511:INFO:_master_model_container: 16
2025-08-13 21:00:52,511:INFO:_display_container: 2
2025-08-13 21:00:52,512:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 21:00:52,512:INFO:compare_models() successfully completed......................................
2025-08-13 21:00:52,512:INFO:Initializing finalize_model()
2025-08-13 21:00:52,512:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-13 21:00:52,512:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 21:00:52,513:INFO:Initializing create_model()
2025-08-13 21:00:52,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffa8cf2e90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 21:00:52,513:INFO:Checking exceptions
2025-08-13 21:00:52,514:INFO:Importing libraries
2025-08-13 21:00:52,514:INFO:Copying training dataset
2025-08-13 21:00:52,514:INFO:Defining folds
2025-08-13 21:00:52,514:INFO:Declaring metric variables
2025-08-13 21:00:52,514:INFO:Importing untrained model
2025-08-13 21:00:52,514:INFO:Declaring custom model
2025-08-13 21:00:52,514:INFO:Logistic Regression Imported successfully
2025-08-13 21:00:52,515:INFO:Cross validation set to False
2025-08-13 21:00:52,515:INFO:Fitting Model
2025-08-13 21:00:52,537:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 21:00:52,537:INFO:create_model() successfully completed......................................
2025-08-13 21:00:52,646:INFO:_master_model_container: 16
2025-08-13 21:00:52,646:INFO:_display_container: 2
2025-08-13 21:00:52,648:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 21:00:52,648:INFO:finalize_model() successfully completed......................................
2025-08-13 21:00:52,718:INFO:Initializing save_model()
2025-08-13 21:00:52,718:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-13 21:00:52,718:INFO:Adding model into prep_pipe
2025-08-13 21:00:52,718:WARNING:Only Model saved as it was a pipeline.
2025-08-13 21:00:52,721:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-13 21:00:52,723:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 21:00:52,723:INFO:save_model() successfully completed......................................
2025-08-13 21:00:52,794:INFO:PyCaret ClusteringExperiment
2025-08-13 21:00:52,794:INFO:Logging name: cluster-default-name
2025-08-13 21:00:52,794:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-13 21:00:52,794:INFO:version 3.3.2
2025-08-13 21:00:52,794:INFO:Initializing setup()
2025-08-13 21:00:52,794:INFO:self.USI: 938f
2025-08-13 21:00:52,794:INFO:self._variable_keys: {'log_plots_param', 'seed', 'html_param', 'logging_param', 'idx', 'data', 'X', 'USI', 'gpu_n_jobs_param', 'n_jobs_param', '_ml_usecase', 'gpu_param', 'exp_id', 'memory', '_available_plots', 'exp_name_log', 'pipeline'}
2025-08-13 21:00:52,794:INFO:Checking environment
2025-08-13 21:00:52,794:INFO:python_version: 3.11.13
2025-08-13 21:00:52,794:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-13 21:00:52,794:INFO:machine: aarch64
2025-08-13 21:00:52,794:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 21:00:52,794:INFO:Memory: svmem(total=4109803520, available=1451622400, percent=64.7, used=2465525760, free=73867264, active=536014848, inactive=3092512768, buffers=9134080, cached=1561276416, shared=770048, slab=319594496)
2025-08-13 21:00:52,795:INFO:Physical Core: 8
2025-08-13 21:00:52,795:INFO:Logical Core: 8
2025-08-13 21:00:52,795:INFO:Checking libraries
2025-08-13 21:00:52,795:INFO:System:
2025-08-13 21:00:52,795:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-13 21:00:52,795:INFO:executable: /usr/local/bin/python
2025-08-13 21:00:52,795:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 21:00:52,795:INFO:PyCaret required dependencies:
2025-08-13 21:00:52,795:INFO:                 pip: 24.0
2025-08-13 21:00:52,795:INFO:          setuptools: 80.9.0
2025-08-13 21:00:52,795:INFO:             pycaret: 3.3.2
2025-08-13 21:00:52,795:INFO:             IPython: 9.4.0
2025-08-13 21:00:52,795:INFO:          ipywidgets: 8.1.7
2025-08-13 21:00:52,795:INFO:                tqdm: 4.67.1
2025-08-13 21:00:52,795:INFO:               numpy: 1.26.4
2025-08-13 21:00:52,795:INFO:              pandas: 2.1.4
2025-08-13 21:00:52,795:INFO:              jinja2: 3.1.6
2025-08-13 21:00:52,795:INFO:               scipy: 1.11.4
2025-08-13 21:00:52,795:INFO:              joblib: 1.3.2
2025-08-13 21:00:52,795:INFO:             sklearn: 1.4.2
2025-08-13 21:00:52,795:INFO:                pyod: 2.0.5
2025-08-13 21:00:52,795:INFO:            imblearn: 0.13.0
2025-08-13 21:00:52,795:INFO:   category_encoders: 2.7.0
2025-08-13 21:00:52,795:INFO:            lightgbm: 4.6.0
2025-08-13 21:00:52,795:INFO:               numba: 0.61.0
2025-08-13 21:00:52,795:INFO:            requests: 2.32.4
2025-08-13 21:00:52,795:INFO:          matplotlib: 3.7.5
2025-08-13 21:00:52,795:INFO:          scikitplot: 0.3.7
2025-08-13 21:00:52,795:INFO:         yellowbrick: 1.5
2025-08-13 21:00:52,795:INFO:              plotly: 5.24.1
2025-08-13 21:00:52,795:INFO:    plotly-resampler: Not installed
2025-08-13 21:00:52,795:INFO:             kaleido: 1.0.0
2025-08-13 21:00:52,796:INFO:           schemdraw: 0.15
2025-08-13 21:00:52,796:INFO:         statsmodels: 0.14.5
2025-08-13 21:00:52,796:INFO:              sktime: 0.26.0
2025-08-13 21:00:52,796:INFO:               tbats: 1.1.3
2025-08-13 21:00:52,796:INFO:            pmdarima: 2.0.4
2025-08-13 21:00:52,796:INFO:              psutil: 7.0.0
2025-08-13 21:00:52,796:INFO:          markupsafe: 3.0.2
2025-08-13 21:00:52,796:INFO:             pickle5: Not installed
2025-08-13 21:00:52,796:INFO:         cloudpickle: 3.1.1
2025-08-13 21:00:52,796:INFO:         deprecation: 2.1.0
2025-08-13 21:00:52,796:INFO:              xxhash: 3.5.0
2025-08-13 21:00:52,796:INFO:           wurlitzer: 3.1.1
2025-08-13 21:00:52,796:INFO:PyCaret optional dependencies:
2025-08-13 21:00:52,796:INFO:                shap: 0.44.1
2025-08-13 21:00:52,796:INFO:           interpret: 0.7.2
2025-08-13 21:00:52,796:INFO:                umap: 0.5.7
2025-08-13 21:00:52,796:INFO:     ydata_profiling: 4.16.1
2025-08-13 21:00:52,796:INFO:  explainerdashboard: 0.5.1
2025-08-13 21:00:52,796:INFO:             autoviz: Not installed
2025-08-13 21:00:52,796:INFO:           fairlearn: 0.7.0
2025-08-13 21:00:52,796:INFO:          deepchecks: Not installed
2025-08-13 21:00:52,796:INFO:             xgboost: 3.0.4
2025-08-13 21:00:52,796:INFO:            catboost: 1.2.8
2025-08-13 21:00:52,796:INFO:              kmodes: 0.12.2
2025-08-13 21:00:52,796:INFO:             mlxtend: 0.23.4
2025-08-13 21:00:52,796:INFO:       statsforecast: 1.5.0
2025-08-13 21:00:52,796:INFO:        tune_sklearn: Not installed
2025-08-13 21:00:52,796:INFO:                 ray: Not installed
2025-08-13 21:00:52,796:INFO:            hyperopt: 0.2.7
2025-08-13 21:00:52,796:INFO:              optuna: 4.4.0
2025-08-13 21:00:52,796:INFO:               skopt: 0.10.2
2025-08-13 21:00:52,796:INFO:              mlflow: 3.2.0
2025-08-13 21:00:52,796:INFO:              gradio: 5.42.0
2025-08-13 21:00:52,796:INFO:             fastapi: 0.116.1
2025-08-13 21:00:52,796:INFO:             uvicorn: 0.35.0
2025-08-13 21:00:52,796:INFO:              m2cgen: 0.10.0
2025-08-13 21:00:52,796:INFO:           evidently: 0.4.40
2025-08-13 21:00:52,796:INFO:               fugue: 0.8.7
2025-08-13 21:00:52,796:INFO:           streamlit: 1.48.1
2025-08-13 21:00:52,796:INFO:             prophet: Not installed
2025-08-13 21:00:52,796:INFO:None
2025-08-13 21:00:52,796:INFO:Set up data.
2025-08-13 21:00:52,797:INFO:Set up index.
2025-08-13 21:00:52,798:INFO:Assigning column types.
2025-08-13 21:00:52,799:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-13 21:00:52,799:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 21:00:52,799:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,802:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 21:00:52,802:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,802:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-13 21:00:52,802:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,802:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,802:INFO:Preparing preprocessing pipeline...
2025-08-13 21:00:52,802:INFO:Set up simple imputation.
2025-08-13 21:00:52,802:INFO:Set up feature normalization.
2025-08-13 21:00:52,807:INFO:Finished creating preprocessing pipeline.
2025-08-13 21:00:52,809:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 21:00:52,809:INFO:Creating final display dataframe.
2025-08-13 21:00:52,815:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  938f
2025-08-13 21:00:52,815:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,815:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 21:00:52,815:INFO:setup() successfully completed in 0.02s...............
2025-08-13 21:00:52,815:INFO:Initializing create_model()
2025-08-13 21:00:52,815:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff502a0310>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-13 21:00:52,816:INFO:Checking exceptions
2025-08-13 21:00:52,820:INFO:Importing untrained model
2025-08-13 21:00:52,821:INFO:K-Means Clustering Imported successfully
2025-08-13 21:00:52,821:INFO:Fitting Model
2025-08-13 21:00:53,025:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 21:00:53,026:INFO:create_models() successfully completed......................................
2025-08-13 21:00:53,026:INFO:Uploading results into container
2025-08-13 21:00:53,028:INFO:Uploading model into container now
2025-08-13 21:00:53,033:INFO:_master_model_container: 1
2025-08-13 21:00:53,033:INFO:_display_container: 2
2025-08-13 21:00:53,034:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 21:00:53,034:INFO:create_model() successfully completed......................................
2025-08-13 21:00:53,127:INFO:Initializing assign_model()
2025-08-13 21:00:53,127:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff502a0310>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-13 21:00:53,128:INFO:Checking exceptions
2025-08-13 21:00:53,128:INFO:Determining Trained Model
2025-08-13 21:00:53,128:INFO:Trained Model : K-Means Clustering
2025-08-13 21:00:53,128:INFO:Copying data
2025-08-13 21:00:53,129:INFO:(3000, 12)
2025-08-13 21:00:53,129:INFO:assign_model() successfully completed......................................
2025-08-13 21:00:53,132:INFO:Initializing save_model()
2025-08-13 21:00:53,132:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-13 21:00:53,132:INFO:Adding model into prep_pipe
2025-08-13 21:00:53,134:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-13 21:00:53,136:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-13 21:00:53,136:INFO:save_model() successfully completed......................................
2025-08-13 21:26:19,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:26:19,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:26:19,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:26:19,647:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 21:26:20,684:INFO:Initializing load_model()
2025-08-13 21:26:20,684:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 21:26:20,884:INFO:Initializing load_model()
2025-08-13 21:26:20,884:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-13 21:30:21,130:INFO:Initializing predict_model()
2025-08-13 21:30:21,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff36eae090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff870a0040>)
2025-08-13 21:30:21,133:INFO:Checking exceptions
2025-08-13 21:30:21,133:INFO:Preloading libraries
2025-08-13 21:30:21,134:INFO:Set up data.
2025-08-13 21:30:21,138:INFO:Set up index.
2025-08-13 21:39:53,171:INFO:Initializing load_model()
2025-08-13 21:39:53,172:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 21:39:53,180:INFO:Initializing load_model()
2025-08-13 21:39:53,180:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-13 21:43:14,356:INFO:Initializing predict_model()
2025-08-13 21:43:14,360:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4cdecbd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff36ef1940>)
2025-08-13 21:43:14,361:INFO:Checking exceptions
2025-08-13 21:43:14,361:INFO:Preloading libraries
2025-08-13 21:43:14,362:INFO:Set up data.
2025-08-13 21:43:14,365:INFO:Set up index.
2025-08-13 18:05:18,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:18,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:18,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:18,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:33,709:INFO:PyCaret ClassificationExperiment
2025-08-13 18:05:33,709:INFO:Logging name: clf-default-name
2025-08-13 18:05:33,709:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 18:05:33,710:INFO:version 3.3.2
2025-08-13 18:05:33,710:INFO:Initializing setup()
2025-08-13 18:05:33,710:INFO:self.USI: 393e
2025-08-13 18:05:33,710:INFO:self._variable_keys: {'y_train', 'n_jobs_param', 'memory', 'exp_name_log', 'target_param', 'gpu_param', 'y_test', 'idx', 'fold_groups_param', '_ml_usecase', 'USI', 'is_multiclass', 'y', 'log_plots_param', 'logging_param', 'seed', 'exp_id', 'X_train', 'data', 'gpu_n_jobs_param', 'html_param', '_available_plots', 'X', 'fix_imbalance', 'X_test', 'pipeline', 'fold_generator', 'fold_shuffle_param'}
2025-08-13 18:05:33,710:INFO:Checking environment
2025-08-13 18:05:33,710:INFO:python_version: 3.11.13
2025-08-13 18:05:33,710:INFO:python_build: ('main', 'Jun  3 2025 18:38:25')
2025-08-13 18:05:33,710:INFO:machine: x86_64
2025-08-13 18:05:33,763:INFO:platform: macOS-15.5-x86_64-i386-64bit
2025-08-13 18:05:33,763:INFO:Memory: svmem(total=8589934592, available=573722624, percent=93.3, used=938905600, free=17272832, active=527110144, inactive=525934592, wired=411795456)
2025-08-13 18:05:33,763:INFO:Physical Core: 8
2025-08-13 18:05:33,763:INFO:Logical Core: 8
2025-08-13 18:05:33,763:INFO:Checking libraries
2025-08-13 18:05:33,764:INFO:System:
2025-08-13 18:05:33,764:INFO:    python: 3.11.13 (main, Jun  3 2025, 18:38:25) [Clang 16.0.0 (clang-1600.0.26.6)]
2025-08-13 18:05:33,764:INFO:executable: /Users/serpilsena/.venvs/soar311/bin/python
2025-08-13 18:05:33,764:INFO:   machine: macOS-15.5-x86_64-i386-64bit
2025-08-13 18:05:33,764:INFO:PyCaret required dependencies:
2025-08-13 18:05:38,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:38,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:38,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:05:38,442:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:08:45,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:08:45,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:08:45,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:08:45,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:08:50,252:INFO:Initializing load_model()
2025-08-13 18:08:50,252:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:11:12,339:INFO:Initializing load_model()
2025-08-13 18:11:12,340:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:11:19,372:INFO:Initializing load_model()
2025-08-13 18:11:19,372:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:11:43,759:INFO:Initializing load_model()
2025-08-13 18:11:43,759:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:11:47,332:INFO:Initializing load_model()
2025-08-13 18:11:47,332:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:19:26,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:19:26,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:19:26,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:19:26,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 18:19:28,347:INFO:Initializing load_model()
2025-08-13 18:19:28,347:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 18:19:28,350:WARNING:/Users/serpilsena/.venvs/soar311/lib/python3.11/site-packages/pycaret/internal/pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.2', 'setuptools': '80.9.0', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': 'Not installed', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
pickle: {'deps_info': {'pip': '24.0', 'setuptools': '80.9.0', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'aarch64'}}
  warnings.warn(

2025-08-13 18:19:28,353:INFO:Initializing load_model()
2025-08-13 18:19:28,353:INFO:load_model(model_name=/Users/serpilsena/Desktop/hands-on/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-13 18:19:41,876:INFO:Initializing predict_model()
2025-08-13 18:19:41,877:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160985050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1386d54e0>)
2025-08-13 18:19:41,877:INFO:Checking exceptions
2025-08-13 18:19:41,877:INFO:Preloading libraries
2025-08-13 18:19:41,877:INFO:Set up data.
2025-08-13 18:19:41,887:INFO:Set up index.
2025-08-13 18:19:41,897:INFO:Initializing predict_model()
2025-08-13 18:19:41,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x160914950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10fd05620>)
2025-08-13 18:19:41,897:INFO:Checking exceptions
2025-08-13 18:19:41,897:INFO:Preloading libraries
2025-08-13 18:19:41,897:INFO:Set up data.
2025-08-13 18:19:41,900:INFO:Set up index.
2025-08-13 23:06:55,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:06:55,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:06:55,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:06:55,695:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:06:56,590:INFO:PyCaret ClassificationExperiment
2025-08-13 23:06:56,590:INFO:Logging name: clf-default-name
2025-08-13 23:06:56,591:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-13 23:06:56,591:INFO:version 3.3.2
2025-08-13 23:06:56,591:INFO:Initializing setup()
2025-08-13 23:06:56,591:INFO:self.USI: c828
2025-08-13 23:06:56,591:INFO:self._variable_keys: {'logging_param', 'exp_id', 'html_param', 'log_plots_param', 'fold_groups_param', 'target_param', 'USI', 'X', 'n_jobs_param', 'seed', 'gpu_n_jobs_param', 'pipeline', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'is_multiclass', 'y_test', 'X_train', 'y', 'data', 'y_train', 'X_test', 'fold_generator', 'memory', 'idx', '_available_plots', 'exp_name_log', '_ml_usecase'}
2025-08-13 23:06:56,591:INFO:Checking environment
2025-08-13 23:06:56,591:INFO:python_version: 3.11.13
2025-08-13 23:06:56,591:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-13 23:06:56,591:INFO:machine: aarch64
2025-08-13 23:06:56,591:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 23:06:56,591:INFO:Memory: svmem(total=4109803520, available=3465764864, percent=15.7, used=491745280, free=2987016192, active=741117952, inactive=229974016, buffers=60403712, cached=570638336, shared=1032192, slab=69169152)
2025-08-13 23:06:56,591:INFO:Physical Core: 8
2025-08-13 23:06:56,591:INFO:Logical Core: 8
2025-08-13 23:06:56,591:INFO:Checking libraries
2025-08-13 23:06:56,591:INFO:System:
2025-08-13 23:06:56,591:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-13 23:06:56,591:INFO:executable: /usr/local/bin/python
2025-08-13 23:06:56,591:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 23:06:56,591:INFO:PyCaret required dependencies:
2025-08-13 23:06:56,933:INFO:                 pip: 24.0
2025-08-13 23:06:56,933:INFO:          setuptools: 80.9.0
2025-08-13 23:06:56,933:INFO:             pycaret: 3.3.2
2025-08-13 23:06:56,933:INFO:             IPython: 9.4.0
2025-08-13 23:06:56,933:INFO:          ipywidgets: 8.1.7
2025-08-13 23:06:56,933:INFO:                tqdm: 4.67.1
2025-08-13 23:06:56,933:INFO:               numpy: 1.26.4
2025-08-13 23:06:56,933:INFO:              pandas: 2.1.4
2025-08-13 23:06:56,933:INFO:              jinja2: 3.1.6
2025-08-13 23:06:56,933:INFO:               scipy: 1.11.4
2025-08-13 23:06:56,933:INFO:              joblib: 1.3.2
2025-08-13 23:06:56,933:INFO:             sklearn: 1.4.2
2025-08-13 23:06:56,933:INFO:                pyod: 2.0.5
2025-08-13 23:06:56,933:INFO:            imblearn: 0.13.0
2025-08-13 23:06:56,933:INFO:   category_encoders: 2.7.0
2025-08-13 23:06:56,933:INFO:            lightgbm: 4.6.0
2025-08-13 23:06:56,933:INFO:               numba: 0.61.0
2025-08-13 23:06:56,933:INFO:            requests: 2.32.4
2025-08-13 23:06:56,933:INFO:          matplotlib: 3.7.5
2025-08-13 23:06:56,933:INFO:          scikitplot: 0.3.7
2025-08-13 23:06:56,933:INFO:         yellowbrick: 1.5
2025-08-13 23:06:56,933:INFO:              plotly: 5.24.1
2025-08-13 23:06:56,933:INFO:    plotly-resampler: Not installed
2025-08-13 23:06:56,933:INFO:             kaleido: 1.0.0
2025-08-13 23:06:56,933:INFO:           schemdraw: 0.15
2025-08-13 23:06:56,933:INFO:         statsmodels: 0.14.5
2025-08-13 23:06:56,933:INFO:              sktime: 0.26.0
2025-08-13 23:06:56,933:INFO:               tbats: 1.1.3
2025-08-13 23:06:56,933:INFO:            pmdarima: 2.0.4
2025-08-13 23:06:56,933:INFO:              psutil: 7.0.0
2025-08-13 23:06:56,933:INFO:          markupsafe: 3.0.2
2025-08-13 23:06:56,933:INFO:             pickle5: Not installed
2025-08-13 23:06:56,933:INFO:         cloudpickle: 3.1.1
2025-08-13 23:06:56,933:INFO:         deprecation: 2.1.0
2025-08-13 23:06:56,933:INFO:              xxhash: 3.5.0
2025-08-13 23:06:56,933:INFO:           wurlitzer: 3.1.1
2025-08-13 23:06:56,934:INFO:PyCaret optional dependencies:
2025-08-13 23:06:58,220:INFO:                shap: 0.44.1
2025-08-13 23:06:58,220:INFO:           interpret: 0.7.2
2025-08-13 23:06:58,220:INFO:                umap: 0.5.7
2025-08-13 23:06:58,220:INFO:     ydata_profiling: 4.16.1
2025-08-13 23:06:58,220:INFO:  explainerdashboard: 0.5.1
2025-08-13 23:06:58,220:INFO:             autoviz: Not installed
2025-08-13 23:06:58,220:INFO:           fairlearn: 0.7.0
2025-08-13 23:06:58,220:INFO:          deepchecks: Not installed
2025-08-13 23:06:58,220:INFO:             xgboost: 3.0.4
2025-08-13 23:06:58,220:INFO:            catboost: 1.2.8
2025-08-13 23:06:58,220:INFO:              kmodes: 0.12.2
2025-08-13 23:06:58,220:INFO:             mlxtend: 0.23.4
2025-08-13 23:06:58,220:INFO:       statsforecast: 1.5.0
2025-08-13 23:06:58,220:INFO:        tune_sklearn: Not installed
2025-08-13 23:06:58,220:INFO:                 ray: Not installed
2025-08-13 23:06:58,220:INFO:            hyperopt: 0.2.7
2025-08-13 23:06:58,220:INFO:              optuna: 4.4.0
2025-08-13 23:06:58,220:INFO:               skopt: 0.10.2
2025-08-13 23:06:58,220:INFO:              mlflow: 3.2.0
2025-08-13 23:06:58,220:INFO:              gradio: 5.42.0
2025-08-13 23:06:58,220:INFO:             fastapi: 0.116.1
2025-08-13 23:06:58,220:INFO:             uvicorn: 0.35.0
2025-08-13 23:06:58,220:INFO:              m2cgen: 0.10.0
2025-08-13 23:06:58,220:INFO:           evidently: 0.4.40
2025-08-13 23:06:58,220:INFO:               fugue: 0.8.7
2025-08-13 23:06:58,220:INFO:           streamlit: 1.48.1
2025-08-13 23:06:58,220:INFO:             prophet: Not installed
2025-08-13 23:06:58,220:INFO:None
2025-08-13 23:06:58,220:INFO:Set up data.
2025-08-13 23:06:58,224:INFO:Set up folding strategy.
2025-08-13 23:06:58,224:INFO:Set up train/test split.
2025-08-13 23:06:58,228:INFO:Set up index.
2025-08-13 23:06:58,228:INFO:Assigning column types.
2025-08-13 23:06:58,230:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-13 23:06:58,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,246:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,257:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,258:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,319:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,328:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,328:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,329:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-13 23:06:58,343:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,352:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,353:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,367:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-13 23:06:58,376:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,377:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,377:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-13 23:06:58,400:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,401:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,424:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,425:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,426:INFO:Preparing preprocessing pipeline...
2025-08-13 23:06:58,427:INFO:Set up label encoding.
2025-08-13 23:06:58,427:INFO:Set up simple imputation.
2025-08-13 23:06:58,428:INFO:Set up encoding of categorical features.
2025-08-13 23:06:58,428:INFO:Set up feature normalization.
2025-08-13 23:06:58,449:INFO:Finished creating preprocessing pipeline.
2025-08-13 23:06:58,452:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 23:06:58,452:INFO:Creating final display dataframe.
2025-08-13 23:06:58,504:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     c828
2025-08-13 23:06:58,527:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,528:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,552:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-13 23:06:58,552:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-13 23:06:58,553:INFO:setup() successfully completed in 1.96s...............
2025-08-13 23:06:58,553:INFO:Initializing compare_models()
2025-08-13 23:06:58,553:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-13 23:06:58,553:INFO:Checking exceptions
2025-08-13 23:06:58,554:INFO:Preparing display monitor
2025-08-13 23:06:58,556:INFO:Initializing Logistic Regression
2025-08-13 23:06:58,556:INFO:Total runtime is 1.7722447713216146e-06 minutes
2025-08-13 23:06:58,557:INFO:SubProcess create_model() called ==================================
2025-08-13 23:06:58,557:INFO:Initializing create_model()
2025-08-13 23:06:58,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:06:58,557:INFO:Checking exceptions
2025-08-13 23:06:58,557:INFO:Importing libraries
2025-08-13 23:06:58,557:INFO:Copying training dataset
2025-08-13 23:06:58,559:INFO:Defining folds
2025-08-13 23:06:58,559:INFO:Declaring metric variables
2025-08-13 23:06:58,559:INFO:Importing untrained model
2025-08-13 23:06:58,559:INFO:Logistic Regression Imported successfully
2025-08-13 23:06:58,559:INFO:Starting cross validation
2025-08-13 23:06:58,559:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:06:59,867:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,874:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,888:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,888:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,891:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,893:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,893:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,895:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,896:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,897:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,942:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,946:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,949:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:06:59,964:INFO:Calculating mean and std
2025-08-13 23:06:59,969:INFO:Creating metrics dataframe
2025-08-13 23:06:59,974:INFO:Uploading results into container
2025-08-13 23:06:59,975:INFO:Uploading model into container now
2025-08-13 23:06:59,975:INFO:_master_model_container: 1
2025-08-13 23:06:59,975:INFO:_display_container: 2
2025-08-13 23:06:59,976:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 23:06:59,976:INFO:create_model() successfully completed......................................
2025-08-13 23:07:00,165:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:00,165:INFO:Creating metrics dataframe
2025-08-13 23:07:00,166:INFO:Initializing K Neighbors Classifier
2025-08-13 23:07:00,166:INFO:Total runtime is 0.026825129985809326 minutes
2025-08-13 23:07:00,166:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:00,166:INFO:Initializing create_model()
2025-08-13 23:07:00,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:00,166:INFO:Checking exceptions
2025-08-13 23:07:00,166:INFO:Importing libraries
2025-08-13 23:07:00,166:INFO:Copying training dataset
2025-08-13 23:07:00,168:INFO:Defining folds
2025-08-13 23:07:00,168:INFO:Declaring metric variables
2025-08-13 23:07:00,168:INFO:Importing untrained model
2025-08-13 23:07:00,169:INFO:K Neighbors Classifier Imported successfully
2025-08-13 23:07:00,169:INFO:Starting cross validation
2025-08-13 23:07:00,169:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:00,288:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:00,295:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:00,298:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:00,309:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:00,312:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:00,315:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,257:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,262:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,264:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,266:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,269:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,271:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,274:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,277:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,280:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,295:INFO:Calculating mean and std
2025-08-13 23:07:01,296:INFO:Creating metrics dataframe
2025-08-13 23:07:01,299:INFO:Uploading results into container
2025-08-13 23:07:01,300:INFO:Uploading model into container now
2025-08-13 23:07:01,300:INFO:_master_model_container: 2
2025-08-13 23:07:01,300:INFO:_display_container: 2
2025-08-13 23:07:01,300:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-13 23:07:01,300:INFO:create_model() successfully completed......................................
2025-08-13 23:07:01,395:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:01,395:INFO:Creating metrics dataframe
2025-08-13 23:07:01,396:INFO:Initializing Naive Bayes
2025-08-13 23:07:01,396:INFO:Total runtime is 0.047331897417704265 minutes
2025-08-13 23:07:01,396:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:01,396:INFO:Initializing create_model()
2025-08-13 23:07:01,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:01,397:INFO:Checking exceptions
2025-08-13 23:07:01,397:INFO:Importing libraries
2025-08-13 23:07:01,397:INFO:Copying training dataset
2025-08-13 23:07:01,398:INFO:Defining folds
2025-08-13 23:07:01,398:INFO:Declaring metric variables
2025-08-13 23:07:01,399:INFO:Importing untrained model
2025-08-13 23:07:01,399:INFO:Naive Bayes Imported successfully
2025-08-13 23:07:01,399:INFO:Starting cross validation
2025-08-13 23:07:01,399:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:01,478:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,482:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,482:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,483:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,484:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,492:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,515:INFO:Calculating mean and std
2025-08-13 23:07:01,516:INFO:Creating metrics dataframe
2025-08-13 23:07:01,517:INFO:Uploading results into container
2025-08-13 23:07:01,517:INFO:Uploading model into container now
2025-08-13 23:07:01,517:INFO:_master_model_container: 3
2025-08-13 23:07:01,517:INFO:_display_container: 2
2025-08-13 23:07:01,517:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-13 23:07:01,518:INFO:create_model() successfully completed......................................
2025-08-13 23:07:01,627:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:01,627:INFO:Creating metrics dataframe
2025-08-13 23:07:01,628:INFO:Initializing Decision Tree Classifier
2025-08-13 23:07:01,628:INFO:Total runtime is 0.05120172103246053 minutes
2025-08-13 23:07:01,629:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:01,629:INFO:Initializing create_model()
2025-08-13 23:07:01,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:01,629:INFO:Checking exceptions
2025-08-13 23:07:01,629:INFO:Importing libraries
2025-08-13 23:07:01,629:INFO:Copying training dataset
2025-08-13 23:07:01,631:INFO:Defining folds
2025-08-13 23:07:01,631:INFO:Declaring metric variables
2025-08-13 23:07:01,631:INFO:Importing untrained model
2025-08-13 23:07:01,631:INFO:Decision Tree Classifier Imported successfully
2025-08-13 23:07:01,631:INFO:Starting cross validation
2025-08-13 23:07:01,632:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:01,664:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,665:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,667:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,669:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,669:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,670:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,671:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,672:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,673:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,673:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,673:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,676:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,676:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,676:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,678:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,685:INFO:Calculating mean and std
2025-08-13 23:07:01,686:INFO:Creating metrics dataframe
2025-08-13 23:07:01,686:INFO:Uploading results into container
2025-08-13 23:07:01,687:INFO:Uploading model into container now
2025-08-13 23:07:01,687:INFO:_master_model_container: 4
2025-08-13 23:07:01,687:INFO:_display_container: 2
2025-08-13 23:07:01,687:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-13 23:07:01,687:INFO:create_model() successfully completed......................................
2025-08-13 23:07:01,755:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:01,755:INFO:Creating metrics dataframe
2025-08-13 23:07:01,756:INFO:Initializing SVM - Linear Kernel
2025-08-13 23:07:01,757:INFO:Total runtime is 0.05333609580993653 minutes
2025-08-13 23:07:01,757:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:01,757:INFO:Initializing create_model()
2025-08-13 23:07:01,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:01,757:INFO:Checking exceptions
2025-08-13 23:07:01,757:INFO:Importing libraries
2025-08-13 23:07:01,757:INFO:Copying training dataset
2025-08-13 23:07:01,759:INFO:Defining folds
2025-08-13 23:07:01,759:INFO:Declaring metric variables
2025-08-13 23:07:01,759:INFO:Importing untrained model
2025-08-13 23:07:01,759:INFO:SVM - Linear Kernel Imported successfully
2025-08-13 23:07:01,759:INFO:Starting cross validation
2025-08-13 23:07:01,760:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:01,792:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,793:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,797:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,798:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,799:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,799:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,802:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,803:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,803:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,803:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,804:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,806:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,806:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,807:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,811:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,825:INFO:Calculating mean and std
2025-08-13 23:07:01,825:INFO:Creating metrics dataframe
2025-08-13 23:07:01,826:INFO:Uploading results into container
2025-08-13 23:07:01,826:INFO:Uploading model into container now
2025-08-13 23:07:01,826:INFO:_master_model_container: 5
2025-08-13 23:07:01,826:INFO:_display_container: 2
2025-08-13 23:07:01,826:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-13 23:07:01,826:INFO:create_model() successfully completed......................................
2025-08-13 23:07:01,894:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:01,894:INFO:Creating metrics dataframe
2025-08-13 23:07:01,895:INFO:Initializing Ridge Classifier
2025-08-13 23:07:01,895:INFO:Total runtime is 0.055649733543396 minutes
2025-08-13 23:07:01,895:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:01,896:INFO:Initializing create_model()
2025-08-13 23:07:01,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:01,896:INFO:Checking exceptions
2025-08-13 23:07:01,896:INFO:Importing libraries
2025-08-13 23:07:01,896:INFO:Copying training dataset
2025-08-13 23:07:01,897:INFO:Defining folds
2025-08-13 23:07:01,897:INFO:Declaring metric variables
2025-08-13 23:07:01,898:INFO:Importing untrained model
2025-08-13 23:07:01,898:INFO:Ridge Classifier Imported successfully
2025-08-13 23:07:01,898:INFO:Starting cross validation
2025-08-13 23:07:01,898:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:01,939:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,940:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,943:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,943:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,945:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,946:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,946:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,946:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,948:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,948:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,949:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,951:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:01,959:INFO:Calculating mean and std
2025-08-13 23:07:01,959:INFO:Creating metrics dataframe
2025-08-13 23:07:01,960:INFO:Uploading results into container
2025-08-13 23:07:01,960:INFO:Uploading model into container now
2025-08-13 23:07:01,960:INFO:_master_model_container: 6
2025-08-13 23:07:01,960:INFO:_display_container: 2
2025-08-13 23:07:01,960:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-13 23:07:01,961:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,033:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,034:INFO:Creating metrics dataframe
2025-08-13 23:07:02,034:INFO:Initializing Random Forest Classifier
2025-08-13 23:07:02,034:INFO:Total runtime is 0.05796925226847331 minutes
2025-08-13 23:07:02,035:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,035:INFO:Initializing create_model()
2025-08-13 23:07:02,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,035:INFO:Checking exceptions
2025-08-13 23:07:02,035:INFO:Importing libraries
2025-08-13 23:07:02,035:INFO:Copying training dataset
2025-08-13 23:07:02,037:INFO:Defining folds
2025-08-13 23:07:02,037:INFO:Declaring metric variables
2025-08-13 23:07:02,037:INFO:Importing untrained model
2025-08-13 23:07:02,037:INFO:Random Forest Classifier Imported successfully
2025-08-13 23:07:02,037:INFO:Starting cross validation
2025-08-13 23:07:02,038:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:02,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,216:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,218:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,218:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,219:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,220:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,221:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,221:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,222:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,232:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,237:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,243:INFO:Calculating mean and std
2025-08-13 23:07:02,243:INFO:Creating metrics dataframe
2025-08-13 23:07:02,244:INFO:Uploading results into container
2025-08-13 23:07:02,244:INFO:Uploading model into container now
2025-08-13 23:07:02,244:INFO:_master_model_container: 7
2025-08-13 23:07:02,244:INFO:_display_container: 2
2025-08-13 23:07:02,244:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-13 23:07:02,244:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,312:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,312:INFO:Creating metrics dataframe
2025-08-13 23:07:02,313:INFO:Initializing Quadratic Discriminant Analysis
2025-08-13 23:07:02,313:INFO:Total runtime is 0.06260929107666016 minutes
2025-08-13 23:07:02,313:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,313:INFO:Initializing create_model()
2025-08-13 23:07:02,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,313:INFO:Checking exceptions
2025-08-13 23:07:02,313:INFO:Importing libraries
2025-08-13 23:07:02,313:INFO:Copying training dataset
2025-08-13 23:07:02,315:INFO:Defining folds
2025-08-13 23:07:02,315:INFO:Declaring metric variables
2025-08-13 23:07:02,315:INFO:Importing untrained model
2025-08-13 23:07:02,315:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-13 23:07:02,315:INFO:Starting cross validation
2025-08-13 23:07:02,316:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:02,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 23:07:02,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 23:07:02,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 23:07:02,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 23:07:02,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-13 23:07:02,349:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 23:07:02,349:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 23:07:02,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 23:07:02,352:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 23:07:02,352:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,352:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-13 23:07:02,353:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-13 23:07:02,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,355:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,356:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,357:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,358:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-13 23:07:02,359:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,362:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,363:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,363:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,366:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,367:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,368:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:02,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,375:INFO:Calculating mean and std
2025-08-13 23:07:02,375:INFO:Creating metrics dataframe
2025-08-13 23:07:02,376:INFO:Uploading results into container
2025-08-13 23:07:02,376:INFO:Uploading model into container now
2025-08-13 23:07:02,376:INFO:_master_model_container: 8
2025-08-13 23:07:02,376:INFO:_display_container: 2
2025-08-13 23:07:02,376:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-13 23:07:02,376:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,444:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,444:INFO:Creating metrics dataframe
2025-08-13 23:07:02,445:INFO:Initializing Ada Boost Classifier
2025-08-13 23:07:02,445:INFO:Total runtime is 0.06481389204661052 minutes
2025-08-13 23:07:02,445:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,445:INFO:Initializing create_model()
2025-08-13 23:07:02,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,445:INFO:Checking exceptions
2025-08-13 23:07:02,446:INFO:Importing libraries
2025-08-13 23:07:02,446:INFO:Copying training dataset
2025-08-13 23:07:02,447:INFO:Defining folds
2025-08-13 23:07:02,447:INFO:Declaring metric variables
2025-08-13 23:07:02,447:INFO:Importing untrained model
2025-08-13 23:07:02,448:INFO:Ada Boost Classifier Imported successfully
2025-08-13 23:07:02,448:INFO:Starting cross validation
2025-08-13 23:07:02,448:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:02,468:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 23:07:02,468:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 23:07:02,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 23:07:02,469:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 23:07:02,495:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-13 23:07:02,498:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,507:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,507:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,507:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,509:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,509:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,514:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,518:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,530:INFO:Calculating mean and std
2025-08-13 23:07:02,531:INFO:Creating metrics dataframe
2025-08-13 23:07:02,532:INFO:Uploading results into container
2025-08-13 23:07:02,532:INFO:Uploading model into container now
2025-08-13 23:07:02,532:INFO:_master_model_container: 9
2025-08-13 23:07:02,532:INFO:_display_container: 2
2025-08-13 23:07:02,533:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-13 23:07:02,533:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,608:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,608:INFO:Creating metrics dataframe
2025-08-13 23:07:02,609:INFO:Initializing Gradient Boosting Classifier
2025-08-13 23:07:02,609:INFO:Total runtime is 0.06754246950149537 minutes
2025-08-13 23:07:02,609:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,609:INFO:Initializing create_model()
2025-08-13 23:07:02,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,609:INFO:Checking exceptions
2025-08-13 23:07:02,609:INFO:Importing libraries
2025-08-13 23:07:02,609:INFO:Copying training dataset
2025-08-13 23:07:02,611:INFO:Defining folds
2025-08-13 23:07:02,611:INFO:Declaring metric variables
2025-08-13 23:07:02,611:INFO:Importing untrained model
2025-08-13 23:07:02,611:INFO:Gradient Boosting Classifier Imported successfully
2025-08-13 23:07:02,611:INFO:Starting cross validation
2025-08-13 23:07:02,612:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:02,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,749:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,752:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,752:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,753:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,754:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,755:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,757:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,758:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,760:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,767:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,769:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,772:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,783:INFO:Calculating mean and std
2025-08-13 23:07:02,784:INFO:Creating metrics dataframe
2025-08-13 23:07:02,785:INFO:Uploading results into container
2025-08-13 23:07:02,785:INFO:Uploading model into container now
2025-08-13 23:07:02,785:INFO:_master_model_container: 10
2025-08-13 23:07:02,785:INFO:_display_container: 2
2025-08-13 23:07:02,785:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-13 23:07:02,786:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,853:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,853:INFO:Creating metrics dataframe
2025-08-13 23:07:02,854:INFO:Initializing Linear Discriminant Analysis
2025-08-13 23:07:02,854:INFO:Total runtime is 0.07163347403208416 minutes
2025-08-13 23:07:02,854:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,855:INFO:Initializing create_model()
2025-08-13 23:07:02,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,855:INFO:Checking exceptions
2025-08-13 23:07:02,855:INFO:Importing libraries
2025-08-13 23:07:02,855:INFO:Copying training dataset
2025-08-13 23:07:02,856:INFO:Defining folds
2025-08-13 23:07:02,856:INFO:Declaring metric variables
2025-08-13 23:07:02,856:INFO:Importing untrained model
2025-08-13 23:07:02,857:INFO:Linear Discriminant Analysis Imported successfully
2025-08-13 23:07:02,857:INFO:Starting cross validation
2025-08-13 23:07:02,857:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:02,897:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,897:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,900:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,901:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,901:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,903:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,904:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,904:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,905:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,907:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,907:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:02,917:INFO:Calculating mean and std
2025-08-13 23:07:02,918:INFO:Creating metrics dataframe
2025-08-13 23:07:02,919:INFO:Uploading results into container
2025-08-13 23:07:02,919:INFO:Uploading model into container now
2025-08-13 23:07:02,919:INFO:_master_model_container: 11
2025-08-13 23:07:02,919:INFO:_display_container: 2
2025-08-13 23:07:02,919:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-13 23:07:02,919:INFO:create_model() successfully completed......................................
2025-08-13 23:07:02,987:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:02,987:INFO:Creating metrics dataframe
2025-08-13 23:07:02,988:INFO:Initializing Extra Trees Classifier
2025-08-13 23:07:02,988:INFO:Total runtime is 0.07385488351186117 minutes
2025-08-13 23:07:02,988:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:02,988:INFO:Initializing create_model()
2025-08-13 23:07:02,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:02,988:INFO:Checking exceptions
2025-08-13 23:07:02,988:INFO:Importing libraries
2025-08-13 23:07:02,988:INFO:Copying training dataset
2025-08-13 23:07:02,990:INFO:Defining folds
2025-08-13 23:07:02,990:INFO:Declaring metric variables
2025-08-13 23:07:02,990:INFO:Importing untrained model
2025-08-13 23:07:02,990:INFO:Extra Trees Classifier Imported successfully
2025-08-13 23:07:02,990:INFO:Starting cross validation
2025-08-13 23:07:02,990:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:03,130:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,132:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,133:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,135:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,136:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,137:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,138:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,151:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,151:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,154:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,154:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,156:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,156:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,171:INFO:Calculating mean and std
2025-08-13 23:07:03,171:INFO:Creating metrics dataframe
2025-08-13 23:07:03,172:INFO:Uploading results into container
2025-08-13 23:07:03,172:INFO:Uploading model into container now
2025-08-13 23:07:03,173:INFO:_master_model_container: 12
2025-08-13 23:07:03,173:INFO:_display_container: 2
2025-08-13 23:07:03,173:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-13 23:07:03,173:INFO:create_model() successfully completed......................................
2025-08-13 23:07:03,240:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:03,240:INFO:Creating metrics dataframe
2025-08-13 23:07:03,241:INFO:Initializing Extreme Gradient Boosting
2025-08-13 23:07:03,241:INFO:Total runtime is 0.07807995080947877 minutes
2025-08-13 23:07:03,241:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:03,241:INFO:Initializing create_model()
2025-08-13 23:07:03,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:03,241:INFO:Checking exceptions
2025-08-13 23:07:03,241:INFO:Importing libraries
2025-08-13 23:07:03,241:INFO:Copying training dataset
2025-08-13 23:07:03,243:INFO:Defining folds
2025-08-13 23:07:03,243:INFO:Declaring metric variables
2025-08-13 23:07:03,243:INFO:Importing untrained model
2025-08-13 23:07:03,244:INFO:Extreme Gradient Boosting Imported successfully
2025-08-13 23:07:03,244:INFO:Starting cross validation
2025-08-13 23:07:03,244:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:03,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,313:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,315:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,315:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,316:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,316:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,317:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,319:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,321:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,321:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,321:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:03,336:INFO:Calculating mean and std
2025-08-13 23:07:03,337:INFO:Creating metrics dataframe
2025-08-13 23:07:03,337:INFO:Uploading results into container
2025-08-13 23:07:03,338:INFO:Uploading model into container now
2025-08-13 23:07:03,338:INFO:_master_model_container: 13
2025-08-13 23:07:03,338:INFO:_display_container: 2
2025-08-13 23:07:03,338:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-13 23:07:03,339:INFO:create_model() successfully completed......................................
2025-08-13 23:07:03,407:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:03,407:INFO:Creating metrics dataframe
2025-08-13 23:07:03,408:INFO:Initializing Light Gradient Boosting Machine
2025-08-13 23:07:03,408:INFO:Total runtime is 0.0808663845062256 minutes
2025-08-13 23:07:03,408:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:03,408:INFO:Initializing create_model()
2025-08-13 23:07:03,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:03,409:INFO:Checking exceptions
2025-08-13 23:07:03,409:INFO:Importing libraries
2025-08-13 23:07:03,409:INFO:Copying training dataset
2025-08-13 23:07:03,410:INFO:Defining folds
2025-08-13 23:07:03,410:INFO:Declaring metric variables
2025-08-13 23:07:03,410:INFO:Importing untrained model
2025-08-13 23:07:03,411:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-13 23:07:03,411:INFO:Starting cross validation
2025-08-13 23:07:03,411:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:06,528:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,533:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,535:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,537:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,540:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,542:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,629:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,633:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,636:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,661:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,665:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,668:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,688:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,691:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,694:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:06,709:INFO:Calculating mean and std
2025-08-13 23:07:06,710:INFO:Creating metrics dataframe
2025-08-13 23:07:06,712:INFO:Uploading results into container
2025-08-13 23:07:06,712:INFO:Uploading model into container now
2025-08-13 23:07:06,712:INFO:_master_model_container: 14
2025-08-13 23:07:06,712:INFO:_display_container: 2
2025-08-13 23:07:06,713:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-13 23:07:06,713:INFO:create_model() successfully completed......................................
2025-08-13 23:07:06,883:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:06,884:INFO:Creating metrics dataframe
2025-08-13 23:07:06,885:INFO:Initializing CatBoost Classifier
2025-08-13 23:07:06,885:INFO:Total runtime is 0.1388070305188497 minutes
2025-08-13 23:07:06,885:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:06,885:INFO:Initializing create_model()
2025-08-13 23:07:06,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:06,885:INFO:Checking exceptions
2025-08-13 23:07:06,885:INFO:Importing libraries
2025-08-13 23:07:06,885:INFO:Copying training dataset
2025-08-13 23:07:06,887:INFO:Defining folds
2025-08-13 23:07:06,887:INFO:Declaring metric variables
2025-08-13 23:07:06,887:INFO:Importing untrained model
2025-08-13 23:07:06,888:INFO:CatBoost Classifier Imported successfully
2025-08-13 23:07:06,888:INFO:Starting cross validation
2025-08-13 23:07:06,889:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:12,561:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,574:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,580:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,582:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,589:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,596:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,597:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,600:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,602:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,605:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,606:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,609:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,613:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,617:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,620:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,638:INFO:Calculating mean and std
2025-08-13 23:07:12,639:INFO:Creating metrics dataframe
2025-08-13 23:07:12,646:INFO:Uploading results into container
2025-08-13 23:07:12,647:INFO:Uploading model into container now
2025-08-13 23:07:12,647:INFO:_master_model_container: 15
2025-08-13 23:07:12,648:INFO:_display_container: 2
2025-08-13 23:07:12,648:INFO:<catboost.core.CatBoostClassifier object at 0xffff45dd5450>
2025-08-13 23:07:12,648:INFO:create_model() successfully completed......................................
2025-08-13 23:07:12,825:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:12,825:INFO:Creating metrics dataframe
2025-08-13 23:07:12,826:INFO:Initializing Dummy Classifier
2025-08-13 23:07:12,826:INFO:Total runtime is 0.2378317952156067 minutes
2025-08-13 23:07:12,826:INFO:SubProcess create_model() called ==================================
2025-08-13 23:07:12,826:INFO:Initializing create_model()
2025-08-13 23:07:12,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff34b69fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:12,827:INFO:Checking exceptions
2025-08-13 23:07:12,827:INFO:Importing libraries
2025-08-13 23:07:12,827:INFO:Copying training dataset
2025-08-13 23:07:12,829:INFO:Defining folds
2025-08-13 23:07:12,829:INFO:Declaring metric variables
2025-08-13 23:07:12,829:INFO:Importing untrained model
2025-08-13 23:07:12,829:INFO:Dummy Classifier Imported successfully
2025-08-13 23:07:12,829:INFO:Starting cross validation
2025-08-13 23:07:12,830:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-13 23:07:12,894:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,895:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,900:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:12,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,902:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:12,903:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,903:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,903:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,905:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,908:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:12,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:12,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-13 23:07:12,910:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,910:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,911:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-13 23:07:12,926:INFO:Calculating mean and std
2025-08-13 23:07:12,926:INFO:Creating metrics dataframe
2025-08-13 23:07:12,927:INFO:Uploading results into container
2025-08-13 23:07:12,927:INFO:Uploading model into container now
2025-08-13 23:07:12,927:INFO:_master_model_container: 16
2025-08-13 23:07:12,927:INFO:_display_container: 2
2025-08-13 23:07:12,927:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-13 23:07:12,927:INFO:create_model() successfully completed......................................
2025-08-13 23:07:12,997:INFO:SubProcess create_model() end ==================================
2025-08-13 23:07:12,997:INFO:Creating metrics dataframe
2025-08-13 23:07:12,999:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-13 23:07:12,999:INFO:Initializing create_model()
2025-08-13 23:07:12,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:12,999:INFO:Checking exceptions
2025-08-13 23:07:13,000:INFO:Importing libraries
2025-08-13 23:07:13,000:INFO:Copying training dataset
2025-08-13 23:07:13,002:INFO:Defining folds
2025-08-13 23:07:13,002:INFO:Declaring metric variables
2025-08-13 23:07:13,002:INFO:Importing untrained model
2025-08-13 23:07:13,002:INFO:Declaring custom model
2025-08-13 23:07:13,002:INFO:Logistic Regression Imported successfully
2025-08-13 23:07:13,002:INFO:Cross validation set to False
2025-08-13 23:07:13,002:INFO:Fitting Model
2025-08-13 23:07:13,030:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 23:07:13,030:INFO:create_model() successfully completed......................................
2025-08-13 23:07:13,137:INFO:_master_model_container: 16
2025-08-13 23:07:13,137:INFO:_display_container: 2
2025-08-13 23:07:13,137:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 23:07:13,137:INFO:compare_models() successfully completed......................................
2025-08-13 23:07:13,137:INFO:Initializing finalize_model()
2025-08-13 23:07:13,137:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-13 23:07:13,137:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-13 23:07:13,139:INFO:Initializing create_model()
2025-08-13 23:07:13,139:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff86f53c10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-13 23:07:13,139:INFO:Checking exceptions
2025-08-13 23:07:13,139:INFO:Importing libraries
2025-08-13 23:07:13,139:INFO:Copying training dataset
2025-08-13 23:07:13,139:INFO:Defining folds
2025-08-13 23:07:13,139:INFO:Declaring metric variables
2025-08-13 23:07:13,139:INFO:Importing untrained model
2025-08-13 23:07:13,139:INFO:Declaring custom model
2025-08-13 23:07:13,139:INFO:Logistic Regression Imported successfully
2025-08-13 23:07:13,140:INFO:Cross validation set to False
2025-08-13 23:07:13,140:INFO:Fitting Model
2025-08-13 23:07:13,164:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 23:07:13,164:INFO:create_model() successfully completed......................................
2025-08-13 23:07:13,255:INFO:_master_model_container: 16
2025-08-13 23:07:13,255:INFO:_display_container: 2
2025-08-13 23:07:13,257:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 23:07:13,258:INFO:finalize_model() successfully completed......................................
2025-08-13 23:07:13,324:INFO:Initializing save_model()
2025-08-13 23:07:13,325:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-13 23:07:13,325:INFO:Adding model into prep_pipe
2025-08-13 23:07:13,325:WARNING:Only Model saved as it was a pipeline.
2025-08-13 23:07:13,327:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-13 23:07:13,329:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-13 23:07:13,329:INFO:save_model() successfully completed......................................
2025-08-13 23:07:13,401:INFO:PyCaret ClusteringExperiment
2025-08-13 23:07:13,401:INFO:Logging name: cluster-default-name
2025-08-13 23:07:13,401:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-13 23:07:13,401:INFO:version 3.3.2
2025-08-13 23:07:13,401:INFO:Initializing setup()
2025-08-13 23:07:13,401:INFO:self.USI: fd15
2025-08-13 23:07:13,401:INFO:self._variable_keys: {'logging_param', 'exp_id', 'html_param', 'log_plots_param', 'USI', 'X', 'n_jobs_param', 'seed', 'gpu_n_jobs_param', 'pipeline', 'gpu_param', 'data', 'memory', 'idx', '_available_plots', 'exp_name_log', '_ml_usecase'}
2025-08-13 23:07:13,401:INFO:Checking environment
2025-08-13 23:07:13,401:INFO:python_version: 3.11.13
2025-08-13 23:07:13,401:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-13 23:07:13,401:INFO:machine: aarch64
2025-08-13 23:07:13,401:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 23:07:13,402:INFO:Memory: svmem(total=4109803520, available=1279623168, percent=68.9, used=2671509504, free=646557696, active=2988691456, inactive=276615168, buffers=63901696, cached=727834624, shared=1093632, slab=89534464)
2025-08-13 23:07:13,402:INFO:Physical Core: 8
2025-08-13 23:07:13,402:INFO:Logical Core: 8
2025-08-13 23:07:13,402:INFO:Checking libraries
2025-08-13 23:07:13,402:INFO:System:
2025-08-13 23:07:13,402:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-13 23:07:13,402:INFO:executable: /usr/local/bin/python
2025-08-13 23:07:13,402:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-13 23:07:13,402:INFO:PyCaret required dependencies:
2025-08-13 23:07:13,402:INFO:                 pip: 24.0
2025-08-13 23:07:13,402:INFO:          setuptools: 80.9.0
2025-08-13 23:07:13,402:INFO:             pycaret: 3.3.2
2025-08-13 23:07:13,402:INFO:             IPython: 9.4.0
2025-08-13 23:07:13,402:INFO:          ipywidgets: 8.1.7
2025-08-13 23:07:13,402:INFO:                tqdm: 4.67.1
2025-08-13 23:07:13,402:INFO:               numpy: 1.26.4
2025-08-13 23:07:13,402:INFO:              pandas: 2.1.4
2025-08-13 23:07:13,402:INFO:              jinja2: 3.1.6
2025-08-13 23:07:13,402:INFO:               scipy: 1.11.4
2025-08-13 23:07:13,402:INFO:              joblib: 1.3.2
2025-08-13 23:07:13,402:INFO:             sklearn: 1.4.2
2025-08-13 23:07:13,402:INFO:                pyod: 2.0.5
2025-08-13 23:07:13,402:INFO:            imblearn: 0.13.0
2025-08-13 23:07:13,403:INFO:   category_encoders: 2.7.0
2025-08-13 23:07:13,403:INFO:            lightgbm: 4.6.0
2025-08-13 23:07:13,403:INFO:               numba: 0.61.0
2025-08-13 23:07:13,403:INFO:            requests: 2.32.4
2025-08-13 23:07:13,403:INFO:          matplotlib: 3.7.5
2025-08-13 23:07:13,403:INFO:          scikitplot: 0.3.7
2025-08-13 23:07:13,403:INFO:         yellowbrick: 1.5
2025-08-13 23:07:13,403:INFO:              plotly: 5.24.1
2025-08-13 23:07:13,403:INFO:    plotly-resampler: Not installed
2025-08-13 23:07:13,403:INFO:             kaleido: 1.0.0
2025-08-13 23:07:13,403:INFO:           schemdraw: 0.15
2025-08-13 23:07:13,403:INFO:         statsmodels: 0.14.5
2025-08-13 23:07:13,403:INFO:              sktime: 0.26.0
2025-08-13 23:07:13,403:INFO:               tbats: 1.1.3
2025-08-13 23:07:13,403:INFO:            pmdarima: 2.0.4
2025-08-13 23:07:13,403:INFO:              psutil: 7.0.0
2025-08-13 23:07:13,403:INFO:          markupsafe: 3.0.2
2025-08-13 23:07:13,403:INFO:             pickle5: Not installed
2025-08-13 23:07:13,403:INFO:         cloudpickle: 3.1.1
2025-08-13 23:07:13,403:INFO:         deprecation: 2.1.0
2025-08-13 23:07:13,403:INFO:              xxhash: 3.5.0
2025-08-13 23:07:13,403:INFO:           wurlitzer: 3.1.1
2025-08-13 23:07:13,403:INFO:PyCaret optional dependencies:
2025-08-13 23:07:13,403:INFO:                shap: 0.44.1
2025-08-13 23:07:13,403:INFO:           interpret: 0.7.2
2025-08-13 23:07:13,403:INFO:                umap: 0.5.7
2025-08-13 23:07:13,403:INFO:     ydata_profiling: 4.16.1
2025-08-13 23:07:13,403:INFO:  explainerdashboard: 0.5.1
2025-08-13 23:07:13,403:INFO:             autoviz: Not installed
2025-08-13 23:07:13,403:INFO:           fairlearn: 0.7.0
2025-08-13 23:07:13,403:INFO:          deepchecks: Not installed
2025-08-13 23:07:13,403:INFO:             xgboost: 3.0.4
2025-08-13 23:07:13,403:INFO:            catboost: 1.2.8
2025-08-13 23:07:13,403:INFO:              kmodes: 0.12.2
2025-08-13 23:07:13,403:INFO:             mlxtend: 0.23.4
2025-08-13 23:07:13,403:INFO:       statsforecast: 1.5.0
2025-08-13 23:07:13,403:INFO:        tune_sklearn: Not installed
2025-08-13 23:07:13,403:INFO:                 ray: Not installed
2025-08-13 23:07:13,403:INFO:            hyperopt: 0.2.7
2025-08-13 23:07:13,403:INFO:              optuna: 4.4.0
2025-08-13 23:07:13,403:INFO:               skopt: 0.10.2
2025-08-13 23:07:13,403:INFO:              mlflow: 3.2.0
2025-08-13 23:07:13,404:INFO:              gradio: 5.42.0
2025-08-13 23:07:13,404:INFO:             fastapi: 0.116.1
2025-08-13 23:07:13,404:INFO:             uvicorn: 0.35.0
2025-08-13 23:07:13,404:INFO:              m2cgen: 0.10.0
2025-08-13 23:07:13,404:INFO:           evidently: 0.4.40
2025-08-13 23:07:13,404:INFO:               fugue: 0.8.7
2025-08-13 23:07:13,404:INFO:           streamlit: 1.48.1
2025-08-13 23:07:13,404:INFO:             prophet: Not installed
2025-08-13 23:07:13,404:INFO:None
2025-08-13 23:07:13,404:INFO:Set up data.
2025-08-13 23:07:13,405:INFO:Set up index.
2025-08-13 23:07:13,405:INFO:Assigning column types.
2025-08-13 23:07:13,406:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-13 23:07:13,406:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 23:07:13,406:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,409:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-13 23:07:13,409:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,409:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-13 23:07:13,409:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,409:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,410:INFO:Preparing preprocessing pipeline...
2025-08-13 23:07:13,410:INFO:Set up simple imputation.
2025-08-13 23:07:13,410:INFO:Set up feature normalization.
2025-08-13 23:07:13,415:INFO:Finished creating preprocessing pipeline.
2025-08-13 23:07:13,416:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-13 23:07:13,416:INFO:Creating final display dataframe.
2025-08-13 23:07:13,423:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  fd15
2025-08-13 23:07:13,423:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,423:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-13 23:07:13,423:INFO:setup() successfully completed in 0.02s...............
2025-08-13 23:07:13,423:INFO:Initializing create_model()
2025-08-13 23:07:13,423:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff4638c5d0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-13 23:07:13,423:INFO:Checking exceptions
2025-08-13 23:07:13,428:INFO:Importing untrained model
2025-08-13 23:07:13,429:INFO:K-Means Clustering Imported successfully
2025-08-13 23:07:13,429:INFO:Fitting Model
2025-08-13 23:07:13,609:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 23:07:13,610:INFO:create_models() successfully completed......................................
2025-08-13 23:07:13,610:INFO:Uploading results into container
2025-08-13 23:07:13,612:INFO:Uploading model into container now
2025-08-13 23:07:13,616:INFO:_master_model_container: 1
2025-08-13 23:07:13,616:INFO:_display_container: 2
2025-08-13 23:07:13,616:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-13 23:07:13,617:INFO:create_model() successfully completed......................................
2025-08-13 23:07:13,713:INFO:Initializing assign_model()
2025-08-13 23:07:13,713:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff4638c5d0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-13 23:07:13,713:INFO:Checking exceptions
2025-08-13 23:07:13,714:INFO:Determining Trained Model
2025-08-13 23:07:13,714:INFO:Trained Model : K-Means Clustering
2025-08-13 23:07:13,714:INFO:Copying data
2025-08-13 23:07:13,715:INFO:(3000, 12)
2025-08-13 23:07:13,715:INFO:assign_model() successfully completed......................................
2025-08-13 23:07:13,717:INFO:Initializing save_model()
2025-08-13 23:07:13,717:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-13 23:07:13,717:INFO:Adding model into prep_pipe
2025-08-13 23:07:13,719:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-13 23:07:13,721:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-13 23:07:13,721:INFO:save_model() successfully completed......................................
2025-08-13 23:07:57,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:07:57,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:07:57,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:07:57,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-13 23:07:58,560:INFO:Initializing load_model()
2025-08-13 23:07:58,560:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-13 23:07:58,739:INFO:Initializing load_model()
2025-08-13 23:07:58,740:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-13 23:09:03,041:INFO:Initializing predict_model()
2025-08-13 23:09:03,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9ab2ee50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff51abe2a0>)
2025-08-13 23:09:03,042:INFO:Checking exceptions
2025-08-13 23:09:03,042:INFO:Preloading libraries
2025-08-13 23:09:03,043:INFO:Set up data.
2025-08-13 23:09:03,048:INFO:Set up index.
2025-08-13 23:09:03,052:INFO:Initializing predict_model()
2025-08-13 23:09:03,052:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4aeebf50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9ae677e0>)
2025-08-13 23:09:03,052:INFO:Checking exceptions
2025-08-13 23:09:03,052:INFO:Preloading libraries
2025-08-13 23:09:03,052:INFO:Set up data.
2025-08-13 23:09:03,054:INFO:Set up index.
2025-08-14 08:34:32,396:INFO:Initializing predict_model()
2025-08-14 08:34:32,398:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff51230190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6074c0>)
2025-08-14 08:34:32,399:INFO:Checking exceptions
2025-08-14 08:34:32,399:INFO:Preloading libraries
2025-08-14 08:34:32,399:INFO:Set up data.
2025-08-14 08:34:32,401:INFO:Set up index.
2025-08-14 08:34:32,405:INFO:Initializing predict_model()
2025-08-14 08:34:32,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff512360d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a605a80>)
2025-08-14 08:34:32,405:INFO:Checking exceptions
2025-08-14 08:34:32,405:INFO:Preloading libraries
2025-08-14 08:34:32,405:INFO:Set up data.
2025-08-14 08:34:32,407:INFO:Set up index.
2025-08-14 08:34:45,052:INFO:Initializing predict_model()
2025-08-14 08:34:45,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff511c9050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9bbb6de0>)
2025-08-14 08:34:45,054:INFO:Checking exceptions
2025-08-14 08:34:45,054:INFO:Preloading libraries
2025-08-14 08:34:45,054:INFO:Set up data.
2025-08-14 08:34:45,057:INFO:Set up index.
2025-08-14 08:34:45,061:INFO:Initializing predict_model()
2025-08-14 08:34:45,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9c11f9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607100>)
2025-08-14 08:34:45,061:INFO:Checking exceptions
2025-08-14 08:34:45,061:INFO:Preloading libraries
2025-08-14 08:34:45,062:INFO:Set up data.
2025-08-14 08:34:45,063:INFO:Set up index.
2025-08-14 08:39:01,410:INFO:Initializing predict_model()
2025-08-14 08:39:01,413:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4afed290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff514645e0>)
2025-08-14 08:39:01,413:INFO:Checking exceptions
2025-08-14 08:39:01,413:INFO:Preloading libraries
2025-08-14 08:39:01,414:INFO:Set up data.
2025-08-14 08:39:01,419:INFO:Set up index.
2025-08-14 08:39:01,427:INFO:Initializing predict_model()
2025-08-14 08:39:01,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff512361d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a850f40>)
2025-08-14 08:39:01,427:INFO:Checking exceptions
2025-08-14 08:39:01,427:INFO:Preloading libraries
2025-08-14 08:39:01,427:INFO:Set up data.
2025-08-14 08:39:01,430:INFO:Set up index.
2025-08-14 08:39:25,595:INFO:Initializing predict_model()
2025-08-14 08:39:25,597:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a6092d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607420>)
2025-08-14 08:39:25,597:INFO:Checking exceptions
2025-08-14 08:39:25,597:INFO:Preloading libraries
2025-08-14 08:39:25,598:INFO:Set up data.
2025-08-14 08:39:25,603:INFO:Set up index.
2025-08-14 08:39:25,610:INFO:Initializing predict_model()
2025-08-14 08:39:25,611:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4afdf9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607920>)
2025-08-14 08:39:25,611:INFO:Checking exceptions
2025-08-14 08:39:25,611:INFO:Preloading libraries
2025-08-14 08:39:25,611:INFO:Set up data.
2025-08-14 08:39:25,614:INFO:Set up index.
2025-08-14 08:39:41,929:INFO:Initializing predict_model()
2025-08-14 08:39:41,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a6122d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4aea31a0>)
2025-08-14 08:39:41,930:INFO:Checking exceptions
2025-08-14 08:39:41,930:INFO:Preloading libraries
2025-08-14 08:39:41,931:INFO:Set up data.
2025-08-14 08:39:41,936:INFO:Set up index.
2025-08-14 08:39:41,945:INFO:Initializing predict_model()
2025-08-14 08:39:41,945:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff511c8d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607560>)
2025-08-14 08:39:41,945:INFO:Checking exceptions
2025-08-14 08:39:41,945:INFO:Preloading libraries
2025-08-14 08:39:41,945:INFO:Set up data.
2025-08-14 08:39:41,949:INFO:Set up index.
2025-08-14 08:47:58,024:INFO:Initializing predict_model()
2025-08-14 08:47:58,027:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a611ad0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9a8a3f60>)
2025-08-14 08:47:58,027:INFO:Checking exceptions
2025-08-14 08:47:58,027:INFO:Preloading libraries
2025-08-14 08:47:58,028:INFO:Set up data.
2025-08-14 08:47:58,031:INFO:Set up index.
2025-08-14 08:47:58,034:INFO:Initializing predict_model()
2025-08-14 08:47:58,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff511c9610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a605a80>)
2025-08-14 08:47:58,035:INFO:Checking exceptions
2025-08-14 08:47:58,035:INFO:Preloading libraries
2025-08-14 08:47:58,035:INFO:Set up data.
2025-08-14 08:47:58,036:INFO:Set up index.
2025-08-14 08:48:07,562:INFO:Initializing predict_model()
2025-08-14 08:48:07,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a769710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff517cc540>)
2025-08-14 08:48:07,562:INFO:Checking exceptions
2025-08-14 08:48:07,563:INFO:Preloading libraries
2025-08-14 08:48:07,563:INFO:Set up data.
2025-08-14 08:48:07,567:INFO:Set up index.
2025-08-14 08:48:07,570:INFO:Initializing predict_model()
2025-08-14 08:48:07,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a61ac50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9a8a3c40>)
2025-08-14 08:48:07,570:INFO:Checking exceptions
2025-08-14 08:48:07,570:INFO:Preloading libraries
2025-08-14 08:48:07,570:INFO:Set up data.
2025-08-14 08:48:07,572:INFO:Set up index.
2025-08-14 08:52:29,614:INFO:Initializing predict_model()
2025-08-14 08:52:29,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff51690c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6072e0>)
2025-08-14 08:52:29,617:INFO:Checking exceptions
2025-08-14 08:52:29,617:INFO:Preloading libraries
2025-08-14 08:52:29,618:INFO:Set up data.
2025-08-14 08:52:29,623:INFO:Set up index.
2025-08-14 08:52:29,630:INFO:Initializing predict_model()
2025-08-14 08:52:29,630:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9a8a8d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6077e0>)
2025-08-14 08:52:29,631:INFO:Checking exceptions
2025-08-14 08:52:29,631:INFO:Preloading libraries
2025-08-14 08:52:29,631:INFO:Set up data.
2025-08-14 08:52:29,633:INFO:Set up index.
2025-08-14 08:55:14,893:INFO:Initializing predict_model()
2025-08-14 08:55:14,895:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a5da710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff50546b60>)
2025-08-14 08:55:14,895:INFO:Checking exceptions
2025-08-14 08:55:14,895:INFO:Preloading libraries
2025-08-14 08:55:14,896:INFO:Set up data.
2025-08-14 08:55:14,901:INFO:Set up index.
2025-08-14 08:55:14,908:INFO:Initializing predict_model()
2025-08-14 08:55:14,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9c11f9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a850f40>)
2025-08-14 08:55:14,909:INFO:Checking exceptions
2025-08-14 08:55:14,909:INFO:Preloading libraries
2025-08-14 08:55:14,909:INFO:Set up data.
2025-08-14 08:55:14,912:INFO:Set up index.
2025-08-14 08:59:06,018:INFO:Initializing predict_model()
2025-08-14 08:59:06,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a822210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607e20>)
2025-08-14 08:59:06,020:INFO:Checking exceptions
2025-08-14 08:59:06,020:INFO:Preloading libraries
2025-08-14 08:59:06,020:INFO:Set up data.
2025-08-14 08:59:06,024:INFO:Set up index.
2025-08-14 08:59:06,028:INFO:Initializing predict_model()
2025-08-14 08:59:06,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a617550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6079c0>)
2025-08-14 08:59:06,029:INFO:Checking exceptions
2025-08-14 08:59:06,029:INFO:Preloading libraries
2025-08-14 08:59:06,029:INFO:Set up data.
2025-08-14 08:59:06,030:INFO:Set up index.
2025-08-14 09:18:49,817:INFO:Initializing predict_model()
2025-08-14 09:18:49,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a611d10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607560>)
2025-08-14 09:18:49,820:INFO:Checking exceptions
2025-08-14 09:18:49,820:INFO:Preloading libraries
2025-08-14 09:18:49,821:INFO:Set up data.
2025-08-14 09:18:49,827:INFO:Set up index.
2025-08-14 09:18:49,833:INFO:Initializing predict_model()
2025-08-14 09:18:49,833:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a60bf50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607e20>)
2025-08-14 09:18:49,833:INFO:Checking exceptions
2025-08-14 09:18:49,833:INFO:Preloading libraries
2025-08-14 09:18:49,833:INFO:Set up data.
2025-08-14 09:18:49,836:INFO:Set up index.
2025-08-14 09:19:51,085:INFO:Initializing predict_model()
2025-08-14 09:19:51,087:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a61b610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a605a80>)
2025-08-14 09:19:51,087:INFO:Checking exceptions
2025-08-14 09:19:51,087:INFO:Preloading libraries
2025-08-14 09:19:51,088:INFO:Set up data.
2025-08-14 09:19:51,093:INFO:Set up index.
2025-08-14 09:19:51,101:INFO:Initializing predict_model()
2025-08-14 09:19:51,101:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a616790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607740>)
2025-08-14 09:19:51,101:INFO:Checking exceptions
2025-08-14 09:19:51,101:INFO:Preloading libraries
2025-08-14 09:19:51,101:INFO:Set up data.
2025-08-14 09:19:51,104:INFO:Set up index.
2025-08-14 09:26:48,026:INFO:Initializing predict_model()
2025-08-14 09:26:48,028:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff511cae10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4b07e480>)
2025-08-14 09:26:48,028:INFO:Checking exceptions
2025-08-14 09:26:48,028:INFO:Preloading libraries
2025-08-14 09:26:48,028:INFO:Set up data.
2025-08-14 09:26:48,031:INFO:Set up index.
2025-08-14 09:26:48,037:INFO:Initializing predict_model()
2025-08-14 09:26:48,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9c11f9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607d80>)
2025-08-14 09:26:48,037:INFO:Checking exceptions
2025-08-14 09:26:48,037:INFO:Preloading libraries
2025-08-14 09:26:48,037:INFO:Set up data.
2025-08-14 09:26:48,039:INFO:Set up index.
2025-08-14 09:26:57,611:INFO:Initializing predict_model()
2025-08-14 09:26:57,613:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4aff93d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9a8acae0>)
2025-08-14 09:26:57,613:INFO:Checking exceptions
2025-08-14 09:26:57,613:INFO:Preloading libraries
2025-08-14 09:26:57,614:INFO:Set up data.
2025-08-14 09:26:57,619:INFO:Set up index.
2025-08-14 09:26:57,626:INFO:Initializing predict_model()
2025-08-14 09:26:57,626:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff523979d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6072e0>)
2025-08-14 09:26:57,626:INFO:Checking exceptions
2025-08-14 09:26:57,626:INFO:Preloading libraries
2025-08-14 09:26:57,627:INFO:Set up data.
2025-08-14 09:26:57,629:INFO:Set up index.
2025-08-14 09:27:05,756:INFO:Initializing predict_model()
2025-08-14 09:27:05,757:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a608c90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a850f40>)
2025-08-14 09:27:05,757:INFO:Checking exceptions
2025-08-14 09:27:05,757:INFO:Preloading libraries
2025-08-14 09:27:05,758:INFO:Set up data.
2025-08-14 09:27:05,763:INFO:Set up index.
2025-08-14 09:27:05,771:INFO:Initializing predict_model()
2025-08-14 09:27:05,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a5ff9d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a606b60>)
2025-08-14 09:27:05,771:INFO:Checking exceptions
2025-08-14 09:27:05,771:INFO:Preloading libraries
2025-08-14 09:27:05,771:INFO:Set up data.
2025-08-14 09:27:05,774:INFO:Set up index.
2025-08-14 09:27:10,760:INFO:Initializing predict_model()
2025-08-14 09:27:10,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a611b90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4b30d4e0>)
2025-08-14 09:27:10,760:INFO:Checking exceptions
2025-08-14 09:27:10,761:INFO:Preloading libraries
2025-08-14 09:27:10,761:INFO:Set up data.
2025-08-14 09:27:10,767:INFO:Set up index.
2025-08-14 09:27:10,775:INFO:Initializing predict_model()
2025-08-14 09:27:10,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a61ac50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607920>)
2025-08-14 09:27:10,775:INFO:Checking exceptions
2025-08-14 09:27:10,775:INFO:Preloading libraries
2025-08-14 09:27:10,775:INFO:Set up data.
2025-08-14 09:27:10,779:INFO:Set up index.
2025-08-14 09:28:34,759:INFO:Initializing predict_model()
2025-08-14 09:28:34,761:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a60a090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a607e20>)
2025-08-14 09:28:34,761:INFO:Checking exceptions
2025-08-14 09:28:34,761:INFO:Preloading libraries
2025-08-14 09:28:34,762:INFO:Set up data.
2025-08-14 09:28:34,768:INFO:Set up index.
2025-08-14 09:28:34,775:INFO:Initializing predict_model()
2025-08-14 09:28:34,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff523979d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6074c0>)
2025-08-14 09:28:34,775:INFO:Checking exceptions
2025-08-14 09:28:34,775:INFO:Preloading libraries
2025-08-14 09:28:34,776:INFO:Set up data.
2025-08-14 09:28:34,778:INFO:Set up index.
2025-08-14 09:30:50,499:INFO:Initializing predict_model()
2025-08-14 09:30:50,500:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a60f190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a6072e0>)
2025-08-14 09:30:50,501:INFO:Checking exceptions
2025-08-14 09:30:50,501:INFO:Preloading libraries
2025-08-14 09:30:50,501:INFO:Set up data.
2025-08-14 09:30:50,507:INFO:Set up index.
2025-08-14 09:30:50,514:INFO:Initializing predict_model()
2025-08-14 09:30:50,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a60cc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff50546980>)
2025-08-14 09:30:50,514:INFO:Checking exceptions
2025-08-14 09:30:50,514:INFO:Preloading libraries
2025-08-14 09:30:50,515:INFO:Set up data.
2025-08-14 09:30:50,517:INFO:Set up index.
2025-08-14 09:31:25,880:INFO:Initializing predict_model()
2025-08-14 09:31:25,881:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9a895d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4a605a80>)
2025-08-14 09:31:25,881:INFO:Checking exceptions
2025-08-14 09:31:25,881:INFO:Preloading libraries
2025-08-14 09:31:25,881:INFO:Set up data.
2025-08-14 09:31:25,885:INFO:Set up index.
2025-08-14 09:31:25,889:INFO:Initializing predict_model()
2025-08-14 09:31:25,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4a610d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff50546980>)
2025-08-14 09:31:25,889:INFO:Checking exceptions
2025-08-14 09:31:25,889:INFO:Preloading libraries
2025-08-14 09:31:25,889:INFO:Set up data.
2025-08-14 09:31:25,891:INFO:Set up index.
2025-08-14 09:33:19,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:19,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:19,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:19,261:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:19,795:INFO:PyCaret ClassificationExperiment
2025-08-14 09:33:19,795:INFO:Logging name: clf-default-name
2025-08-14 09:33:19,795:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 09:33:19,795:INFO:version 3.3.2
2025-08-14 09:33:19,795:INFO:Initializing setup()
2025-08-14 09:33:19,795:INFO:self.USI: 345c
2025-08-14 09:33:19,795:INFO:self._variable_keys: {'y_test', 'y', 'gpu_n_jobs_param', 'fold_shuffle_param', 'USI', 'X_test', 'exp_name_log', 'exp_id', 'fix_imbalance', 'idx', 'seed', 'target_param', 'fold_generator', 'X_train', 'data', '_ml_usecase', 'html_param', 'pipeline', 'y_train', 'gpu_param', '_available_plots', 'n_jobs_param', 'X', 'log_plots_param', 'is_multiclass', 'fold_groups_param', 'memory', 'logging_param'}
2025-08-14 09:33:19,795:INFO:Checking environment
2025-08-14 09:33:19,795:INFO:python_version: 3.11.13
2025-08-14 09:33:19,795:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 09:33:19,795:INFO:machine: aarch64
2025-08-14 09:33:19,795:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 09:33:19,795:INFO:Memory: svmem(total=4109803520, available=3429670912, percent=16.5, used=519827456, free=2734678016, active=900329472, inactive=314097664, buffers=69775360, cached=785522688, shared=1019904, slab=88711168)
2025-08-14 09:33:19,795:INFO:Physical Core: 8
2025-08-14 09:33:19,795:INFO:Logical Core: 8
2025-08-14 09:33:19,795:INFO:Checking libraries
2025-08-14 09:33:19,795:INFO:System:
2025-08-14 09:33:19,795:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 09:33:19,795:INFO:executable: /usr/local/bin/python
2025-08-14 09:33:19,795:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 09:33:19,796:INFO:PyCaret required dependencies:
2025-08-14 09:33:20,068:INFO:                 pip: 24.0
2025-08-14 09:33:20,068:INFO:          setuptools: 80.9.0
2025-08-14 09:33:20,068:INFO:             pycaret: 3.3.2
2025-08-14 09:33:20,068:INFO:             IPython: 9.4.0
2025-08-14 09:33:20,068:INFO:          ipywidgets: 8.1.7
2025-08-14 09:33:20,068:INFO:                tqdm: 4.67.1
2025-08-14 09:33:20,068:INFO:               numpy: 1.26.4
2025-08-14 09:33:20,068:INFO:              pandas: 2.1.4
2025-08-14 09:33:20,068:INFO:              jinja2: 3.1.6
2025-08-14 09:33:20,068:INFO:               scipy: 1.11.4
2025-08-14 09:33:20,068:INFO:              joblib: 1.3.2
2025-08-14 09:33:20,068:INFO:             sklearn: 1.4.2
2025-08-14 09:33:20,068:INFO:                pyod: 2.0.5
2025-08-14 09:33:20,068:INFO:            imblearn: 0.13.0
2025-08-14 09:33:20,068:INFO:   category_encoders: 2.7.0
2025-08-14 09:33:20,068:INFO:            lightgbm: 4.6.0
2025-08-14 09:33:20,068:INFO:               numba: 0.61.0
2025-08-14 09:33:20,068:INFO:            requests: 2.32.4
2025-08-14 09:33:20,068:INFO:          matplotlib: 3.7.5
2025-08-14 09:33:20,068:INFO:          scikitplot: 0.3.7
2025-08-14 09:33:20,068:INFO:         yellowbrick: 1.5
2025-08-14 09:33:20,068:INFO:              plotly: 5.24.1
2025-08-14 09:33:20,068:INFO:    plotly-resampler: Not installed
2025-08-14 09:33:20,068:INFO:             kaleido: 1.0.0
2025-08-14 09:33:20,068:INFO:           schemdraw: 0.15
2025-08-14 09:33:20,068:INFO:         statsmodels: 0.14.5
2025-08-14 09:33:20,068:INFO:              sktime: 0.26.0
2025-08-14 09:33:20,068:INFO:               tbats: 1.1.3
2025-08-14 09:33:20,068:INFO:            pmdarima: 2.0.4
2025-08-14 09:33:20,068:INFO:              psutil: 7.0.0
2025-08-14 09:33:20,068:INFO:          markupsafe: 3.0.2
2025-08-14 09:33:20,068:INFO:             pickle5: Not installed
2025-08-14 09:33:20,068:INFO:         cloudpickle: 3.1.1
2025-08-14 09:33:20,068:INFO:         deprecation: 2.1.0
2025-08-14 09:33:20,068:INFO:              xxhash: 3.5.0
2025-08-14 09:33:20,068:INFO:           wurlitzer: 3.1.1
2025-08-14 09:33:20,068:INFO:PyCaret optional dependencies:
2025-08-14 09:33:21,186:INFO:                shap: 0.44.1
2025-08-14 09:33:21,186:INFO:           interpret: 0.7.2
2025-08-14 09:33:21,186:INFO:                umap: 0.5.7
2025-08-14 09:33:21,186:INFO:     ydata_profiling: 4.16.1
2025-08-14 09:33:21,186:INFO:  explainerdashboard: 0.5.1
2025-08-14 09:33:21,186:INFO:             autoviz: Not installed
2025-08-14 09:33:21,186:INFO:           fairlearn: 0.7.0
2025-08-14 09:33:21,186:INFO:          deepchecks: Not installed
2025-08-14 09:33:21,186:INFO:             xgboost: 3.0.4
2025-08-14 09:33:21,186:INFO:            catboost: 1.2.8
2025-08-14 09:33:21,186:INFO:              kmodes: 0.12.2
2025-08-14 09:33:21,186:INFO:             mlxtend: 0.23.4
2025-08-14 09:33:21,186:INFO:       statsforecast: 1.5.0
2025-08-14 09:33:21,186:INFO:        tune_sklearn: Not installed
2025-08-14 09:33:21,186:INFO:                 ray: Not installed
2025-08-14 09:33:21,186:INFO:            hyperopt: 0.2.7
2025-08-14 09:33:21,186:INFO:              optuna: 4.4.0
2025-08-14 09:33:21,186:INFO:               skopt: 0.10.2
2025-08-14 09:33:21,186:INFO:              mlflow: 3.2.0
2025-08-14 09:33:21,186:INFO:              gradio: 5.42.0
2025-08-14 09:33:21,186:INFO:             fastapi: 0.116.1
2025-08-14 09:33:21,186:INFO:             uvicorn: 0.35.0
2025-08-14 09:33:21,186:INFO:              m2cgen: 0.10.0
2025-08-14 09:33:21,186:INFO:           evidently: 0.4.40
2025-08-14 09:33:21,186:INFO:               fugue: 0.8.7
2025-08-14 09:33:21,186:INFO:           streamlit: 1.48.1
2025-08-14 09:33:21,186:INFO:             prophet: Not installed
2025-08-14 09:33:21,186:INFO:None
2025-08-14 09:33:21,186:INFO:Set up data.
2025-08-14 09:33:21,190:INFO:Set up folding strategy.
2025-08-14 09:33:21,190:INFO:Set up train/test split.
2025-08-14 09:33:21,194:INFO:Set up index.
2025-08-14 09:33:21,194:INFO:Assigning column types.
2025-08-14 09:33:21,195:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 09:33:21,210:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,211:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,222:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,223:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,263:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,272:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,273:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,273:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 09:33:21,288:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,297:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,297:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,312:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 09:33:21,321:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,322:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,322:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 09:33:21,346:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,347:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,371:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,372:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,372:INFO:Preparing preprocessing pipeline...
2025-08-14 09:33:21,373:INFO:Set up label encoding.
2025-08-14 09:33:21,373:INFO:Set up simple imputation.
2025-08-14 09:33:21,374:INFO:Set up encoding of categorical features.
2025-08-14 09:33:21,374:INFO:Set up feature normalization.
2025-08-14 09:33:21,399:INFO:Finished creating preprocessing pipeline.
2025-08-14 09:33:21,401:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 09:33:21,402:INFO:Creating final display dataframe.
2025-08-14 09:33:21,455:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     345c
2025-08-14 09:33:21,478:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,479:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,502:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 09:33:21,503:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 09:33:21,503:INFO:setup() successfully completed in 1.71s...............
2025-08-14 09:33:21,503:INFO:Initializing compare_models()
2025-08-14 09:33:21,503:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 09:33:21,503:INFO:Checking exceptions
2025-08-14 09:33:21,505:INFO:Preparing display monitor
2025-08-14 09:33:21,506:INFO:Initializing Logistic Regression
2025-08-14 09:33:21,507:INFO:Total runtime is 1.613299051920573e-06 minutes
2025-08-14 09:33:21,507:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:21,507:INFO:Initializing create_model()
2025-08-14 09:33:21,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:21,507:INFO:Checking exceptions
2025-08-14 09:33:21,507:INFO:Importing libraries
2025-08-14 09:33:21,507:INFO:Copying training dataset
2025-08-14 09:33:21,509:INFO:Defining folds
2025-08-14 09:33:21,509:INFO:Declaring metric variables
2025-08-14 09:33:21,509:INFO:Importing untrained model
2025-08-14 09:33:21,509:INFO:Logistic Regression Imported successfully
2025-08-14 09:33:21,509:INFO:Starting cross validation
2025-08-14 09:33:21,509:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:23,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,340:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,348:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,391:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,392:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,395:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,399:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,399:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,417:INFO:Calculating mean and std
2025-08-14 09:33:23,420:INFO:Creating metrics dataframe
2025-08-14 09:33:23,429:INFO:Uploading results into container
2025-08-14 09:33:23,430:INFO:Uploading model into container now
2025-08-14 09:33:23,431:INFO:_master_model_container: 1
2025-08-14 09:33:23,431:INFO:_display_container: 2
2025-08-14 09:33:23,432:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 09:33:23,432:INFO:create_model() successfully completed......................................
2025-08-14 09:33:23,655:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:23,655:INFO:Creating metrics dataframe
2025-08-14 09:33:23,656:INFO:Initializing K Neighbors Classifier
2025-08-14 09:33:23,656:INFO:Total runtime is 0.035832289854685465 minutes
2025-08-14 09:33:23,656:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:23,657:INFO:Initializing create_model()
2025-08-14 09:33:23,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:23,657:INFO:Checking exceptions
2025-08-14 09:33:23,657:INFO:Importing libraries
2025-08-14 09:33:23,657:INFO:Copying training dataset
2025-08-14 09:33:23,659:INFO:Defining folds
2025-08-14 09:33:23,659:INFO:Declaring metric variables
2025-08-14 09:33:23,659:INFO:Importing untrained model
2025-08-14 09:33:23,659:INFO:K Neighbors Classifier Imported successfully
2025-08-14 09:33:23,660:INFO:Starting cross validation
2025-08-14 09:33:23,660:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:23,776:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,778:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,781:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,785:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,785:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:23,787:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,853:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,856:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,859:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,859:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,861:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,862:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,865:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,867:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:24,877:INFO:Calculating mean and std
2025-08-14 09:33:24,879:INFO:Creating metrics dataframe
2025-08-14 09:33:24,888:INFO:Uploading results into container
2025-08-14 09:33:24,889:INFO:Uploading model into container now
2025-08-14 09:33:24,890:INFO:_master_model_container: 2
2025-08-14 09:33:24,890:INFO:_display_container: 2
2025-08-14 09:33:24,891:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 09:33:24,891:INFO:create_model() successfully completed......................................
2025-08-14 09:33:25,029:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:25,029:INFO:Creating metrics dataframe
2025-08-14 09:33:25,031:INFO:Initializing Naive Bayes
2025-08-14 09:33:25,031:INFO:Total runtime is 0.058737508455912274 minutes
2025-08-14 09:33:25,031:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:25,031:INFO:Initializing create_model()
2025-08-14 09:33:25,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:25,031:INFO:Checking exceptions
2025-08-14 09:33:25,031:INFO:Importing libraries
2025-08-14 09:33:25,031:INFO:Copying training dataset
2025-08-14 09:33:25,033:INFO:Defining folds
2025-08-14 09:33:25,033:INFO:Declaring metric variables
2025-08-14 09:33:25,033:INFO:Importing untrained model
2025-08-14 09:33:25,033:INFO:Naive Bayes Imported successfully
2025-08-14 09:33:25,033:INFO:Starting cross validation
2025-08-14 09:33:25,034:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:25,110:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,114:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,118:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,118:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,121:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,123:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,124:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,125:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,125:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,128:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,129:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,131:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,132:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,135:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,150:INFO:Calculating mean and std
2025-08-14 09:33:25,151:INFO:Creating metrics dataframe
2025-08-14 09:33:25,151:INFO:Uploading results into container
2025-08-14 09:33:25,152:INFO:Uploading model into container now
2025-08-14 09:33:25,152:INFO:_master_model_container: 3
2025-08-14 09:33:25,152:INFO:_display_container: 2
2025-08-14 09:33:25,152:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 09:33:25,152:INFO:create_model() successfully completed......................................
2025-08-14 09:33:25,221:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:25,221:INFO:Creating metrics dataframe
2025-08-14 09:33:25,222:INFO:Initializing Decision Tree Classifier
2025-08-14 09:33:25,222:INFO:Total runtime is 0.06192222038904826 minutes
2025-08-14 09:33:25,222:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:25,222:INFO:Initializing create_model()
2025-08-14 09:33:25,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:25,222:INFO:Checking exceptions
2025-08-14 09:33:25,222:INFO:Importing libraries
2025-08-14 09:33:25,222:INFO:Copying training dataset
2025-08-14 09:33:25,224:INFO:Defining folds
2025-08-14 09:33:25,224:INFO:Declaring metric variables
2025-08-14 09:33:25,224:INFO:Importing untrained model
2025-08-14 09:33:25,224:INFO:Decision Tree Classifier Imported successfully
2025-08-14 09:33:25,224:INFO:Starting cross validation
2025-08-14 09:33:25,225:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:25,268:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,269:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,271:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,273:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,274:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,274:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,278:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,279:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,279:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,279:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,279:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,281:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,282:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,282:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,285:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,298:INFO:Calculating mean and std
2025-08-14 09:33:25,298:INFO:Creating metrics dataframe
2025-08-14 09:33:25,299:INFO:Uploading results into container
2025-08-14 09:33:25,300:INFO:Uploading model into container now
2025-08-14 09:33:25,300:INFO:_master_model_container: 4
2025-08-14 09:33:25,300:INFO:_display_container: 2
2025-08-14 09:33:25,300:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 09:33:25,300:INFO:create_model() successfully completed......................................
2025-08-14 09:33:25,399:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:25,400:INFO:Creating metrics dataframe
2025-08-14 09:33:25,404:INFO:Initializing SVM - Linear Kernel
2025-08-14 09:33:25,404:INFO:Total runtime is 0.06495726505915324 minutes
2025-08-14 09:33:25,405:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:25,405:INFO:Initializing create_model()
2025-08-14 09:33:25,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:25,405:INFO:Checking exceptions
2025-08-14 09:33:25,405:INFO:Importing libraries
2025-08-14 09:33:25,405:INFO:Copying training dataset
2025-08-14 09:33:25,411:INFO:Defining folds
2025-08-14 09:33:25,411:INFO:Declaring metric variables
2025-08-14 09:33:25,412:INFO:Importing untrained model
2025-08-14 09:33:25,414:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 09:33:25,414:INFO:Starting cross validation
2025-08-14 09:33:25,415:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:25,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,495:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,498:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,498:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,501:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,507:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,519:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,521:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,524:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,536:INFO:Calculating mean and std
2025-08-14 09:33:25,537:INFO:Creating metrics dataframe
2025-08-14 09:33:25,539:INFO:Uploading results into container
2025-08-14 09:33:25,539:INFO:Uploading model into container now
2025-08-14 09:33:25,540:INFO:_master_model_container: 5
2025-08-14 09:33:25,540:INFO:_display_container: 2
2025-08-14 09:33:25,540:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 09:33:25,540:INFO:create_model() successfully completed......................................
2025-08-14 09:33:25,618:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:25,618:INFO:Creating metrics dataframe
2025-08-14 09:33:25,619:INFO:Initializing Ridge Classifier
2025-08-14 09:33:25,619:INFO:Total runtime is 0.06854370832443238 minutes
2025-08-14 09:33:25,619:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:25,619:INFO:Initializing create_model()
2025-08-14 09:33:25,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:25,619:INFO:Checking exceptions
2025-08-14 09:33:25,619:INFO:Importing libraries
2025-08-14 09:33:25,619:INFO:Copying training dataset
2025-08-14 09:33:25,621:INFO:Defining folds
2025-08-14 09:33:25,621:INFO:Declaring metric variables
2025-08-14 09:33:25,621:INFO:Importing untrained model
2025-08-14 09:33:25,621:INFO:Ridge Classifier Imported successfully
2025-08-14 09:33:25,622:INFO:Starting cross validation
2025-08-14 09:33:25,622:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:25,670:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,670:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,671:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,673:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,673:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,676:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,676:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,678:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,679:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,679:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,684:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,685:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,689:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,690:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,693:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,709:INFO:Calculating mean and std
2025-08-14 09:33:25,710:INFO:Creating metrics dataframe
2025-08-14 09:33:25,711:INFO:Uploading results into container
2025-08-14 09:33:25,712:INFO:Uploading model into container now
2025-08-14 09:33:25,713:INFO:_master_model_container: 6
2025-08-14 09:33:25,713:INFO:_display_container: 2
2025-08-14 09:33:25,713:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 09:33:25,713:INFO:create_model() successfully completed......................................
2025-08-14 09:33:25,800:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:25,800:INFO:Creating metrics dataframe
2025-08-14 09:33:25,801:INFO:Initializing Random Forest Classifier
2025-08-14 09:33:25,801:INFO:Total runtime is 0.0715804934501648 minutes
2025-08-14 09:33:25,801:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:25,802:INFO:Initializing create_model()
2025-08-14 09:33:25,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:25,802:INFO:Checking exceptions
2025-08-14 09:33:25,802:INFO:Importing libraries
2025-08-14 09:33:25,802:INFO:Copying training dataset
2025-08-14 09:33:25,803:INFO:Defining folds
2025-08-14 09:33:25,804:INFO:Declaring metric variables
2025-08-14 09:33:25,804:INFO:Importing untrained model
2025-08-14 09:33:25,804:INFO:Random Forest Classifier Imported successfully
2025-08-14 09:33:25,804:INFO:Starting cross validation
2025-08-14 09:33:25,804:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:25,990:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,992:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:25,995:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,000:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,000:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,002:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,003:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,003:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,006:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,006:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,006:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,021:INFO:Calculating mean and std
2025-08-14 09:33:26,021:INFO:Creating metrics dataframe
2025-08-14 09:33:26,022:INFO:Uploading results into container
2025-08-14 09:33:26,022:INFO:Uploading model into container now
2025-08-14 09:33:26,022:INFO:_master_model_container: 7
2025-08-14 09:33:26,022:INFO:_display_container: 2
2025-08-14 09:33:26,023:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 09:33:26,023:INFO:create_model() successfully completed......................................
2025-08-14 09:33:26,099:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:26,099:INFO:Creating metrics dataframe
2025-08-14 09:33:26,100:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 09:33:26,100:INFO:Total runtime is 0.07656566301981609 minutes
2025-08-14 09:33:26,100:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:26,101:INFO:Initializing create_model()
2025-08-14 09:33:26,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:26,101:INFO:Checking exceptions
2025-08-14 09:33:26,101:INFO:Importing libraries
2025-08-14 09:33:26,101:INFO:Copying training dataset
2025-08-14 09:33:26,103:INFO:Defining folds
2025-08-14 09:33:26,103:INFO:Declaring metric variables
2025-08-14 09:33:26,103:INFO:Importing untrained model
2025-08-14 09:33:26,103:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 09:33:26,103:INFO:Starting cross validation
2025-08-14 09:33:26,104:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:26,151:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 09:33:26,157:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 09:33:26,158:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 09:33:26,161:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 09:33:26,165:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 09:33:26,165:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 09:33:26,166:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 09:33:26,166:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 09:33:26,168:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 09:33:26,168:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 09:33:26,168:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 09:33:26,173:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 09:33:26,174:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,175:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,176:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,177:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,181:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,181:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,181:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,182:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:26,183:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,184:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,184:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,187:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,189:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,189:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,200:INFO:Calculating mean and std
2025-08-14 09:33:26,200:INFO:Creating metrics dataframe
2025-08-14 09:33:26,201:INFO:Uploading results into container
2025-08-14 09:33:26,202:INFO:Uploading model into container now
2025-08-14 09:33:26,202:INFO:_master_model_container: 8
2025-08-14 09:33:26,202:INFO:_display_container: 2
2025-08-14 09:33:26,202:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 09:33:26,202:INFO:create_model() successfully completed......................................
2025-08-14 09:33:26,272:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:26,272:INFO:Creating metrics dataframe
2025-08-14 09:33:26,273:INFO:Initializing Ada Boost Classifier
2025-08-14 09:33:26,273:INFO:Total runtime is 0.07943865060806275 minutes
2025-08-14 09:33:26,273:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:26,273:INFO:Initializing create_model()
2025-08-14 09:33:26,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:26,273:INFO:Checking exceptions
2025-08-14 09:33:26,273:INFO:Importing libraries
2025-08-14 09:33:26,273:INFO:Copying training dataset
2025-08-14 09:33:26,275:INFO:Defining folds
2025-08-14 09:33:26,275:INFO:Declaring metric variables
2025-08-14 09:33:26,275:INFO:Importing untrained model
2025-08-14 09:33:26,275:INFO:Ada Boost Classifier Imported successfully
2025-08-14 09:33:26,275:INFO:Starting cross validation
2025-08-14 09:33:26,276:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:26,305:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 09:33:26,306:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 09:33:26,310:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 09:33:26,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 09:33:26,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 09:33:26,317:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,320:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,322:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,322:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,328:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,349:INFO:Calculating mean and std
2025-08-14 09:33:26,349:INFO:Creating metrics dataframe
2025-08-14 09:33:26,350:INFO:Uploading results into container
2025-08-14 09:33:26,350:INFO:Uploading model into container now
2025-08-14 09:33:26,351:INFO:_master_model_container: 9
2025-08-14 09:33:26,351:INFO:_display_container: 2
2025-08-14 09:33:26,351:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 09:33:26,351:INFO:create_model() successfully completed......................................
2025-08-14 09:33:26,419:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:26,419:INFO:Creating metrics dataframe
2025-08-14 09:33:26,420:INFO:Initializing Gradient Boosting Classifier
2025-08-14 09:33:26,420:INFO:Total runtime is 0.0818973223368327 minutes
2025-08-14 09:33:26,420:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:26,420:INFO:Initializing create_model()
2025-08-14 09:33:26,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:26,421:INFO:Checking exceptions
2025-08-14 09:33:26,421:INFO:Importing libraries
2025-08-14 09:33:26,421:INFO:Copying training dataset
2025-08-14 09:33:26,422:INFO:Defining folds
2025-08-14 09:33:26,422:INFO:Declaring metric variables
2025-08-14 09:33:26,423:INFO:Importing untrained model
2025-08-14 09:33:26,423:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 09:33:26,423:INFO:Starting cross validation
2025-08-14 09:33:26,423:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:26,542:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,545:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,546:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,546:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,549:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,549:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,549:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,549:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,554:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,554:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,574:INFO:Calculating mean and std
2025-08-14 09:33:26,574:INFO:Creating metrics dataframe
2025-08-14 09:33:26,575:INFO:Uploading results into container
2025-08-14 09:33:26,575:INFO:Uploading model into container now
2025-08-14 09:33:26,575:INFO:_master_model_container: 10
2025-08-14 09:33:26,575:INFO:_display_container: 2
2025-08-14 09:33:26,575:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 09:33:26,575:INFO:create_model() successfully completed......................................
2025-08-14 09:33:26,645:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:26,645:INFO:Creating metrics dataframe
2025-08-14 09:33:26,646:INFO:Initializing Linear Discriminant Analysis
2025-08-14 09:33:26,646:INFO:Total runtime is 0.08566615184148153 minutes
2025-08-14 09:33:26,647:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:26,647:INFO:Initializing create_model()
2025-08-14 09:33:26,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:26,647:INFO:Checking exceptions
2025-08-14 09:33:26,647:INFO:Importing libraries
2025-08-14 09:33:26,647:INFO:Copying training dataset
2025-08-14 09:33:26,649:INFO:Defining folds
2025-08-14 09:33:26,649:INFO:Declaring metric variables
2025-08-14 09:33:26,649:INFO:Importing untrained model
2025-08-14 09:33:26,649:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 09:33:26,649:INFO:Starting cross validation
2025-08-14 09:33:26,649:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:26,699:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,702:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,704:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,706:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,706:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,707:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,708:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,708:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,712:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,718:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:26,732:INFO:Calculating mean and std
2025-08-14 09:33:26,733:INFO:Creating metrics dataframe
2025-08-14 09:33:26,735:INFO:Uploading results into container
2025-08-14 09:33:26,735:INFO:Uploading model into container now
2025-08-14 09:33:26,736:INFO:_master_model_container: 11
2025-08-14 09:33:26,736:INFO:_display_container: 2
2025-08-14 09:33:26,736:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 09:33:26,736:INFO:create_model() successfully completed......................................
2025-08-14 09:33:26,832:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:26,832:INFO:Creating metrics dataframe
2025-08-14 09:33:26,833:INFO:Initializing Extra Trees Classifier
2025-08-14 09:33:26,833:INFO:Total runtime is 0.08878018458684286 minutes
2025-08-14 09:33:26,833:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:26,833:INFO:Initializing create_model()
2025-08-14 09:33:26,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:26,834:INFO:Checking exceptions
2025-08-14 09:33:26,834:INFO:Importing libraries
2025-08-14 09:33:26,834:INFO:Copying training dataset
2025-08-14 09:33:26,836:INFO:Defining folds
2025-08-14 09:33:26,836:INFO:Declaring metric variables
2025-08-14 09:33:26,836:INFO:Importing untrained model
2025-08-14 09:33:26,836:INFO:Extra Trees Classifier Imported successfully
2025-08-14 09:33:26,836:INFO:Starting cross validation
2025-08-14 09:33:26,837:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:27,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,010:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,012:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,013:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,013:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,018:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,018:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,023:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,031:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,032:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,034:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,036:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,045:INFO:Calculating mean and std
2025-08-14 09:33:27,046:INFO:Creating metrics dataframe
2025-08-14 09:33:27,047:INFO:Uploading results into container
2025-08-14 09:33:27,048:INFO:Uploading model into container now
2025-08-14 09:33:27,048:INFO:_master_model_container: 12
2025-08-14 09:33:27,048:INFO:_display_container: 2
2025-08-14 09:33:27,048:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 09:33:27,048:INFO:create_model() successfully completed......................................
2025-08-14 09:33:27,141:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:27,141:INFO:Creating metrics dataframe
2025-08-14 09:33:27,142:INFO:Initializing Extreme Gradient Boosting
2025-08-14 09:33:27,142:INFO:Total runtime is 0.09393362998962403 minutes
2025-08-14 09:33:27,143:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:27,143:INFO:Initializing create_model()
2025-08-14 09:33:27,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:27,143:INFO:Checking exceptions
2025-08-14 09:33:27,143:INFO:Importing libraries
2025-08-14 09:33:27,143:INFO:Copying training dataset
2025-08-14 09:33:27,145:INFO:Defining folds
2025-08-14 09:33:27,145:INFO:Declaring metric variables
2025-08-14 09:33:27,145:INFO:Importing untrained model
2025-08-14 09:33:27,146:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 09:33:27,146:INFO:Starting cross validation
2025-08-14 09:33:27,146:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:27,244:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,248:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,248:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,248:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,250:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,251:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,251:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,251:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,253:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,253:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,253:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,255:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,258:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,258:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,258:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:27,277:INFO:Calculating mean and std
2025-08-14 09:33:27,277:INFO:Creating metrics dataframe
2025-08-14 09:33:27,279:INFO:Uploading results into container
2025-08-14 09:33:27,279:INFO:Uploading model into container now
2025-08-14 09:33:27,279:INFO:_master_model_container: 13
2025-08-14 09:33:27,279:INFO:_display_container: 2
2025-08-14 09:33:27,279:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 09:33:27,280:INFO:create_model() successfully completed......................................
2025-08-14 09:33:27,368:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:27,369:INFO:Creating metrics dataframe
2025-08-14 09:33:27,370:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 09:33:27,370:INFO:Total runtime is 0.09772006273269654 minutes
2025-08-14 09:33:27,370:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:27,370:INFO:Initializing create_model()
2025-08-14 09:33:27,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:27,370:INFO:Checking exceptions
2025-08-14 09:33:27,370:INFO:Importing libraries
2025-08-14 09:33:27,370:INFO:Copying training dataset
2025-08-14 09:33:27,372:INFO:Defining folds
2025-08-14 09:33:27,372:INFO:Declaring metric variables
2025-08-14 09:33:27,372:INFO:Importing untrained model
2025-08-14 09:33:27,372:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 09:33:27,373:INFO:Starting cross validation
2025-08-14 09:33:27,373:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:30,088:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,092:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,101:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,238:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,246:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,251:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,269:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,275:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,281:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,346:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,367:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,370:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:30,387:INFO:Calculating mean and std
2025-08-14 09:33:30,389:INFO:Creating metrics dataframe
2025-08-14 09:33:30,396:INFO:Uploading results into container
2025-08-14 09:33:30,396:INFO:Uploading model into container now
2025-08-14 09:33:30,397:INFO:_master_model_container: 14
2025-08-14 09:33:30,397:INFO:_display_container: 2
2025-08-14 09:33:30,398:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 09:33:30,398:INFO:create_model() successfully completed......................................
2025-08-14 09:33:30,532:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:30,532:INFO:Creating metrics dataframe
2025-08-14 09:33:30,533:INFO:Initializing CatBoost Classifier
2025-08-14 09:33:30,533:INFO:Total runtime is 0.15044403870900472 minutes
2025-08-14 09:33:30,533:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:30,533:INFO:Initializing create_model()
2025-08-14 09:33:30,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:30,533:INFO:Checking exceptions
2025-08-14 09:33:30,533:INFO:Importing libraries
2025-08-14 09:33:30,534:INFO:Copying training dataset
2025-08-14 09:33:30,536:INFO:Defining folds
2025-08-14 09:33:30,536:INFO:Declaring metric variables
2025-08-14 09:33:30,536:INFO:Importing untrained model
2025-08-14 09:33:30,536:INFO:CatBoost Classifier Imported successfully
2025-08-14 09:33:30,537:INFO:Starting cross validation
2025-08-14 09:33:30,537:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:36,612:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,618:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,623:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,632:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,642:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,648:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,701:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,707:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,714:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,722:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,752:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,755:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,757:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:36,774:INFO:Calculating mean and std
2025-08-14 09:33:36,776:INFO:Creating metrics dataframe
2025-08-14 09:33:36,781:INFO:Uploading results into container
2025-08-14 09:33:36,782:INFO:Uploading model into container now
2025-08-14 09:33:36,782:INFO:_master_model_container: 15
2025-08-14 09:33:36,782:INFO:_display_container: 2
2025-08-14 09:33:36,782:INFO:<catboost.core.CatBoostClassifier object at 0xffff145dc210>
2025-08-14 09:33:36,782:INFO:create_model() successfully completed......................................
2025-08-14 09:33:37,013:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:37,014:INFO:Creating metrics dataframe
2025-08-14 09:33:37,015:INFO:Initializing Dummy Classifier
2025-08-14 09:33:37,015:INFO:Total runtime is 0.2584763169288635 minutes
2025-08-14 09:33:37,015:INFO:SubProcess create_model() called ==================================
2025-08-14 09:33:37,015:INFO:Initializing create_model()
2025-08-14 09:33:37,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff145c9fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:37,015:INFO:Checking exceptions
2025-08-14 09:33:37,016:INFO:Importing libraries
2025-08-14 09:33:37,016:INFO:Copying training dataset
2025-08-14 09:33:37,022:INFO:Defining folds
2025-08-14 09:33:37,022:INFO:Declaring metric variables
2025-08-14 09:33:37,023:INFO:Importing untrained model
2025-08-14 09:33:37,023:INFO:Dummy Classifier Imported successfully
2025-08-14 09:33:37,023:INFO:Starting cross validation
2025-08-14 09:33:37,024:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 09:33:37,097:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,100:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,100:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,103:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,104:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:37,104:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,105:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,106:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,106:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,107:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:37,108:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:37,109:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,110:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,110:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,112:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,112:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:37,115:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,115:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,117:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 09:33:37,118:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 09:33:37,136:INFO:Calculating mean and std
2025-08-14 09:33:37,136:INFO:Creating metrics dataframe
2025-08-14 09:33:37,137:INFO:Uploading results into container
2025-08-14 09:33:37,137:INFO:Uploading model into container now
2025-08-14 09:33:37,138:INFO:_master_model_container: 16
2025-08-14 09:33:37,138:INFO:_display_container: 2
2025-08-14 09:33:37,138:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 09:33:37,138:INFO:create_model() successfully completed......................................
2025-08-14 09:33:37,224:INFO:SubProcess create_model() end ==================================
2025-08-14 09:33:37,224:INFO:Creating metrics dataframe
2025-08-14 09:33:37,226:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 09:33:37,226:INFO:Initializing create_model()
2025-08-14 09:33:37,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:37,226:INFO:Checking exceptions
2025-08-14 09:33:37,227:INFO:Importing libraries
2025-08-14 09:33:37,227:INFO:Copying training dataset
2025-08-14 09:33:37,229:INFO:Defining folds
2025-08-14 09:33:37,229:INFO:Declaring metric variables
2025-08-14 09:33:37,229:INFO:Importing untrained model
2025-08-14 09:33:37,229:INFO:Declaring custom model
2025-08-14 09:33:37,229:INFO:Logistic Regression Imported successfully
2025-08-14 09:33:37,230:INFO:Cross validation set to False
2025-08-14 09:33:37,230:INFO:Fitting Model
2025-08-14 09:33:37,304:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 09:33:37,310:INFO:create_model() successfully completed......................................
2025-08-14 09:33:37,581:INFO:_master_model_container: 16
2025-08-14 09:33:37,581:INFO:_display_container: 2
2025-08-14 09:33:37,581:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 09:33:37,581:INFO:compare_models() successfully completed......................................
2025-08-14 09:33:37,582:INFO:Initializing finalize_model()
2025-08-14 09:33:37,582:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 09:33:37,582:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 09:33:37,583:INFO:Initializing create_model()
2025-08-14 09:33:37,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff481587d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 09:33:37,583:INFO:Checking exceptions
2025-08-14 09:33:37,584:INFO:Importing libraries
2025-08-14 09:33:37,584:INFO:Copying training dataset
2025-08-14 09:33:37,584:INFO:Defining folds
2025-08-14 09:33:37,584:INFO:Declaring metric variables
2025-08-14 09:33:37,584:INFO:Importing untrained model
2025-08-14 09:33:37,584:INFO:Declaring custom model
2025-08-14 09:33:37,584:INFO:Logistic Regression Imported successfully
2025-08-14 09:33:37,585:INFO:Cross validation set to False
2025-08-14 09:33:37,585:INFO:Fitting Model
2025-08-14 09:33:37,609:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 09:33:37,609:INFO:create_model() successfully completed......................................
2025-08-14 09:33:37,721:INFO:_master_model_container: 16
2025-08-14 09:33:37,721:INFO:_display_container: 2
2025-08-14 09:33:37,723:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 09:33:37,723:INFO:finalize_model() successfully completed......................................
2025-08-14 09:33:37,806:INFO:Initializing save_model()
2025-08-14 09:33:37,806:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 09:33:37,806:INFO:Adding model into prep_pipe
2025-08-14 09:33:37,806:WARNING:Only Model saved as it was a pipeline.
2025-08-14 09:33:37,809:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 09:33:37,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 09:33:37,811:INFO:save_model() successfully completed......................................
2025-08-14 09:33:37,894:INFO:PyCaret ClusteringExperiment
2025-08-14 09:33:37,894:INFO:Logging name: cluster-default-name
2025-08-14 09:33:37,894:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 09:33:37,894:INFO:version 3.3.2
2025-08-14 09:33:37,894:INFO:Initializing setup()
2025-08-14 09:33:37,894:INFO:self.USI: 3ba5
2025-08-14 09:33:37,894:INFO:self._variable_keys: {'gpu_n_jobs_param', 'USI', 'exp_name_log', 'exp_id', 'idx', 'seed', 'data', '_ml_usecase', 'html_param', 'pipeline', 'gpu_param', '_available_plots', 'n_jobs_param', 'X', 'log_plots_param', 'memory', 'logging_param'}
2025-08-14 09:33:37,894:INFO:Checking environment
2025-08-14 09:33:37,894:INFO:python_version: 3.11.13
2025-08-14 09:33:37,894:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 09:33:37,894:INFO:machine: aarch64
2025-08-14 09:33:37,894:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 09:33:37,894:INFO:Memory: svmem(total=4109803520, available=1241923584, percent=69.8, used=2705833984, free=545071104, active=3031019520, inactive=314290176, buffers=69832704, cached=789065728, shared=1093632, slab=97804288)
2025-08-14 09:33:37,895:INFO:Physical Core: 8
2025-08-14 09:33:37,895:INFO:Logical Core: 8
2025-08-14 09:33:37,895:INFO:Checking libraries
2025-08-14 09:33:37,895:INFO:System:
2025-08-14 09:33:37,895:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 09:33:37,895:INFO:executable: /usr/local/bin/python
2025-08-14 09:33:37,895:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 09:33:37,895:INFO:PyCaret required dependencies:
2025-08-14 09:33:37,895:INFO:                 pip: 24.0
2025-08-14 09:33:37,895:INFO:          setuptools: 80.9.0
2025-08-14 09:33:37,895:INFO:             pycaret: 3.3.2
2025-08-14 09:33:37,895:INFO:             IPython: 9.4.0
2025-08-14 09:33:37,895:INFO:          ipywidgets: 8.1.7
2025-08-14 09:33:37,895:INFO:                tqdm: 4.67.1
2025-08-14 09:33:37,895:INFO:               numpy: 1.26.4
2025-08-14 09:33:37,895:INFO:              pandas: 2.1.4
2025-08-14 09:33:37,895:INFO:              jinja2: 3.1.6
2025-08-14 09:33:37,895:INFO:               scipy: 1.11.4
2025-08-14 09:33:37,895:INFO:              joblib: 1.3.2
2025-08-14 09:33:37,895:INFO:             sklearn: 1.4.2
2025-08-14 09:33:37,895:INFO:                pyod: 2.0.5
2025-08-14 09:33:37,895:INFO:            imblearn: 0.13.0
2025-08-14 09:33:37,895:INFO:   category_encoders: 2.7.0
2025-08-14 09:33:37,895:INFO:            lightgbm: 4.6.0
2025-08-14 09:33:37,895:INFO:               numba: 0.61.0
2025-08-14 09:33:37,896:INFO:            requests: 2.32.4
2025-08-14 09:33:37,896:INFO:          matplotlib: 3.7.5
2025-08-14 09:33:37,896:INFO:          scikitplot: 0.3.7
2025-08-14 09:33:37,896:INFO:         yellowbrick: 1.5
2025-08-14 09:33:37,896:INFO:              plotly: 5.24.1
2025-08-14 09:33:37,896:INFO:    plotly-resampler: Not installed
2025-08-14 09:33:37,896:INFO:             kaleido: 1.0.0
2025-08-14 09:33:37,896:INFO:           schemdraw: 0.15
2025-08-14 09:33:37,896:INFO:         statsmodels: 0.14.5
2025-08-14 09:33:37,896:INFO:              sktime: 0.26.0
2025-08-14 09:33:37,896:INFO:               tbats: 1.1.3
2025-08-14 09:33:37,896:INFO:            pmdarima: 2.0.4
2025-08-14 09:33:37,896:INFO:              psutil: 7.0.0
2025-08-14 09:33:37,896:INFO:          markupsafe: 3.0.2
2025-08-14 09:33:37,896:INFO:             pickle5: Not installed
2025-08-14 09:33:37,896:INFO:         cloudpickle: 3.1.1
2025-08-14 09:33:37,896:INFO:         deprecation: 2.1.0
2025-08-14 09:33:37,896:INFO:              xxhash: 3.5.0
2025-08-14 09:33:37,896:INFO:           wurlitzer: 3.1.1
2025-08-14 09:33:37,896:INFO:PyCaret optional dependencies:
2025-08-14 09:33:37,896:INFO:                shap: 0.44.1
2025-08-14 09:33:37,896:INFO:           interpret: 0.7.2
2025-08-14 09:33:37,896:INFO:                umap: 0.5.7
2025-08-14 09:33:37,896:INFO:     ydata_profiling: 4.16.1
2025-08-14 09:33:37,896:INFO:  explainerdashboard: 0.5.1
2025-08-14 09:33:37,896:INFO:             autoviz: Not installed
2025-08-14 09:33:37,896:INFO:           fairlearn: 0.7.0
2025-08-14 09:33:37,896:INFO:          deepchecks: Not installed
2025-08-14 09:33:37,896:INFO:             xgboost: 3.0.4
2025-08-14 09:33:37,896:INFO:            catboost: 1.2.8
2025-08-14 09:33:37,896:INFO:              kmodes: 0.12.2
2025-08-14 09:33:37,896:INFO:             mlxtend: 0.23.4
2025-08-14 09:33:37,896:INFO:       statsforecast: 1.5.0
2025-08-14 09:33:37,896:INFO:        tune_sklearn: Not installed
2025-08-14 09:33:37,896:INFO:                 ray: Not installed
2025-08-14 09:33:37,896:INFO:            hyperopt: 0.2.7
2025-08-14 09:33:37,896:INFO:              optuna: 4.4.0
2025-08-14 09:33:37,896:INFO:               skopt: 0.10.2
2025-08-14 09:33:37,896:INFO:              mlflow: 3.2.0
2025-08-14 09:33:37,896:INFO:              gradio: 5.42.0
2025-08-14 09:33:37,896:INFO:             fastapi: 0.116.1
2025-08-14 09:33:37,896:INFO:             uvicorn: 0.35.0
2025-08-14 09:33:37,897:INFO:              m2cgen: 0.10.0
2025-08-14 09:33:37,897:INFO:           evidently: 0.4.40
2025-08-14 09:33:37,897:INFO:               fugue: 0.8.7
2025-08-14 09:33:37,897:INFO:           streamlit: 1.48.1
2025-08-14 09:33:37,897:INFO:             prophet: Not installed
2025-08-14 09:33:37,897:INFO:None
2025-08-14 09:33:37,897:INFO:Set up data.
2025-08-14 09:33:37,898:INFO:Set up index.
2025-08-14 09:33:37,898:INFO:Assigning column types.
2025-08-14 09:33:37,899:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 09:33:37,899:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 09:33:37,899:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,901:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 09:33:37,901:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,901:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 09:33:37,901:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,902:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,902:INFO:Preparing preprocessing pipeline...
2025-08-14 09:33:37,902:INFO:Set up simple imputation.
2025-08-14 09:33:37,902:INFO:Set up feature normalization.
2025-08-14 09:33:37,909:INFO:Finished creating preprocessing pipeline.
2025-08-14 09:33:37,910:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 09:33:37,910:INFO:Creating final display dataframe.
2025-08-14 09:33:37,917:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  3ba5
2025-08-14 09:33:37,917:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,917:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 09:33:37,918:INFO:setup() successfully completed in 0.02s...............
2025-08-14 09:33:37,918:INFO:Initializing create_model()
2025-08-14 09:33:37,918:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff25b61ed0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 09:33:37,918:INFO:Checking exceptions
2025-08-14 09:33:37,925:INFO:Importing untrained model
2025-08-14 09:33:37,926:INFO:K-Means Clustering Imported successfully
2025-08-14 09:33:37,926:INFO:Fitting Model
2025-08-14 09:33:38,192:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 09:33:38,192:INFO:create_models() successfully completed......................................
2025-08-14 09:33:38,192:INFO:Uploading results into container
2025-08-14 09:33:38,197:INFO:Uploading model into container now
2025-08-14 09:33:38,203:INFO:_master_model_container: 1
2025-08-14 09:33:38,203:INFO:_display_container: 2
2025-08-14 09:33:38,203:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 09:33:38,203:INFO:create_model() successfully completed......................................
2025-08-14 09:33:38,354:INFO:Initializing assign_model()
2025-08-14 09:33:38,354:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff25b61ed0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 09:33:38,355:INFO:Checking exceptions
2025-08-14 09:33:38,355:INFO:Determining Trained Model
2025-08-14 09:33:38,355:INFO:Trained Model : K-Means Clustering
2025-08-14 09:33:38,355:INFO:Copying data
2025-08-14 09:33:38,356:INFO:(3000, 12)
2025-08-14 09:33:38,356:INFO:assign_model() successfully completed......................................
2025-08-14 09:33:38,358:INFO:Initializing save_model()
2025-08-14 09:33:38,358:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 09:33:38,358:INFO:Adding model into prep_pipe
2025-08-14 09:33:38,361:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 09:33:38,362:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 09:33:38,362:INFO:save_model() successfully completed......................................
2025-08-14 09:33:46,203:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:46,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:46,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:46,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 09:33:47,111:INFO:Initializing load_model()
2025-08-14 09:33:47,111:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 09:33:47,298:INFO:Initializing load_model()
2025-08-14 09:33:47,298:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 09:34:18,616:INFO:Initializing predict_model()
2025-08-14 09:34:18,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff96a8b510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff468f5940>)
2025-08-14 09:34:18,616:INFO:Checking exceptions
2025-08-14 09:34:18,616:INFO:Preloading libraries
2025-08-14 09:34:18,617:INFO:Set up data.
2025-08-14 09:34:18,622:INFO:Set up index.
2025-08-14 09:34:18,627:INFO:Initializing predict_model()
2025-08-14 09:34:18,627:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4686a910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff7495b1a0>)
2025-08-14 09:34:18,627:INFO:Checking exceptions
2025-08-14 09:34:18,627:INFO:Preloading libraries
2025-08-14 09:34:18,628:INFO:Set up data.
2025-08-14 09:34:18,630:INFO:Set up index.
2025-08-14 09:37:28,792:INFO:Initializing predict_model()
2025-08-14 09:37:28,794:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff46864290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff97d76c00>)
2025-08-14 09:37:28,795:INFO:Checking exceptions
2025-08-14 09:37:28,795:INFO:Preloading libraries
2025-08-14 09:37:28,795:INFO:Set up data.
2025-08-14 09:37:28,801:INFO:Set up index.
2025-08-14 09:37:28,808:INFO:Initializing predict_model()
2025-08-14 09:37:28,808:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff45d9e090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4c74ea20>)
2025-08-14 09:37:28,808:INFO:Checking exceptions
2025-08-14 09:37:28,808:INFO:Preloading libraries
2025-08-14 09:37:28,808:INFO:Set up data.
2025-08-14 09:37:28,811:INFO:Set up index.
2025-08-14 09:38:06,114:INFO:Initializing predict_model()
2025-08-14 09:38:06,115:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff46730050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4d5d44a0>)
2025-08-14 09:38:06,115:INFO:Checking exceptions
2025-08-14 09:38:06,115:INFO:Preloading libraries
2025-08-14 09:38:06,116:INFO:Set up data.
2025-08-14 09:38:06,119:INFO:Set up index.
2025-08-14 09:38:06,123:INFO:Initializing predict_model()
2025-08-14 09:38:06,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4d34b090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4c74ea20>)
2025-08-14 09:38:06,123:INFO:Checking exceptions
2025-08-14 09:38:06,123:INFO:Preloading libraries
2025-08-14 09:38:06,123:INFO:Set up data.
2025-08-14 09:38:06,125:INFO:Set up index.
2025-08-14 09:38:12,701:INFO:Initializing predict_model()
2025-08-14 09:38:12,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff45d9e5d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff96a939c0>)
2025-08-14 09:38:12,701:INFO:Checking exceptions
2025-08-14 09:38:12,701:INFO:Preloading libraries
2025-08-14 09:38:12,702:INFO:Set up data.
2025-08-14 09:38:12,708:INFO:Set up index.
2025-08-14 09:38:12,711:INFO:Initializing predict_model()
2025-08-14 09:38:12,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff468687d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff45f29c60>)
2025-08-14 09:38:12,712:INFO:Checking exceptions
2025-08-14 09:38:12,712:INFO:Preloading libraries
2025-08-14 09:38:12,712:INFO:Set up data.
2025-08-14 09:38:12,713:INFO:Set up index.
2025-08-14 09:38:19,761:INFO:Initializing predict_model()
2025-08-14 09:38:19,762:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff45dd78d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff97d76c00>)
2025-08-14 09:38:19,763:INFO:Checking exceptions
2025-08-14 09:38:19,763:INFO:Preloading libraries
2025-08-14 09:38:19,763:INFO:Set up data.
2025-08-14 09:38:19,768:INFO:Set up index.
2025-08-14 09:38:19,775:INFO:Initializing predict_model()
2025-08-14 09:38:19,775:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4686a490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff96a93880>)
2025-08-14 09:38:19,775:INFO:Checking exceptions
2025-08-14 09:38:19,776:INFO:Preloading libraries
2025-08-14 09:38:19,776:INFO:Set up data.
2025-08-14 09:38:19,779:INFO:Set up index.
2025-08-14 09:38:24,492:INFO:Initializing predict_model()
2025-08-14 09:38:24,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff46731b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff96a93ec0>)
2025-08-14 09:38:24,493:INFO:Checking exceptions
2025-08-14 09:38:24,493:INFO:Preloading libraries
2025-08-14 09:38:24,494:INFO:Set up data.
2025-08-14 09:38:24,499:INFO:Set up index.
2025-08-14 09:38:24,507:INFO:Initializing predict_model()
2025-08-14 09:38:24,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff45ddc310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff96a9c680>)
2025-08-14 09:38:24,507:INFO:Checking exceptions
2025-08-14 09:38:24,507:INFO:Preloading libraries
2025-08-14 09:38:24,508:INFO:Set up data.
2025-08-14 09:38:24,511:INFO:Set up index.
2025-08-14 10:01:38,286:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:01:38,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:01:38,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:01:38,287:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:01:38,724:INFO:PyCaret ClassificationExperiment
2025-08-14 10:01:38,724:INFO:Logging name: clf-default-name
2025-08-14 10:01:38,724:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 10:01:38,724:INFO:version 3.3.2
2025-08-14 10:01:38,724:INFO:Initializing setup()
2025-08-14 10:01:38,724:INFO:self.USI: bc3d
2025-08-14 10:01:38,724:INFO:self._variable_keys: {'is_multiclass', 'exp_name_log', 'memory', 'logging_param', 'X_train', 'X_test', '_available_plots', 'fold_groups_param', 'y_test', 'y', 'n_jobs_param', 'exp_id', 'USI', 'log_plots_param', '_ml_usecase', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance', 'X', 'seed', 'html_param', 'y_train', 'pipeline', 'gpu_n_jobs_param', 'data', 'gpu_param', 'target_param', 'idx'}
2025-08-14 10:01:38,724:INFO:Checking environment
2025-08-14 10:01:38,724:INFO:python_version: 3.11.13
2025-08-14 10:01:38,724:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:01:38,724:INFO:machine: aarch64
2025-08-14 10:01:38,724:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:01:38,724:INFO:Memory: svmem(total=4109803520, available=3107909632, percent=24.4, used=838660096, free=2409086976, active=1214558208, inactive=315015168, buffers=70168576, cached=791887872, shared=1036288, slab=95371264)
2025-08-14 10:01:38,724:INFO:Physical Core: 8
2025-08-14 10:01:38,724:INFO:Logical Core: 8
2025-08-14 10:01:38,724:INFO:Checking libraries
2025-08-14 10:01:38,724:INFO:System:
2025-08-14 10:01:38,725:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:01:38,725:INFO:executable: /usr/local/bin/python
2025-08-14 10:01:38,725:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:01:38,725:INFO:PyCaret required dependencies:
2025-08-14 10:01:38,950:INFO:                 pip: 24.0
2025-08-14 10:01:38,950:INFO:          setuptools: 80.9.0
2025-08-14 10:01:38,950:INFO:             pycaret: 3.3.2
2025-08-14 10:01:38,950:INFO:             IPython: 9.4.0
2025-08-14 10:01:38,950:INFO:          ipywidgets: 8.1.7
2025-08-14 10:01:38,950:INFO:                tqdm: 4.67.1
2025-08-14 10:01:38,950:INFO:               numpy: 1.26.4
2025-08-14 10:01:38,950:INFO:              pandas: 2.1.4
2025-08-14 10:01:38,950:INFO:              jinja2: 3.1.6
2025-08-14 10:01:38,950:INFO:               scipy: 1.11.4
2025-08-14 10:01:38,950:INFO:              joblib: 1.3.2
2025-08-14 10:01:38,950:INFO:             sklearn: 1.4.2
2025-08-14 10:01:38,950:INFO:                pyod: 2.0.5
2025-08-14 10:01:38,951:INFO:            imblearn: 0.13.0
2025-08-14 10:01:38,951:INFO:   category_encoders: 2.7.0
2025-08-14 10:01:38,951:INFO:            lightgbm: 4.6.0
2025-08-14 10:01:38,951:INFO:               numba: 0.61.0
2025-08-14 10:01:38,951:INFO:            requests: 2.32.4
2025-08-14 10:01:38,951:INFO:          matplotlib: 3.7.5
2025-08-14 10:01:38,951:INFO:          scikitplot: 0.3.7
2025-08-14 10:01:38,951:INFO:         yellowbrick: 1.5
2025-08-14 10:01:38,951:INFO:              plotly: 5.24.1
2025-08-14 10:01:38,951:INFO:    plotly-resampler: Not installed
2025-08-14 10:01:38,951:INFO:             kaleido: 1.0.0
2025-08-14 10:01:38,951:INFO:           schemdraw: 0.15
2025-08-14 10:01:38,951:INFO:         statsmodels: 0.14.5
2025-08-14 10:01:38,951:INFO:              sktime: 0.26.0
2025-08-14 10:01:38,951:INFO:               tbats: 1.1.3
2025-08-14 10:01:38,951:INFO:            pmdarima: 2.0.4
2025-08-14 10:01:38,951:INFO:              psutil: 7.0.0
2025-08-14 10:01:38,951:INFO:          markupsafe: 3.0.2
2025-08-14 10:01:38,951:INFO:             pickle5: Not installed
2025-08-14 10:01:38,951:INFO:         cloudpickle: 3.1.1
2025-08-14 10:01:38,951:INFO:         deprecation: 2.1.0
2025-08-14 10:01:38,951:INFO:              xxhash: 3.5.0
2025-08-14 10:01:38,951:INFO:           wurlitzer: 3.1.1
2025-08-14 10:01:38,951:INFO:PyCaret optional dependencies:
2025-08-14 10:01:39,895:INFO:                shap: 0.44.1
2025-08-14 10:01:39,895:INFO:           interpret: 0.7.2
2025-08-14 10:01:39,895:INFO:                umap: 0.5.7
2025-08-14 10:01:39,895:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:01:39,896:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:01:39,896:INFO:             autoviz: Not installed
2025-08-14 10:01:39,896:INFO:           fairlearn: 0.7.0
2025-08-14 10:01:39,896:INFO:          deepchecks: Not installed
2025-08-14 10:01:39,896:INFO:             xgboost: 3.0.4
2025-08-14 10:01:39,896:INFO:            catboost: 1.2.8
2025-08-14 10:01:39,896:INFO:              kmodes: 0.12.2
2025-08-14 10:01:39,896:INFO:             mlxtend: 0.23.4
2025-08-14 10:01:39,896:INFO:       statsforecast: 1.5.0
2025-08-14 10:01:39,896:INFO:        tune_sklearn: Not installed
2025-08-14 10:01:39,896:INFO:                 ray: Not installed
2025-08-14 10:01:39,896:INFO:            hyperopt: 0.2.7
2025-08-14 10:01:39,896:INFO:              optuna: 4.4.0
2025-08-14 10:01:39,896:INFO:               skopt: 0.10.2
2025-08-14 10:01:39,896:INFO:              mlflow: 3.2.0
2025-08-14 10:01:39,896:INFO:              gradio: 5.42.0
2025-08-14 10:01:39,896:INFO:             fastapi: 0.116.1
2025-08-14 10:01:39,896:INFO:             uvicorn: 0.35.0
2025-08-14 10:01:39,896:INFO:              m2cgen: 0.10.0
2025-08-14 10:01:39,896:INFO:           evidently: 0.4.40
2025-08-14 10:01:39,896:INFO:               fugue: 0.8.7
2025-08-14 10:01:39,896:INFO:           streamlit: 1.48.1
2025-08-14 10:01:39,896:INFO:             prophet: Not installed
2025-08-14 10:01:39,896:INFO:None
2025-08-14 10:01:39,896:INFO:Set up data.
2025-08-14 10:01:39,899:INFO:Set up folding strategy.
2025-08-14 10:01:39,899:INFO:Set up train/test split.
2025-08-14 10:01:39,902:INFO:Set up index.
2025-08-14 10:01:39,902:INFO:Assigning column types.
2025-08-14 10:01:39,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 10:01:39,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:01:39,918:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:01:39,928:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:39,929:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:39,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:01:39,954:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:01:39,963:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:39,964:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:39,964:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 10:01:39,979:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:01:39,988:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:39,989:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:01:40,012:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:40,013:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,013:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 10:01:40,035:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:40,036:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,058:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:40,059:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,060:INFO:Preparing preprocessing pipeline...
2025-08-14 10:01:40,060:INFO:Set up label encoding.
2025-08-14 10:01:40,060:INFO:Set up simple imputation.
2025-08-14 10:01:40,062:INFO:Set up encoding of categorical features.
2025-08-14 10:01:40,062:INFO:Set up feature normalization.
2025-08-14 10:01:40,081:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:01:40,083:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:01:40,083:INFO:Creating final display dataframe.
2025-08-14 10:01:40,133:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     bc3d
2025-08-14 10:01:40,155:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:40,156:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,179:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:01:40,180:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:01:40,180:INFO:setup() successfully completed in 1.46s...............
2025-08-14 10:01:40,180:INFO:Initializing compare_models()
2025-08-14 10:01:40,180:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 10:01:40,180:INFO:Checking exceptions
2025-08-14 10:01:40,181:INFO:Preparing display monitor
2025-08-14 10:01:40,182:INFO:Initializing Logistic Regression
2025-08-14 10:01:40,182:INFO:Total runtime is 1.0848045349121093e-06 minutes
2025-08-14 10:01:40,182:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:40,183:INFO:Initializing create_model()
2025-08-14 10:01:40,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:40,183:INFO:Checking exceptions
2025-08-14 10:01:40,183:INFO:Importing libraries
2025-08-14 10:01:40,183:INFO:Copying training dataset
2025-08-14 10:01:40,184:INFO:Defining folds
2025-08-14 10:01:40,184:INFO:Declaring metric variables
2025-08-14 10:01:40,184:INFO:Importing untrained model
2025-08-14 10:01:40,185:INFO:Logistic Regression Imported successfully
2025-08-14 10:01:40,185:INFO:Starting cross validation
2025-08-14 10:01:40,185:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:41,469:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,475:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,477:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,479:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,480:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,481:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,483:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,483:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,485:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,491:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,502:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,519:INFO:Calculating mean and std
2025-08-14 10:01:41,522:INFO:Creating metrics dataframe
2025-08-14 10:01:41,532:INFO:Uploading results into container
2025-08-14 10:01:41,536:INFO:Uploading model into container now
2025-08-14 10:01:41,538:INFO:_master_model_container: 1
2025-08-14 10:01:41,538:INFO:_display_container: 2
2025-08-14 10:01:41,540:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:01:41,540:INFO:create_model() successfully completed......................................
2025-08-14 10:01:41,783:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:41,783:INFO:Creating metrics dataframe
2025-08-14 10:01:41,784:INFO:Initializing K Neighbors Classifier
2025-08-14 10:01:41,784:INFO:Total runtime is 0.026701927185058594 minutes
2025-08-14 10:01:41,784:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:41,785:INFO:Initializing create_model()
2025-08-14 10:01:41,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:41,785:INFO:Checking exceptions
2025-08-14 10:01:41,785:INFO:Importing libraries
2025-08-14 10:01:41,785:INFO:Copying training dataset
2025-08-14 10:01:41,787:INFO:Defining folds
2025-08-14 10:01:41,787:INFO:Declaring metric variables
2025-08-14 10:01:41,787:INFO:Importing untrained model
2025-08-14 10:01:41,787:INFO:K Neighbors Classifier Imported successfully
2025-08-14 10:01:41,788:INFO:Starting cross validation
2025-08-14 10:01:41,788:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:41,921:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,924:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,927:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,930:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,935:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:41,938:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,844:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,845:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,847:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,847:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,850:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,858:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,861:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:42,874:INFO:Calculating mean and std
2025-08-14 10:01:42,875:INFO:Creating metrics dataframe
2025-08-14 10:01:42,879:INFO:Uploading results into container
2025-08-14 10:01:42,879:INFO:Uploading model into container now
2025-08-14 10:01:42,880:INFO:_master_model_container: 2
2025-08-14 10:01:42,880:INFO:_display_container: 2
2025-08-14 10:01:42,880:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 10:01:42,880:INFO:create_model() successfully completed......................................
2025-08-14 10:01:42,963:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:42,963:INFO:Creating metrics dataframe
2025-08-14 10:01:42,964:INFO:Initializing Naive Bayes
2025-08-14 10:01:42,964:INFO:Total runtime is 0.04636699358622233 minutes
2025-08-14 10:01:42,964:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:42,964:INFO:Initializing create_model()
2025-08-14 10:01:42,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:42,965:INFO:Checking exceptions
2025-08-14 10:01:42,965:INFO:Importing libraries
2025-08-14 10:01:42,965:INFO:Copying training dataset
2025-08-14 10:01:42,966:INFO:Defining folds
2025-08-14 10:01:42,966:INFO:Declaring metric variables
2025-08-14 10:01:42,967:INFO:Importing untrained model
2025-08-14 10:01:42,967:INFO:Naive Bayes Imported successfully
2025-08-14 10:01:42,967:INFO:Starting cross validation
2025-08-14 10:01:42,967:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,043:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,046:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,047:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,048:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,050:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,052:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,053:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,055:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,055:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,055:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,072:INFO:Calculating mean and std
2025-08-14 10:01:43,072:INFO:Creating metrics dataframe
2025-08-14 10:01:43,073:INFO:Uploading results into container
2025-08-14 10:01:43,073:INFO:Uploading model into container now
2025-08-14 10:01:43,074:INFO:_master_model_container: 3
2025-08-14 10:01:43,074:INFO:_display_container: 2
2025-08-14 10:01:43,074:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 10:01:43,074:INFO:create_model() successfully completed......................................
2025-08-14 10:01:43,158:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:43,158:INFO:Creating metrics dataframe
2025-08-14 10:01:43,159:INFO:Initializing Decision Tree Classifier
2025-08-14 10:01:43,159:INFO:Total runtime is 0.04961118698120117 minutes
2025-08-14 10:01:43,159:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:43,159:INFO:Initializing create_model()
2025-08-14 10:01:43,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:43,159:INFO:Checking exceptions
2025-08-14 10:01:43,159:INFO:Importing libraries
2025-08-14 10:01:43,159:INFO:Copying training dataset
2025-08-14 10:01:43,161:INFO:Defining folds
2025-08-14 10:01:43,161:INFO:Declaring metric variables
2025-08-14 10:01:43,161:INFO:Importing untrained model
2025-08-14 10:01:43,161:INFO:Decision Tree Classifier Imported successfully
2025-08-14 10:01:43,161:INFO:Starting cross validation
2025-08-14 10:01:43,162:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,190:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,194:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,194:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,195:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,196:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,199:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,200:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,200:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,200:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,203:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,213:INFO:Calculating mean and std
2025-08-14 10:01:43,213:INFO:Creating metrics dataframe
2025-08-14 10:01:43,214:INFO:Uploading results into container
2025-08-14 10:01:43,214:INFO:Uploading model into container now
2025-08-14 10:01:43,215:INFO:_master_model_container: 4
2025-08-14 10:01:43,215:INFO:_display_container: 2
2025-08-14 10:01:43,215:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 10:01:43,215:INFO:create_model() successfully completed......................................
2025-08-14 10:01:43,288:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:43,288:INFO:Creating metrics dataframe
2025-08-14 10:01:43,289:INFO:Initializing SVM - Linear Kernel
2025-08-14 10:01:43,289:INFO:Total runtime is 0.05177786747614543 minutes
2025-08-14 10:01:43,289:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:43,289:INFO:Initializing create_model()
2025-08-14 10:01:43,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:43,289:INFO:Checking exceptions
2025-08-14 10:01:43,289:INFO:Importing libraries
2025-08-14 10:01:43,289:INFO:Copying training dataset
2025-08-14 10:01:43,291:INFO:Defining folds
2025-08-14 10:01:43,291:INFO:Declaring metric variables
2025-08-14 10:01:43,291:INFO:Importing untrained model
2025-08-14 10:01:43,291:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 10:01:43,291:INFO:Starting cross validation
2025-08-14 10:01:43,292:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,353:INFO:Calculating mean and std
2025-08-14 10:01:43,353:INFO:Creating metrics dataframe
2025-08-14 10:01:43,354:INFO:Uploading results into container
2025-08-14 10:01:43,354:INFO:Uploading model into container now
2025-08-14 10:01:43,354:INFO:_master_model_container: 5
2025-08-14 10:01:43,354:INFO:_display_container: 2
2025-08-14 10:01:43,355:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 10:01:43,355:INFO:create_model() successfully completed......................................
2025-08-14 10:01:43,495:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:43,495:INFO:Creating metrics dataframe
2025-08-14 10:01:43,497:INFO:Initializing Ridge Classifier
2025-08-14 10:01:43,497:INFO:Total runtime is 0.055244934558868405 minutes
2025-08-14 10:01:43,497:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:43,497:INFO:Initializing create_model()
2025-08-14 10:01:43,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:43,497:INFO:Checking exceptions
2025-08-14 10:01:43,497:INFO:Importing libraries
2025-08-14 10:01:43,497:INFO:Copying training dataset
2025-08-14 10:01:43,500:INFO:Defining folds
2025-08-14 10:01:43,500:INFO:Declaring metric variables
2025-08-14 10:01:43,500:INFO:Importing untrained model
2025-08-14 10:01:43,500:INFO:Ridge Classifier Imported successfully
2025-08-14 10:01:43,500:INFO:Starting cross validation
2025-08-14 10:01:43,501:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,558:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,565:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,565:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,567:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,567:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,568:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,569:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,570:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,571:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,572:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,573:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,573:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,574:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,576:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,579:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,587:INFO:Calculating mean and std
2025-08-14 10:01:43,587:INFO:Creating metrics dataframe
2025-08-14 10:01:43,588:INFO:Uploading results into container
2025-08-14 10:01:43,588:INFO:Uploading model into container now
2025-08-14 10:01:43,588:INFO:_master_model_container: 6
2025-08-14 10:01:43,588:INFO:_display_container: 2
2025-08-14 10:01:43,589:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 10:01:43,589:INFO:create_model() successfully completed......................................
2025-08-14 10:01:43,671:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:43,671:INFO:Creating metrics dataframe
2025-08-14 10:01:43,672:INFO:Initializing Random Forest Classifier
2025-08-14 10:01:43,672:INFO:Total runtime is 0.058166003227233885 minutes
2025-08-14 10:01:43,672:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:43,672:INFO:Initializing create_model()
2025-08-14 10:01:43,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:43,672:INFO:Checking exceptions
2025-08-14 10:01:43,672:INFO:Importing libraries
2025-08-14 10:01:43,672:INFO:Copying training dataset
2025-08-14 10:01:43,674:INFO:Defining folds
2025-08-14 10:01:43,674:INFO:Declaring metric variables
2025-08-14 10:01:43,674:INFO:Importing untrained model
2025-08-14 10:01:43,675:INFO:Random Forest Classifier Imported successfully
2025-08-14 10:01:43,675:INFO:Starting cross validation
2025-08-14 10:01:43,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,869:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,870:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,871:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,875:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,876:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,876:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,876:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,879:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,883:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,885:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,886:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:43,890:INFO:Calculating mean and std
2025-08-14 10:01:43,891:INFO:Creating metrics dataframe
2025-08-14 10:01:43,891:INFO:Uploading results into container
2025-08-14 10:01:43,892:INFO:Uploading model into container now
2025-08-14 10:01:43,892:INFO:_master_model_container: 7
2025-08-14 10:01:43,892:INFO:_display_container: 2
2025-08-14 10:01:43,892:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 10:01:43,892:INFO:create_model() successfully completed......................................
2025-08-14 10:01:43,967:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:43,967:INFO:Creating metrics dataframe
2025-08-14 10:01:43,968:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 10:01:43,968:INFO:Total runtime is 0.06309479872385661 minutes
2025-08-14 10:01:43,968:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:43,968:INFO:Initializing create_model()
2025-08-14 10:01:43,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:43,968:INFO:Checking exceptions
2025-08-14 10:01:43,968:INFO:Importing libraries
2025-08-14 10:01:43,968:INFO:Copying training dataset
2025-08-14 10:01:43,970:INFO:Defining folds
2025-08-14 10:01:43,970:INFO:Declaring metric variables
2025-08-14 10:01:43,970:INFO:Importing untrained model
2025-08-14 10:01:43,970:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 10:01:43,970:INFO:Starting cross validation
2025-08-14 10:01:43,971:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:43,996:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:01:44,000:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:01:44,000:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:01:44,002:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:01:44,004:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:01:44,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:01:44,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:01:44,006:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:01:44,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:01:44,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:01:44,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:01:44,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,013:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 10:01:44,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,016:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,017:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,017:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,020:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,020:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,020:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,023:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:44,024:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,034:INFO:Calculating mean and std
2025-08-14 10:01:44,034:INFO:Creating metrics dataframe
2025-08-14 10:01:44,035:INFO:Uploading results into container
2025-08-14 10:01:44,035:INFO:Uploading model into container now
2025-08-14 10:01:44,035:INFO:_master_model_container: 8
2025-08-14 10:01:44,035:INFO:_display_container: 2
2025-08-14 10:01:44,036:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 10:01:44,036:INFO:create_model() successfully completed......................................
2025-08-14 10:01:44,109:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:44,109:INFO:Creating metrics dataframe
2025-08-14 10:01:44,110:INFO:Initializing Ada Boost Classifier
2025-08-14 10:01:44,110:INFO:Total runtime is 0.06546308994293212 minutes
2025-08-14 10:01:44,110:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:44,110:INFO:Initializing create_model()
2025-08-14 10:01:44,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:44,110:INFO:Checking exceptions
2025-08-14 10:01:44,110:INFO:Importing libraries
2025-08-14 10:01:44,110:INFO:Copying training dataset
2025-08-14 10:01:44,112:INFO:Defining folds
2025-08-14 10:01:44,112:INFO:Declaring metric variables
2025-08-14 10:01:44,112:INFO:Importing untrained model
2025-08-14 10:01:44,112:INFO:Ada Boost Classifier Imported successfully
2025-08-14 10:01:44,112:INFO:Starting cross validation
2025-08-14 10:01:44,113:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:44,133:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:01:44,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:01:44,134:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:01:44,136:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:01:44,141:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:01:44,146:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,146:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,147:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,149:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,149:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,150:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,150:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,152:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,153:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,155:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,155:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,155:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,159:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,159:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,162:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,174:INFO:Calculating mean and std
2025-08-14 10:01:44,174:INFO:Creating metrics dataframe
2025-08-14 10:01:44,175:INFO:Uploading results into container
2025-08-14 10:01:44,175:INFO:Uploading model into container now
2025-08-14 10:01:44,175:INFO:_master_model_container: 9
2025-08-14 10:01:44,176:INFO:_display_container: 2
2025-08-14 10:01:44,176:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 10:01:44,176:INFO:create_model() successfully completed......................................
2025-08-14 10:01:44,243:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:44,243:INFO:Creating metrics dataframe
2025-08-14 10:01:44,244:INFO:Initializing Gradient Boosting Classifier
2025-08-14 10:01:44,244:INFO:Total runtime is 0.06769824822743734 minutes
2025-08-14 10:01:44,244:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:44,244:INFO:Initializing create_model()
2025-08-14 10:01:44,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:44,244:INFO:Checking exceptions
2025-08-14 10:01:44,244:INFO:Importing libraries
2025-08-14 10:01:44,244:INFO:Copying training dataset
2025-08-14 10:01:44,246:INFO:Defining folds
2025-08-14 10:01:44,246:INFO:Declaring metric variables
2025-08-14 10:01:44,246:INFO:Importing untrained model
2025-08-14 10:01:44,246:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 10:01:44,247:INFO:Starting cross validation
2025-08-14 10:01:44,247:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:44,380:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,385:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,389:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,391:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,393:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,393:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,395:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,398:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,399:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,400:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,400:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,402:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,405:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,408:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,421:INFO:Calculating mean and std
2025-08-14 10:01:44,421:INFO:Creating metrics dataframe
2025-08-14 10:01:44,422:INFO:Uploading results into container
2025-08-14 10:01:44,422:INFO:Uploading model into container now
2025-08-14 10:01:44,423:INFO:_master_model_container: 10
2025-08-14 10:01:44,423:INFO:_display_container: 2
2025-08-14 10:01:44,423:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 10:01:44,423:INFO:create_model() successfully completed......................................
2025-08-14 10:01:44,496:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:44,496:INFO:Creating metrics dataframe
2025-08-14 10:01:44,497:INFO:Initializing Linear Discriminant Analysis
2025-08-14 10:01:44,497:INFO:Total runtime is 0.07191047271092732 minutes
2025-08-14 10:01:44,497:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:44,497:INFO:Initializing create_model()
2025-08-14 10:01:44,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:44,497:INFO:Checking exceptions
2025-08-14 10:01:44,497:INFO:Importing libraries
2025-08-14 10:01:44,497:INFO:Copying training dataset
2025-08-14 10:01:44,499:INFO:Defining folds
2025-08-14 10:01:44,499:INFO:Declaring metric variables
2025-08-14 10:01:44,499:INFO:Importing untrained model
2025-08-14 10:01:44,499:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 10:01:44,499:INFO:Starting cross validation
2025-08-14 10:01:44,500:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:44,544:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,544:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,546:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,551:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,553:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,554:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,554:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,561:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,576:INFO:Calculating mean and std
2025-08-14 10:01:44,576:INFO:Creating metrics dataframe
2025-08-14 10:01:44,577:INFO:Uploading results into container
2025-08-14 10:01:44,577:INFO:Uploading model into container now
2025-08-14 10:01:44,577:INFO:_master_model_container: 11
2025-08-14 10:01:44,577:INFO:_display_container: 2
2025-08-14 10:01:44,577:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 10:01:44,577:INFO:create_model() successfully completed......................................
2025-08-14 10:01:44,644:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:44,644:INFO:Creating metrics dataframe
2025-08-14 10:01:44,645:INFO:Initializing Extra Trees Classifier
2025-08-14 10:01:44,646:INFO:Total runtime is 0.07438848813374836 minutes
2025-08-14 10:01:44,646:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:44,646:INFO:Initializing create_model()
2025-08-14 10:01:44,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:44,646:INFO:Checking exceptions
2025-08-14 10:01:44,646:INFO:Importing libraries
2025-08-14 10:01:44,646:INFO:Copying training dataset
2025-08-14 10:01:44,648:INFO:Defining folds
2025-08-14 10:01:44,648:INFO:Declaring metric variables
2025-08-14 10:01:44,648:INFO:Importing untrained model
2025-08-14 10:01:44,648:INFO:Extra Trees Classifier Imported successfully
2025-08-14 10:01:44,648:INFO:Starting cross validation
2025-08-14 10:01:44,648:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:44,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,792:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,793:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,793:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,794:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,795:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,798:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,799:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,800:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,801:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,816:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,818:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,821:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,830:INFO:Calculating mean and std
2025-08-14 10:01:44,831:INFO:Creating metrics dataframe
2025-08-14 10:01:44,831:INFO:Uploading results into container
2025-08-14 10:01:44,832:INFO:Uploading model into container now
2025-08-14 10:01:44,832:INFO:_master_model_container: 12
2025-08-14 10:01:44,832:INFO:_display_container: 2
2025-08-14 10:01:44,832:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 10:01:44,832:INFO:create_model() successfully completed......................................
2025-08-14 10:01:44,899:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:44,899:INFO:Creating metrics dataframe
2025-08-14 10:01:44,900:INFO:Initializing Extreme Gradient Boosting
2025-08-14 10:01:44,900:INFO:Total runtime is 0.0786304235458374 minutes
2025-08-14 10:01:44,900:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:44,900:INFO:Initializing create_model()
2025-08-14 10:01:44,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:44,900:INFO:Checking exceptions
2025-08-14 10:01:44,900:INFO:Importing libraries
2025-08-14 10:01:44,900:INFO:Copying training dataset
2025-08-14 10:01:44,902:INFO:Defining folds
2025-08-14 10:01:44,902:INFO:Declaring metric variables
2025-08-14 10:01:44,902:INFO:Importing untrained model
2025-08-14 10:01:44,902:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 10:01:44,903:INFO:Starting cross validation
2025-08-14 10:01:44,903:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:44,971:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,971:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,975:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,976:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,977:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,978:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,979:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,979:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,980:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,980:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,981:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,982:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,983:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,985:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,986:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:44,997:INFO:Calculating mean and std
2025-08-14 10:01:44,997:INFO:Creating metrics dataframe
2025-08-14 10:01:44,999:INFO:Uploading results into container
2025-08-14 10:01:45,000:INFO:Uploading model into container now
2025-08-14 10:01:45,000:INFO:_master_model_container: 13
2025-08-14 10:01:45,000:INFO:_display_container: 2
2025-08-14 10:01:45,000:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 10:01:45,000:INFO:create_model() successfully completed......................................
2025-08-14 10:01:45,079:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:45,079:INFO:Creating metrics dataframe
2025-08-14 10:01:45,080:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 10:01:45,080:INFO:Total runtime is 0.08163513739903767 minutes
2025-08-14 10:01:45,080:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:45,081:INFO:Initializing create_model()
2025-08-14 10:01:45,081:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:45,081:INFO:Checking exceptions
2025-08-14 10:01:45,081:INFO:Importing libraries
2025-08-14 10:01:45,081:INFO:Copying training dataset
2025-08-14 10:01:45,082:INFO:Defining folds
2025-08-14 10:01:45,082:INFO:Declaring metric variables
2025-08-14 10:01:45,082:INFO:Importing untrained model
2025-08-14 10:01:45,083:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 10:01:45,083:INFO:Starting cross validation
2025-08-14 10:01:45,083:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:47,868:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:47,872:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:47,877:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:47,894:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:47,901:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:47,908:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,037:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,041:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,043:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,077:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,080:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,083:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:48,090:INFO:Calculating mean and std
2025-08-14 10:01:48,091:INFO:Creating metrics dataframe
2025-08-14 10:01:48,093:INFO:Uploading results into container
2025-08-14 10:01:48,093:INFO:Uploading model into container now
2025-08-14 10:01:48,093:INFO:_master_model_container: 14
2025-08-14 10:01:48,093:INFO:_display_container: 2
2025-08-14 10:01:48,094:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 10:01:48,094:INFO:create_model() successfully completed......................................
2025-08-14 10:01:48,220:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:48,220:INFO:Creating metrics dataframe
2025-08-14 10:01:48,221:INFO:Initializing CatBoost Classifier
2025-08-14 10:01:48,222:INFO:Total runtime is 0.13398866256078085 minutes
2025-08-14 10:01:48,222:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:48,222:INFO:Initializing create_model()
2025-08-14 10:01:48,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:48,222:INFO:Checking exceptions
2025-08-14 10:01:48,222:INFO:Importing libraries
2025-08-14 10:01:48,222:INFO:Copying training dataset
2025-08-14 10:01:48,224:INFO:Defining folds
2025-08-14 10:01:48,224:INFO:Declaring metric variables
2025-08-14 10:01:48,224:INFO:Importing untrained model
2025-08-14 10:01:48,225:INFO:CatBoost Classifier Imported successfully
2025-08-14 10:01:48,225:INFO:Starting cross validation
2025-08-14 10:01:48,225:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:53,413:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,418:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,422:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,450:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,453:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,462:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,479:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,485:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,489:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,514:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,520:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,523:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,560:INFO:Calculating mean and std
2025-08-14 10:01:53,561:INFO:Creating metrics dataframe
2025-08-14 10:01:53,567:INFO:Uploading results into container
2025-08-14 10:01:53,567:INFO:Uploading model into container now
2025-08-14 10:01:53,568:INFO:_master_model_container: 15
2025-08-14 10:01:53,568:INFO:_display_container: 2
2025-08-14 10:01:53,568:INFO:<catboost.core.CatBoostClassifier object at 0xffff3cd9dcd0>
2025-08-14 10:01:53,568:INFO:create_model() successfully completed......................................
2025-08-14 10:01:53,762:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:53,762:INFO:Creating metrics dataframe
2025-08-14 10:01:53,763:INFO:Initializing Dummy Classifier
2025-08-14 10:01:53,763:INFO:Total runtime is 0.22635364135106406 minutes
2025-08-14 10:01:53,764:INFO:SubProcess create_model() called ==================================
2025-08-14 10:01:53,764:INFO:Initializing create_model()
2025-08-14 10:01:53,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff3da027d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:53,764:INFO:Checking exceptions
2025-08-14 10:01:53,764:INFO:Importing libraries
2025-08-14 10:01:53,764:INFO:Copying training dataset
2025-08-14 10:01:53,766:INFO:Defining folds
2025-08-14 10:01:53,766:INFO:Declaring metric variables
2025-08-14 10:01:53,766:INFO:Importing untrained model
2025-08-14 10:01:53,766:INFO:Dummy Classifier Imported successfully
2025-08-14 10:01:53,766:INFO:Starting cross validation
2025-08-14 10:01:53,767:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:01:53,834:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,836:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,838:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,840:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,840:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,841:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:53,843:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:53,843:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,842:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,844:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,845:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,846:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,847:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,848:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:53,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:53,850:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,851:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,851:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,852:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:01:53,854:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:01:53,866:INFO:Calculating mean and std
2025-08-14 10:01:53,866:INFO:Creating metrics dataframe
2025-08-14 10:01:53,867:INFO:Uploading results into container
2025-08-14 10:01:53,867:INFO:Uploading model into container now
2025-08-14 10:01:53,867:INFO:_master_model_container: 16
2025-08-14 10:01:53,867:INFO:_display_container: 2
2025-08-14 10:01:53,867:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 10:01:53,868:INFO:create_model() successfully completed......................................
2025-08-14 10:01:53,933:INFO:SubProcess create_model() end ==================================
2025-08-14 10:01:53,933:INFO:Creating metrics dataframe
2025-08-14 10:01:53,934:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 10:01:53,935:INFO:Initializing create_model()
2025-08-14 10:01:53,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:53,935:INFO:Checking exceptions
2025-08-14 10:01:53,935:INFO:Importing libraries
2025-08-14 10:01:53,935:INFO:Copying training dataset
2025-08-14 10:01:53,937:INFO:Defining folds
2025-08-14 10:01:53,937:INFO:Declaring metric variables
2025-08-14 10:01:53,937:INFO:Importing untrained model
2025-08-14 10:01:53,937:INFO:Declaring custom model
2025-08-14 10:01:53,937:INFO:Logistic Regression Imported successfully
2025-08-14 10:01:53,938:INFO:Cross validation set to False
2025-08-14 10:01:53,938:INFO:Fitting Model
2025-08-14 10:01:53,957:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:01:53,957:INFO:create_model() successfully completed......................................
2025-08-14 10:01:54,060:INFO:_master_model_container: 16
2025-08-14 10:01:54,060:INFO:_display_container: 2
2025-08-14 10:01:54,060:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:01:54,060:INFO:compare_models() successfully completed......................................
2025-08-14 10:01:54,061:INFO:Initializing finalize_model()
2025-08-14 10:01:54,061:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 10:01:54,061:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:01:54,062:INFO:Initializing create_model()
2025-08-14 10:01:54,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a7d090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:01:54,062:INFO:Checking exceptions
2025-08-14 10:01:54,062:INFO:Importing libraries
2025-08-14 10:01:54,062:INFO:Copying training dataset
2025-08-14 10:01:54,062:INFO:Defining folds
2025-08-14 10:01:54,062:INFO:Declaring metric variables
2025-08-14 10:01:54,063:INFO:Importing untrained model
2025-08-14 10:01:54,063:INFO:Declaring custom model
2025-08-14 10:01:54,063:INFO:Logistic Regression Imported successfully
2025-08-14 10:01:54,063:INFO:Cross validation set to False
2025-08-14 10:01:54,063:INFO:Fitting Model
2025-08-14 10:01:54,084:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:01:54,084:INFO:create_model() successfully completed......................................
2025-08-14 10:01:54,177:INFO:_master_model_container: 16
2025-08-14 10:01:54,177:INFO:_display_container: 2
2025-08-14 10:01:54,179:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:01:54,179:INFO:finalize_model() successfully completed......................................
2025-08-14 10:01:54,243:INFO:Initializing save_model()
2025-08-14 10:01:54,243:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 10:01:54,243:INFO:Adding model into prep_pipe
2025-08-14 10:01:54,243:WARNING:Only Model saved as it was a pipeline.
2025-08-14 10:01:54,246:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 10:01:54,248:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:01:54,248:INFO:save_model() successfully completed......................................
2025-08-14 10:01:54,317:INFO:PyCaret ClusteringExperiment
2025-08-14 10:01:54,317:INFO:Logging name: cluster-default-name
2025-08-14 10:01:54,317:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 10:01:54,317:INFO:version 3.3.2
2025-08-14 10:01:54,317:INFO:Initializing setup()
2025-08-14 10:01:54,317:INFO:self.USI: ab47
2025-08-14 10:01:54,318:INFO:self._variable_keys: {'exp_name_log', 'memory', 'logging_param', '_available_plots', 'n_jobs_param', 'exp_id', 'USI', 'log_plots_param', '_ml_usecase', 'X', 'seed', 'html_param', 'pipeline', 'gpu_n_jobs_param', 'data', 'gpu_param', 'idx'}
2025-08-14 10:01:54,318:INFO:Checking environment
2025-08-14 10:01:54,318:INFO:python_version: 3.11.13
2025-08-14 10:01:54,318:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:01:54,318:INFO:machine: aarch64
2025-08-14 10:01:54,318:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:01:54,318:INFO:Memory: svmem(total=4109803520, available=942845952, percent=77.1, used=3003568128, free=243949568, active=3343106048, inactive=314994688, buffers=70176768, cached=792109056, shared=1097728, slab=102182912)
2025-08-14 10:01:54,318:INFO:Physical Core: 8
2025-08-14 10:01:54,318:INFO:Logical Core: 8
2025-08-14 10:01:54,318:INFO:Checking libraries
2025-08-14 10:01:54,318:INFO:System:
2025-08-14 10:01:54,318:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:01:54,318:INFO:executable: /usr/local/bin/python
2025-08-14 10:01:54,319:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:01:54,319:INFO:PyCaret required dependencies:
2025-08-14 10:01:54,319:INFO:                 pip: 24.0
2025-08-14 10:01:54,319:INFO:          setuptools: 80.9.0
2025-08-14 10:01:54,319:INFO:             pycaret: 3.3.2
2025-08-14 10:01:54,319:INFO:             IPython: 9.4.0
2025-08-14 10:01:54,319:INFO:          ipywidgets: 8.1.7
2025-08-14 10:01:54,319:INFO:                tqdm: 4.67.1
2025-08-14 10:01:54,319:INFO:               numpy: 1.26.4
2025-08-14 10:01:54,319:INFO:              pandas: 2.1.4
2025-08-14 10:01:54,319:INFO:              jinja2: 3.1.6
2025-08-14 10:01:54,319:INFO:               scipy: 1.11.4
2025-08-14 10:01:54,319:INFO:              joblib: 1.3.2
2025-08-14 10:01:54,319:INFO:             sklearn: 1.4.2
2025-08-14 10:01:54,319:INFO:                pyod: 2.0.5
2025-08-14 10:01:54,319:INFO:            imblearn: 0.13.0
2025-08-14 10:01:54,319:INFO:   category_encoders: 2.7.0
2025-08-14 10:01:54,319:INFO:            lightgbm: 4.6.0
2025-08-14 10:01:54,319:INFO:               numba: 0.61.0
2025-08-14 10:01:54,319:INFO:            requests: 2.32.4
2025-08-14 10:01:54,319:INFO:          matplotlib: 3.7.5
2025-08-14 10:01:54,319:INFO:          scikitplot: 0.3.7
2025-08-14 10:01:54,319:INFO:         yellowbrick: 1.5
2025-08-14 10:01:54,319:INFO:              plotly: 5.24.1
2025-08-14 10:01:54,319:INFO:    plotly-resampler: Not installed
2025-08-14 10:01:54,319:INFO:             kaleido: 1.0.0
2025-08-14 10:01:54,319:INFO:           schemdraw: 0.15
2025-08-14 10:01:54,319:INFO:         statsmodels: 0.14.5
2025-08-14 10:01:54,319:INFO:              sktime: 0.26.0
2025-08-14 10:01:54,319:INFO:               tbats: 1.1.3
2025-08-14 10:01:54,319:INFO:            pmdarima: 2.0.4
2025-08-14 10:01:54,319:INFO:              psutil: 7.0.0
2025-08-14 10:01:54,319:INFO:          markupsafe: 3.0.2
2025-08-14 10:01:54,319:INFO:             pickle5: Not installed
2025-08-14 10:01:54,319:INFO:         cloudpickle: 3.1.1
2025-08-14 10:01:54,319:INFO:         deprecation: 2.1.0
2025-08-14 10:01:54,319:INFO:              xxhash: 3.5.0
2025-08-14 10:01:54,319:INFO:           wurlitzer: 3.1.1
2025-08-14 10:01:54,319:INFO:PyCaret optional dependencies:
2025-08-14 10:01:54,320:INFO:                shap: 0.44.1
2025-08-14 10:01:54,320:INFO:           interpret: 0.7.2
2025-08-14 10:01:54,320:INFO:                umap: 0.5.7
2025-08-14 10:01:54,320:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:01:54,320:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:01:54,320:INFO:             autoviz: Not installed
2025-08-14 10:01:54,320:INFO:           fairlearn: 0.7.0
2025-08-14 10:01:54,320:INFO:          deepchecks: Not installed
2025-08-14 10:01:54,320:INFO:             xgboost: 3.0.4
2025-08-14 10:01:54,320:INFO:            catboost: 1.2.8
2025-08-14 10:01:54,320:INFO:              kmodes: 0.12.2
2025-08-14 10:01:54,320:INFO:             mlxtend: 0.23.4
2025-08-14 10:01:54,320:INFO:       statsforecast: 1.5.0
2025-08-14 10:01:54,320:INFO:        tune_sklearn: Not installed
2025-08-14 10:01:54,320:INFO:                 ray: Not installed
2025-08-14 10:01:54,320:INFO:            hyperopt: 0.2.7
2025-08-14 10:01:54,320:INFO:              optuna: 4.4.0
2025-08-14 10:01:54,320:INFO:               skopt: 0.10.2
2025-08-14 10:01:54,320:INFO:              mlflow: 3.2.0
2025-08-14 10:01:54,320:INFO:              gradio: 5.42.0
2025-08-14 10:01:54,320:INFO:             fastapi: 0.116.1
2025-08-14 10:01:54,320:INFO:             uvicorn: 0.35.0
2025-08-14 10:01:54,320:INFO:              m2cgen: 0.10.0
2025-08-14 10:01:54,320:INFO:           evidently: 0.4.40
2025-08-14 10:01:54,320:INFO:               fugue: 0.8.7
2025-08-14 10:01:54,320:INFO:           streamlit: 1.48.1
2025-08-14 10:01:54,320:INFO:             prophet: Not installed
2025-08-14 10:01:54,320:INFO:None
2025-08-14 10:01:54,320:INFO:Set up data.
2025-08-14 10:01:54,321:INFO:Set up index.
2025-08-14 10:01:54,321:INFO:Assigning column types.
2025-08-14 10:01:54,322:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 10:01:54,322:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:01:54,322:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,326:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:01:54,326:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,326:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 10:01:54,326:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,326:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,327:INFO:Preparing preprocessing pipeline...
2025-08-14 10:01:54,327:INFO:Set up simple imputation.
2025-08-14 10:01:54,327:INFO:Set up feature normalization.
2025-08-14 10:01:54,332:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:01:54,333:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:01:54,333:INFO:Creating final display dataframe.
2025-08-14 10:01:54,339:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  ab47
2025-08-14 10:01:54,339:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,339:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:01:54,339:INFO:setup() successfully completed in 0.02s...............
2025-08-14 10:01:54,339:INFO:Initializing create_model()
2025-08-14 10:01:54,339:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff3cc53950>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 10:01:54,339:INFO:Checking exceptions
2025-08-14 10:01:54,344:INFO:Importing untrained model
2025-08-14 10:01:54,344:INFO:K-Means Clustering Imported successfully
2025-08-14 10:01:54,345:INFO:Fitting Model
2025-08-14 10:01:54,549:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:01:54,549:INFO:create_models() successfully completed......................................
2025-08-14 10:01:54,550:INFO:Uploading results into container
2025-08-14 10:01:54,552:INFO:Uploading model into container now
2025-08-14 10:01:54,557:INFO:_master_model_container: 1
2025-08-14 10:01:54,557:INFO:_display_container: 2
2025-08-14 10:01:54,557:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:01:54,557:INFO:create_model() successfully completed......................................
2025-08-14 10:01:54,651:INFO:Initializing assign_model()
2025-08-14 10:01:54,652:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff3cc53950>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 10:01:54,652:INFO:Checking exceptions
2025-08-14 10:01:54,652:INFO:Determining Trained Model
2025-08-14 10:01:54,652:INFO:Trained Model : K-Means Clustering
2025-08-14 10:01:54,652:INFO:Copying data
2025-08-14 10:01:54,653:INFO:(3000, 12)
2025-08-14 10:01:54,653:INFO:assign_model() successfully completed......................................
2025-08-14 10:01:54,655:INFO:Initializing save_model()
2025-08-14 10:01:54,655:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 10:01:54,655:INFO:Adding model into prep_pipe
2025-08-14 10:01:54,657:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 10:01:54,659:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 10:01:54,659:INFO:save_model() successfully completed......................................
2025-08-14 10:07:08,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:07:08,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:07:08,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:07:08,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:07:09,000:INFO:PyCaret ClassificationExperiment
2025-08-14 10:07:09,000:INFO:Logging name: clf-default-name
2025-08-14 10:07:09,000:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 10:07:09,000:INFO:version 3.3.2
2025-08-14 10:07:09,001:INFO:Initializing setup()
2025-08-14 10:07:09,001:INFO:self.USI: ff39
2025-08-14 10:07:09,001:INFO:self._variable_keys: {'y_train', 'exp_id', 'target_param', 'seed', 'X_train', 'y', 'X', '_available_plots', 'is_multiclass', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'idx', 'USI', 'logging_param', 'y_test', 'fold_generator', 'fold_shuffle_param', 'pipeline', 'html_param', 'log_plots_param', 'n_jobs_param', 'fix_imbalance', 'gpu_param', 'exp_name_log', 'X_test', 'fold_groups_param', 'data'}
2025-08-14 10:07:09,001:INFO:Checking environment
2025-08-14 10:07:09,001:INFO:python_version: 3.11.13
2025-08-14 10:07:09,001:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:07:09,001:INFO:machine: aarch64
2025-08-14 10:07:09,001:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:07:09,001:INFO:Memory: svmem(total=4109803520, available=3428528128, percent=16.6, used=520744960, free=2732441600, active=899633152, inactive=314974208, buffers=70311936, cached=786305024, shared=1028096, slab=89952256)
2025-08-14 10:07:09,001:INFO:Physical Core: 8
2025-08-14 10:07:09,001:INFO:Logical Core: 8
2025-08-14 10:07:09,001:INFO:Checking libraries
2025-08-14 10:07:09,001:INFO:System:
2025-08-14 10:07:09,001:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:07:09,001:INFO:executable: /usr/local/bin/python
2025-08-14 10:07:09,001:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:07:09,001:INFO:PyCaret required dependencies:
2025-08-14 10:07:09,218:INFO:                 pip: 24.0
2025-08-14 10:07:09,218:INFO:          setuptools: 80.9.0
2025-08-14 10:07:09,218:INFO:             pycaret: 3.3.2
2025-08-14 10:07:09,218:INFO:             IPython: 9.4.0
2025-08-14 10:07:09,218:INFO:          ipywidgets: 8.1.7
2025-08-14 10:07:09,219:INFO:                tqdm: 4.67.1
2025-08-14 10:07:09,219:INFO:               numpy: 1.26.4
2025-08-14 10:07:09,219:INFO:              pandas: 2.1.4
2025-08-14 10:07:09,219:INFO:              jinja2: 3.1.6
2025-08-14 10:07:09,219:INFO:               scipy: 1.11.4
2025-08-14 10:07:09,219:INFO:              joblib: 1.3.2
2025-08-14 10:07:09,219:INFO:             sklearn: 1.4.2
2025-08-14 10:07:09,219:INFO:                pyod: 2.0.5
2025-08-14 10:07:09,219:INFO:            imblearn: 0.13.0
2025-08-14 10:07:09,219:INFO:   category_encoders: 2.7.0
2025-08-14 10:07:09,219:INFO:            lightgbm: 4.6.0
2025-08-14 10:07:09,219:INFO:               numba: 0.61.0
2025-08-14 10:07:09,219:INFO:            requests: 2.32.4
2025-08-14 10:07:09,219:INFO:          matplotlib: 3.7.5
2025-08-14 10:07:09,219:INFO:          scikitplot: 0.3.7
2025-08-14 10:07:09,219:INFO:         yellowbrick: 1.5
2025-08-14 10:07:09,219:INFO:              plotly: 5.24.1
2025-08-14 10:07:09,219:INFO:    plotly-resampler: Not installed
2025-08-14 10:07:09,219:INFO:             kaleido: 1.0.0
2025-08-14 10:07:09,219:INFO:           schemdraw: 0.15
2025-08-14 10:07:09,219:INFO:         statsmodels: 0.14.5
2025-08-14 10:07:09,219:INFO:              sktime: 0.26.0
2025-08-14 10:07:09,219:INFO:               tbats: 1.1.3
2025-08-14 10:07:09,219:INFO:            pmdarima: 2.0.4
2025-08-14 10:07:09,219:INFO:              psutil: 7.0.0
2025-08-14 10:07:09,219:INFO:          markupsafe: 3.0.2
2025-08-14 10:07:09,219:INFO:             pickle5: Not installed
2025-08-14 10:07:09,219:INFO:         cloudpickle: 3.1.1
2025-08-14 10:07:09,219:INFO:         deprecation: 2.1.0
2025-08-14 10:07:09,219:INFO:              xxhash: 3.5.0
2025-08-14 10:07:09,219:INFO:           wurlitzer: 3.1.1
2025-08-14 10:07:09,219:INFO:PyCaret optional dependencies:
2025-08-14 10:07:10,138:INFO:                shap: 0.44.1
2025-08-14 10:07:10,138:INFO:           interpret: 0.7.2
2025-08-14 10:07:10,138:INFO:                umap: 0.5.7
2025-08-14 10:07:10,138:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:07:10,138:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:07:10,138:INFO:             autoviz: Not installed
2025-08-14 10:07:10,138:INFO:           fairlearn: 0.7.0
2025-08-14 10:07:10,138:INFO:          deepchecks: Not installed
2025-08-14 10:07:10,138:INFO:             xgboost: 3.0.4
2025-08-14 10:07:10,138:INFO:            catboost: 1.2.8
2025-08-14 10:07:10,138:INFO:              kmodes: 0.12.2
2025-08-14 10:07:10,138:INFO:             mlxtend: 0.23.4
2025-08-14 10:07:10,138:INFO:       statsforecast: 1.5.0
2025-08-14 10:07:10,138:INFO:        tune_sklearn: Not installed
2025-08-14 10:07:10,138:INFO:                 ray: Not installed
2025-08-14 10:07:10,139:INFO:            hyperopt: 0.2.7
2025-08-14 10:07:10,139:INFO:              optuna: 4.4.0
2025-08-14 10:07:10,139:INFO:               skopt: 0.10.2
2025-08-14 10:07:10,139:INFO:              mlflow: 3.2.0
2025-08-14 10:07:10,139:INFO:              gradio: 5.42.0
2025-08-14 10:07:10,139:INFO:             fastapi: 0.116.1
2025-08-14 10:07:10,139:INFO:             uvicorn: 0.35.0
2025-08-14 10:07:10,139:INFO:              m2cgen: 0.10.0
2025-08-14 10:07:10,139:INFO:           evidently: 0.4.40
2025-08-14 10:07:10,139:INFO:               fugue: 0.8.7
2025-08-14 10:07:10,139:INFO:           streamlit: 1.48.1
2025-08-14 10:07:10,139:INFO:             prophet: Not installed
2025-08-14 10:07:10,139:INFO:None
2025-08-14 10:07:10,139:INFO:Set up data.
2025-08-14 10:07:10,142:INFO:Set up folding strategy.
2025-08-14 10:07:10,142:INFO:Set up train/test split.
2025-08-14 10:07:10,146:INFO:Set up index.
2025-08-14 10:07:10,146:INFO:Assigning column types.
2025-08-14 10:07:10,147:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 10:07:10,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,162:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,172:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,173:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,198:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,207:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,208:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,208:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 10:07:10,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,230:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,230:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,244:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:07:10,253:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,255:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,255:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 10:07:10,277:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,278:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,300:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,301:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,302:INFO:Preparing preprocessing pipeline...
2025-08-14 10:07:10,302:INFO:Set up label encoding.
2025-08-14 10:07:10,302:INFO:Set up simple imputation.
2025-08-14 10:07:10,303:INFO:Set up encoding of categorical features.
2025-08-14 10:07:10,303:INFO:Set up feature normalization.
2025-08-14 10:07:10,323:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:07:10,325:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:07:10,325:INFO:Creating final display dataframe.
2025-08-14 10:07:10,376:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     ff39
2025-08-14 10:07:10,398:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,399:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,421:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:07:10,422:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:07:10,422:INFO:setup() successfully completed in 1.42s...............
2025-08-14 10:07:10,422:INFO:Initializing compare_models()
2025-08-14 10:07:10,422:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 10:07:10,423:INFO:Checking exceptions
2025-08-14 10:07:10,424:INFO:Preparing display monitor
2025-08-14 10:07:10,425:INFO:Initializing Logistic Regression
2025-08-14 10:07:10,425:INFO:Total runtime is 1.1841456095377604e-06 minutes
2025-08-14 10:07:10,425:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:10,425:INFO:Initializing create_model()
2025-08-14 10:07:10,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:10,425:INFO:Checking exceptions
2025-08-14 10:07:10,425:INFO:Importing libraries
2025-08-14 10:07:10,425:INFO:Copying training dataset
2025-08-14 10:07:10,427:INFO:Defining folds
2025-08-14 10:07:10,427:INFO:Declaring metric variables
2025-08-14 10:07:10,428:INFO:Importing untrained model
2025-08-14 10:07:10,428:INFO:Logistic Regression Imported successfully
2025-08-14 10:07:10,428:INFO:Starting cross validation
2025-08-14 10:07:10,428:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:11,713:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,715:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,716:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,719:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,719:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,720:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,722:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,723:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,729:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,735:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,758:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,763:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,768:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:11,791:INFO:Calculating mean and std
2025-08-14 10:07:11,793:INFO:Creating metrics dataframe
2025-08-14 10:07:11,800:INFO:Uploading results into container
2025-08-14 10:07:11,800:INFO:Uploading model into container now
2025-08-14 10:07:11,801:INFO:_master_model_container: 1
2025-08-14 10:07:11,801:INFO:_display_container: 2
2025-08-14 10:07:11,802:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:07:11,802:INFO:create_model() successfully completed......................................
2025-08-14 10:07:12,008:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:12,008:INFO:Creating metrics dataframe
2025-08-14 10:07:12,009:INFO:Initializing K Neighbors Classifier
2025-08-14 10:07:12,009:INFO:Total runtime is 0.02641274134318034 minutes
2025-08-14 10:07:12,009:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:12,010:INFO:Initializing create_model()
2025-08-14 10:07:12,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:12,010:INFO:Checking exceptions
2025-08-14 10:07:12,010:INFO:Importing libraries
2025-08-14 10:07:12,010:INFO:Copying training dataset
2025-08-14 10:07:12,012:INFO:Defining folds
2025-08-14 10:07:12,012:INFO:Declaring metric variables
2025-08-14 10:07:12,012:INFO:Importing untrained model
2025-08-14 10:07:12,012:INFO:K Neighbors Classifier Imported successfully
2025-08-14 10:07:12,013:INFO:Starting cross validation
2025-08-14 10:07:12,013:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:12,147:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:12,157:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:12,162:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:12,163:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:12,169:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:12,173:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,209:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,227:INFO:Calculating mean and std
2025-08-14 10:07:13,229:INFO:Creating metrics dataframe
2025-08-14 10:07:13,237:INFO:Uploading results into container
2025-08-14 10:07:13,238:INFO:Uploading model into container now
2025-08-14 10:07:13,238:INFO:_master_model_container: 2
2025-08-14 10:07:13,239:INFO:_display_container: 2
2025-08-14 10:07:13,239:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 10:07:13,239:INFO:create_model() successfully completed......................................
2025-08-14 10:07:13,440:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:13,440:INFO:Creating metrics dataframe
2025-08-14 10:07:13,442:INFO:Initializing Naive Bayes
2025-08-14 10:07:13,442:INFO:Total runtime is 0.050285840034484865 minutes
2025-08-14 10:07:13,442:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:13,442:INFO:Initializing create_model()
2025-08-14 10:07:13,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:13,442:INFO:Checking exceptions
2025-08-14 10:07:13,442:INFO:Importing libraries
2025-08-14 10:07:13,442:INFO:Copying training dataset
2025-08-14 10:07:13,444:INFO:Defining folds
2025-08-14 10:07:13,444:INFO:Declaring metric variables
2025-08-14 10:07:13,445:INFO:Importing untrained model
2025-08-14 10:07:13,445:INFO:Naive Bayes Imported successfully
2025-08-14 10:07:13,445:INFO:Starting cross validation
2025-08-14 10:07:13,445:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:13,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,555:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,555:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,562:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,563:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,563:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,564:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,565:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,566:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,567:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,571:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,573:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,590:INFO:Calculating mean and std
2025-08-14 10:07:13,590:INFO:Creating metrics dataframe
2025-08-14 10:07:13,591:INFO:Uploading results into container
2025-08-14 10:07:13,591:INFO:Uploading model into container now
2025-08-14 10:07:13,591:INFO:_master_model_container: 3
2025-08-14 10:07:13,591:INFO:_display_container: 2
2025-08-14 10:07:13,591:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 10:07:13,591:INFO:create_model() successfully completed......................................
2025-08-14 10:07:13,657:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:13,657:INFO:Creating metrics dataframe
2025-08-14 10:07:13,658:INFO:Initializing Decision Tree Classifier
2025-08-14 10:07:13,658:INFO:Total runtime is 0.053892314434051514 minutes
2025-08-14 10:07:13,658:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:13,658:INFO:Initializing create_model()
2025-08-14 10:07:13,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:13,658:INFO:Checking exceptions
2025-08-14 10:07:13,658:INFO:Importing libraries
2025-08-14 10:07:13,659:INFO:Copying training dataset
2025-08-14 10:07:13,660:INFO:Defining folds
2025-08-14 10:07:13,660:INFO:Declaring metric variables
2025-08-14 10:07:13,660:INFO:Importing untrained model
2025-08-14 10:07:13,661:INFO:Decision Tree Classifier Imported successfully
2025-08-14 10:07:13,661:INFO:Starting cross validation
2025-08-14 10:07:13,661:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:13,709:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,715:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,716:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,717:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,720:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,717:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,719:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,721:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,723:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,723:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,726:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,745:INFO:Calculating mean and std
2025-08-14 10:07:13,745:INFO:Creating metrics dataframe
2025-08-14 10:07:13,746:INFO:Uploading results into container
2025-08-14 10:07:13,746:INFO:Uploading model into container now
2025-08-14 10:07:13,746:INFO:_master_model_container: 4
2025-08-14 10:07:13,747:INFO:_display_container: 2
2025-08-14 10:07:13,747:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 10:07:13,747:INFO:create_model() successfully completed......................................
2025-08-14 10:07:13,812:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:13,813:INFO:Creating metrics dataframe
2025-08-14 10:07:13,814:INFO:Initializing SVM - Linear Kernel
2025-08-14 10:07:13,814:INFO:Total runtime is 0.05648437738418579 minutes
2025-08-14 10:07:13,814:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:13,814:INFO:Initializing create_model()
2025-08-14 10:07:13,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:13,814:INFO:Checking exceptions
2025-08-14 10:07:13,814:INFO:Importing libraries
2025-08-14 10:07:13,814:INFO:Copying training dataset
2025-08-14 10:07:13,816:INFO:Defining folds
2025-08-14 10:07:13,816:INFO:Declaring metric variables
2025-08-14 10:07:13,816:INFO:Importing untrained model
2025-08-14 10:07:13,816:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 10:07:13,816:INFO:Starting cross validation
2025-08-14 10:07:13,817:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:13,848:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,851:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,852:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,852:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,852:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,854:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,857:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,857:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,857:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,861:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,867:INFO:Calculating mean and std
2025-08-14 10:07:13,867:INFO:Creating metrics dataframe
2025-08-14 10:07:13,868:INFO:Uploading results into container
2025-08-14 10:07:13,868:INFO:Uploading model into container now
2025-08-14 10:07:13,868:INFO:_master_model_container: 5
2025-08-14 10:07:13,868:INFO:_display_container: 2
2025-08-14 10:07:13,869:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 10:07:13,869:INFO:create_model() successfully completed......................................
2025-08-14 10:07:13,933:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:13,934:INFO:Creating metrics dataframe
2025-08-14 10:07:13,935:INFO:Initializing Ridge Classifier
2025-08-14 10:07:13,935:INFO:Total runtime is 0.058500436941782634 minutes
2025-08-14 10:07:13,935:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:13,935:INFO:Initializing create_model()
2025-08-14 10:07:13,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:13,935:INFO:Checking exceptions
2025-08-14 10:07:13,935:INFO:Importing libraries
2025-08-14 10:07:13,935:INFO:Copying training dataset
2025-08-14 10:07:13,937:INFO:Defining folds
2025-08-14 10:07:13,937:INFO:Declaring metric variables
2025-08-14 10:07:13,937:INFO:Importing untrained model
2025-08-14 10:07:13,937:INFO:Ridge Classifier Imported successfully
2025-08-14 10:07:13,937:INFO:Starting cross validation
2025-08-14 10:07:13,937:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:13,968:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,971:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,972:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,972:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,974:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,975:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,975:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,976:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,976:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,977:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,978:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,978:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,978:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,981:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,981:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:13,987:INFO:Calculating mean and std
2025-08-14 10:07:13,987:INFO:Creating metrics dataframe
2025-08-14 10:07:13,988:INFO:Uploading results into container
2025-08-14 10:07:13,988:INFO:Uploading model into container now
2025-08-14 10:07:13,988:INFO:_master_model_container: 6
2025-08-14 10:07:13,988:INFO:_display_container: 2
2025-08-14 10:07:13,988:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 10:07:13,988:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,056:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,056:INFO:Creating metrics dataframe
2025-08-14 10:07:14,057:INFO:Initializing Random Forest Classifier
2025-08-14 10:07:14,058:INFO:Total runtime is 0.060549473762512206 minutes
2025-08-14 10:07:14,058:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,058:INFO:Initializing create_model()
2025-08-14 10:07:14,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,058:INFO:Checking exceptions
2025-08-14 10:07:14,058:INFO:Importing libraries
2025-08-14 10:07:14,058:INFO:Copying training dataset
2025-08-14 10:07:14,060:INFO:Defining folds
2025-08-14 10:07:14,060:INFO:Declaring metric variables
2025-08-14 10:07:14,060:INFO:Importing untrained model
2025-08-14 10:07:14,060:INFO:Random Forest Classifier Imported successfully
2025-08-14 10:07:14,060:INFO:Starting cross validation
2025-08-14 10:07:14,060:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:14,230:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,231:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,233:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,237:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,240:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,244:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,245:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,247:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,250:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,250:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,253:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,255:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,262:INFO:Calculating mean and std
2025-08-14 10:07:14,263:INFO:Creating metrics dataframe
2025-08-14 10:07:14,263:INFO:Uploading results into container
2025-08-14 10:07:14,264:INFO:Uploading model into container now
2025-08-14 10:07:14,264:INFO:_master_model_container: 7
2025-08-14 10:07:14,264:INFO:_display_container: 2
2025-08-14 10:07:14,264:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 10:07:14,264:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,331:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,331:INFO:Creating metrics dataframe
2025-08-14 10:07:14,332:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 10:07:14,332:INFO:Total runtime is 0.06513126293818156 minutes
2025-08-14 10:07:14,333:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,333:INFO:Initializing create_model()
2025-08-14 10:07:14,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,333:INFO:Checking exceptions
2025-08-14 10:07:14,333:INFO:Importing libraries
2025-08-14 10:07:14,333:INFO:Copying training dataset
2025-08-14 10:07:14,335:INFO:Defining folds
2025-08-14 10:07:14,335:INFO:Declaring metric variables
2025-08-14 10:07:14,335:INFO:Importing untrained model
2025-08-14 10:07:14,335:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 10:07:14,335:INFO:Starting cross validation
2025-08-14 10:07:14,335:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:14,354:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:07:14,355:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:07:14,357:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:07:14,358:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:07:14,362:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:07:14,363:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:07:14,363:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:07:14,363:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:07:14,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:07:14,365:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:07:14,365:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:07:14,366:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,369:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 10:07:14,371:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,372:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,372:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,373:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,374:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,375:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,375:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,377:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,378:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,378:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,381:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:14,382:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,382:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,382:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,398:INFO:Calculating mean and std
2025-08-14 10:07:14,398:INFO:Creating metrics dataframe
2025-08-14 10:07:14,399:INFO:Uploading results into container
2025-08-14 10:07:14,399:INFO:Uploading model into container now
2025-08-14 10:07:14,400:INFO:_master_model_container: 8
2025-08-14 10:07:14,400:INFO:_display_container: 2
2025-08-14 10:07:14,400:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 10:07:14,400:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,465:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,465:INFO:Creating metrics dataframe
2025-08-14 10:07:14,466:INFO:Initializing Ada Boost Classifier
2025-08-14 10:07:14,466:INFO:Total runtime is 0.06736066738764444 minutes
2025-08-14 10:07:14,466:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,466:INFO:Initializing create_model()
2025-08-14 10:07:14,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,467:INFO:Checking exceptions
2025-08-14 10:07:14,467:INFO:Importing libraries
2025-08-14 10:07:14,467:INFO:Copying training dataset
2025-08-14 10:07:14,468:INFO:Defining folds
2025-08-14 10:07:14,468:INFO:Declaring metric variables
2025-08-14 10:07:14,468:INFO:Importing untrained model
2025-08-14 10:07:14,469:INFO:Ada Boost Classifier Imported successfully
2025-08-14 10:07:14,469:INFO:Starting cross validation
2025-08-14 10:07:14,469:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:14,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:07:14,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:07:14,488:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:07:14,490:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:07:14,494:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:07:14,498:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,501:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,501:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,503:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,504:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,506:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,506:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,506:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,510:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,512:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,514:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,520:INFO:Calculating mean and std
2025-08-14 10:07:14,521:INFO:Creating metrics dataframe
2025-08-14 10:07:14,521:INFO:Uploading results into container
2025-08-14 10:07:14,522:INFO:Uploading model into container now
2025-08-14 10:07:14,522:INFO:_master_model_container: 9
2025-08-14 10:07:14,522:INFO:_display_container: 2
2025-08-14 10:07:14,522:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 10:07:14,522:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,587:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,587:INFO:Creating metrics dataframe
2025-08-14 10:07:14,588:INFO:Initializing Gradient Boosting Classifier
2025-08-14 10:07:14,588:INFO:Total runtime is 0.06939076979955036 minutes
2025-08-14 10:07:14,588:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,588:INFO:Initializing create_model()
2025-08-14 10:07:14,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,588:INFO:Checking exceptions
2025-08-14 10:07:14,588:INFO:Importing libraries
2025-08-14 10:07:14,588:INFO:Copying training dataset
2025-08-14 10:07:14,590:INFO:Defining folds
2025-08-14 10:07:14,590:INFO:Declaring metric variables
2025-08-14 10:07:14,590:INFO:Importing untrained model
2025-08-14 10:07:14,590:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 10:07:14,590:INFO:Starting cross validation
2025-08-14 10:07:14,591:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:14,698:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,702:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,703:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,704:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,705:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,705:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,707:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,707:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,708:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,710:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,713:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,717:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,732:INFO:Calculating mean and std
2025-08-14 10:07:14,732:INFO:Creating metrics dataframe
2025-08-14 10:07:14,733:INFO:Uploading results into container
2025-08-14 10:07:14,733:INFO:Uploading model into container now
2025-08-14 10:07:14,734:INFO:_master_model_container: 10
2025-08-14 10:07:14,734:INFO:_display_container: 2
2025-08-14 10:07:14,734:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 10:07:14,734:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,799:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,799:INFO:Creating metrics dataframe
2025-08-14 10:07:14,800:INFO:Initializing Linear Discriminant Analysis
2025-08-14 10:07:14,800:INFO:Total runtime is 0.07292498350143431 minutes
2025-08-14 10:07:14,800:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,800:INFO:Initializing create_model()
2025-08-14 10:07:14,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,800:INFO:Checking exceptions
2025-08-14 10:07:14,800:INFO:Importing libraries
2025-08-14 10:07:14,800:INFO:Copying training dataset
2025-08-14 10:07:14,802:INFO:Defining folds
2025-08-14 10:07:14,802:INFO:Declaring metric variables
2025-08-14 10:07:14,802:INFO:Importing untrained model
2025-08-14 10:07:14,802:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 10:07:14,802:INFO:Starting cross validation
2025-08-14 10:07:14,803:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:14,833:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,835:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,835:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,838:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,838:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,838:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,839:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,840:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,841:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,841:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,842:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,844:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,844:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,846:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,848:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:14,854:INFO:Calculating mean and std
2025-08-14 10:07:14,855:INFO:Creating metrics dataframe
2025-08-14 10:07:14,855:INFO:Uploading results into container
2025-08-14 10:07:14,856:INFO:Uploading model into container now
2025-08-14 10:07:14,856:INFO:_master_model_container: 11
2025-08-14 10:07:14,856:INFO:_display_container: 2
2025-08-14 10:07:14,856:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 10:07:14,856:INFO:create_model() successfully completed......................................
2025-08-14 10:07:14,922:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:14,922:INFO:Creating metrics dataframe
2025-08-14 10:07:14,923:INFO:Initializing Extra Trees Classifier
2025-08-14 10:07:14,923:INFO:Total runtime is 0.07497191429138182 minutes
2025-08-14 10:07:14,923:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:14,923:INFO:Initializing create_model()
2025-08-14 10:07:14,923:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:14,923:INFO:Checking exceptions
2025-08-14 10:07:14,923:INFO:Importing libraries
2025-08-14 10:07:14,923:INFO:Copying training dataset
2025-08-14 10:07:14,925:INFO:Defining folds
2025-08-14 10:07:14,925:INFO:Declaring metric variables
2025-08-14 10:07:14,925:INFO:Importing untrained model
2025-08-14 10:07:14,925:INFO:Extra Trees Classifier Imported successfully
2025-08-14 10:07:14,925:INFO:Starting cross validation
2025-08-14 10:07:14,926:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:15,060:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,061:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,064:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,071:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,073:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,076:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,077:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,078:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,079:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,082:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,095:INFO:Calculating mean and std
2025-08-14 10:07:15,095:INFO:Creating metrics dataframe
2025-08-14 10:07:15,096:INFO:Uploading results into container
2025-08-14 10:07:15,096:INFO:Uploading model into container now
2025-08-14 10:07:15,096:INFO:_master_model_container: 12
2025-08-14 10:07:15,096:INFO:_display_container: 2
2025-08-14 10:07:15,096:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 10:07:15,096:INFO:create_model() successfully completed......................................
2025-08-14 10:07:15,161:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:15,162:INFO:Creating metrics dataframe
2025-08-14 10:07:15,163:INFO:Initializing Extreme Gradient Boosting
2025-08-14 10:07:15,163:INFO:Total runtime is 0.07896704673767088 minutes
2025-08-14 10:07:15,163:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:15,163:INFO:Initializing create_model()
2025-08-14 10:07:15,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:15,163:INFO:Checking exceptions
2025-08-14 10:07:15,163:INFO:Importing libraries
2025-08-14 10:07:15,163:INFO:Copying training dataset
2025-08-14 10:07:15,165:INFO:Defining folds
2025-08-14 10:07:15,165:INFO:Declaring metric variables
2025-08-14 10:07:15,165:INFO:Importing untrained model
2025-08-14 10:07:15,165:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 10:07:15,165:INFO:Starting cross validation
2025-08-14 10:07:15,166:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:15,229:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,230:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,232:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,234:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,235:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,236:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,238:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,239:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,239:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,239:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,243:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,243:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,243:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,245:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:15,253:INFO:Calculating mean and std
2025-08-14 10:07:15,253:INFO:Creating metrics dataframe
2025-08-14 10:07:15,254:INFO:Uploading results into container
2025-08-14 10:07:15,254:INFO:Uploading model into container now
2025-08-14 10:07:15,254:INFO:_master_model_container: 13
2025-08-14 10:07:15,254:INFO:_display_container: 2
2025-08-14 10:07:15,254:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 10:07:15,255:INFO:create_model() successfully completed......................................
2025-08-14 10:07:15,320:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:15,320:INFO:Creating metrics dataframe
2025-08-14 10:07:15,321:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 10:07:15,321:INFO:Total runtime is 0.08160635630289712 minutes
2025-08-14 10:07:15,321:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:15,321:INFO:Initializing create_model()
2025-08-14 10:07:15,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:15,321:INFO:Checking exceptions
2025-08-14 10:07:15,321:INFO:Importing libraries
2025-08-14 10:07:15,321:INFO:Copying training dataset
2025-08-14 10:07:15,323:INFO:Defining folds
2025-08-14 10:07:15,323:INFO:Declaring metric variables
2025-08-14 10:07:15,323:INFO:Importing untrained model
2025-08-14 10:07:15,323:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 10:07:15,324:INFO:Starting cross validation
2025-08-14 10:07:15,324:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:17,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:17,858:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:17,862:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,004:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,007:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,010:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,019:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,022:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,023:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,024:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,026:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,029:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,038:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,041:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,043:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:18,050:INFO:Calculating mean and std
2025-08-14 10:07:18,051:INFO:Creating metrics dataframe
2025-08-14 10:07:18,053:INFO:Uploading results into container
2025-08-14 10:07:18,053:INFO:Uploading model into container now
2025-08-14 10:07:18,053:INFO:_master_model_container: 14
2025-08-14 10:07:18,053:INFO:_display_container: 2
2025-08-14 10:07:18,054:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 10:07:18,054:INFO:create_model() successfully completed......................................
2025-08-14 10:07:18,131:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:18,131:INFO:Creating metrics dataframe
2025-08-14 10:07:18,132:INFO:Initializing CatBoost Classifier
2025-08-14 10:07:18,132:INFO:Total runtime is 0.12845197916030882 minutes
2025-08-14 10:07:18,132:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:18,132:INFO:Initializing create_model()
2025-08-14 10:07:18,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:18,132:INFO:Checking exceptions
2025-08-14 10:07:18,132:INFO:Importing libraries
2025-08-14 10:07:18,132:INFO:Copying training dataset
2025-08-14 10:07:18,134:INFO:Defining folds
2025-08-14 10:07:18,134:INFO:Declaring metric variables
2025-08-14 10:07:18,134:INFO:Importing untrained model
2025-08-14 10:07:18,134:INFO:CatBoost Classifier Imported successfully
2025-08-14 10:07:18,134:INFO:Starting cross validation
2025-08-14 10:07:18,135:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:23,246:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,250:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,255:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,255:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,274:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,288:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,291:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,293:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,296:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,320:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,322:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,325:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,325:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,328:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,336:INFO:Calculating mean and std
2025-08-14 10:07:23,337:INFO:Creating metrics dataframe
2025-08-14 10:07:23,338:INFO:Uploading results into container
2025-08-14 10:07:23,338:INFO:Uploading model into container now
2025-08-14 10:07:23,339:INFO:_master_model_container: 15
2025-08-14 10:07:23,339:INFO:_display_container: 2
2025-08-14 10:07:23,339:INFO:<catboost.core.CatBoostClassifier object at 0xffff4ef89190>
2025-08-14 10:07:23,339:INFO:create_model() successfully completed......................................
2025-08-14 10:07:23,499:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:23,499:INFO:Creating metrics dataframe
2025-08-14 10:07:23,500:INFO:Initializing Dummy Classifier
2025-08-14 10:07:23,501:INFO:Total runtime is 0.21793256600697833 minutes
2025-08-14 10:07:23,501:INFO:SubProcess create_model() called ==================================
2025-08-14 10:07:23,501:INFO:Initializing create_model()
2025-08-14 10:07:23,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff605f71d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:23,501:INFO:Checking exceptions
2025-08-14 10:07:23,501:INFO:Importing libraries
2025-08-14 10:07:23,501:INFO:Copying training dataset
2025-08-14 10:07:23,503:INFO:Defining folds
2025-08-14 10:07:23,503:INFO:Declaring metric variables
2025-08-14 10:07:23,503:INFO:Importing untrained model
2025-08-14 10:07:23,503:INFO:Dummy Classifier Imported successfully
2025-08-14 10:07:23,503:INFO:Starting cross validation
2025-08-14 10:07:23,504:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:07:23,566:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,570:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,572:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,574:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,575:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:23,576:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:23,577:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,578:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,583:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,585:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,587:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,588:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,589:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:23,589:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,590:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,591:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:23,591:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,592:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,593:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:07:23,594:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:07:23,614:INFO:Calculating mean and std
2025-08-14 10:07:23,615:INFO:Creating metrics dataframe
2025-08-14 10:07:23,616:INFO:Uploading results into container
2025-08-14 10:07:23,616:INFO:Uploading model into container now
2025-08-14 10:07:23,616:INFO:_master_model_container: 16
2025-08-14 10:07:23,616:INFO:_display_container: 2
2025-08-14 10:07:23,616:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 10:07:23,616:INFO:create_model() successfully completed......................................
2025-08-14 10:07:23,682:INFO:SubProcess create_model() end ==================================
2025-08-14 10:07:23,682:INFO:Creating metrics dataframe
2025-08-14 10:07:23,683:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 10:07:23,684:INFO:Initializing create_model()
2025-08-14 10:07:23,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:23,684:INFO:Checking exceptions
2025-08-14 10:07:23,684:INFO:Importing libraries
2025-08-14 10:07:23,685:INFO:Copying training dataset
2025-08-14 10:07:23,686:INFO:Defining folds
2025-08-14 10:07:23,686:INFO:Declaring metric variables
2025-08-14 10:07:23,686:INFO:Importing untrained model
2025-08-14 10:07:23,686:INFO:Declaring custom model
2025-08-14 10:07:23,686:INFO:Logistic Regression Imported successfully
2025-08-14 10:07:23,687:INFO:Cross validation set to False
2025-08-14 10:07:23,687:INFO:Fitting Model
2025-08-14 10:07:23,711:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:07:23,711:INFO:create_model() successfully completed......................................
2025-08-14 10:07:23,810:INFO:_master_model_container: 16
2025-08-14 10:07:23,811:INFO:_display_container: 2
2025-08-14 10:07:23,811:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:07:23,811:INFO:compare_models() successfully completed......................................
2025-08-14 10:07:23,811:INFO:Initializing finalize_model()
2025-08-14 10:07:23,811:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 10:07:23,811:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:07:23,812:INFO:Initializing create_model()
2025-08-14 10:07:23,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7880c5d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:07:23,812:INFO:Checking exceptions
2025-08-14 10:07:23,813:INFO:Importing libraries
2025-08-14 10:07:23,813:INFO:Copying training dataset
2025-08-14 10:07:23,813:INFO:Defining folds
2025-08-14 10:07:23,813:INFO:Declaring metric variables
2025-08-14 10:07:23,813:INFO:Importing untrained model
2025-08-14 10:07:23,813:INFO:Declaring custom model
2025-08-14 10:07:23,813:INFO:Logistic Regression Imported successfully
2025-08-14 10:07:23,814:INFO:Cross validation set to False
2025-08-14 10:07:23,814:INFO:Fitting Model
2025-08-14 10:07:23,835:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:07:23,835:INFO:create_model() successfully completed......................................
2025-08-14 10:07:23,925:INFO:_master_model_container: 16
2025-08-14 10:07:23,925:INFO:_display_container: 2
2025-08-14 10:07:23,927:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:07:23,927:INFO:finalize_model() successfully completed......................................
2025-08-14 10:07:23,992:INFO:Initializing save_model()
2025-08-14 10:07:23,992:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 10:07:23,992:INFO:Adding model into prep_pipe
2025-08-14 10:07:23,992:WARNING:Only Model saved as it was a pipeline.
2025-08-14 10:07:23,994:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 10:07:23,996:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:07:23,996:INFO:save_model() successfully completed......................................
2025-08-14 10:07:24,061:INFO:PyCaret ClusteringExperiment
2025-08-14 10:07:24,061:INFO:Logging name: cluster-default-name
2025-08-14 10:07:24,061:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 10:07:24,061:INFO:version 3.3.2
2025-08-14 10:07:24,061:INFO:Initializing setup()
2025-08-14 10:07:24,061:INFO:self.USI: b43d
2025-08-14 10:07:24,061:INFO:self._variable_keys: {'exp_id', 'seed', 'X', '_available_plots', 'memory', '_ml_usecase', 'gpu_n_jobs_param', 'idx', 'USI', 'logging_param', 'pipeline', 'html_param', 'log_plots_param', 'n_jobs_param', 'gpu_param', 'exp_name_log', 'data'}
2025-08-14 10:07:24,061:INFO:Checking environment
2025-08-14 10:07:24,061:INFO:python_version: 3.11.13
2025-08-14 10:07:24,061:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:07:24,061:INFO:machine: aarch64
2025-08-14 10:07:24,061:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:07:24,062:INFO:Memory: svmem(total=4109803520, available=1259737088, percent=69.3, used=2687803392, free=562008064, active=3024719872, inactive=314933248, buffers=70320128, cached=789671936, shared=1097728, slab=99065856)
2025-08-14 10:07:24,062:INFO:Physical Core: 8
2025-08-14 10:07:24,062:INFO:Logical Core: 8
2025-08-14 10:07:24,062:INFO:Checking libraries
2025-08-14 10:07:24,062:INFO:System:
2025-08-14 10:07:24,062:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:07:24,062:INFO:executable: /usr/local/bin/python
2025-08-14 10:07:24,062:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:07:24,062:INFO:PyCaret required dependencies:
2025-08-14 10:07:24,062:INFO:                 pip: 24.0
2025-08-14 10:07:24,062:INFO:          setuptools: 80.9.0
2025-08-14 10:07:24,062:INFO:             pycaret: 3.3.2
2025-08-14 10:07:24,062:INFO:             IPython: 9.4.0
2025-08-14 10:07:24,062:INFO:          ipywidgets: 8.1.7
2025-08-14 10:07:24,062:INFO:                tqdm: 4.67.1
2025-08-14 10:07:24,062:INFO:               numpy: 1.26.4
2025-08-14 10:07:24,062:INFO:              pandas: 2.1.4
2025-08-14 10:07:24,062:INFO:              jinja2: 3.1.6
2025-08-14 10:07:24,062:INFO:               scipy: 1.11.4
2025-08-14 10:07:24,062:INFO:              joblib: 1.3.2
2025-08-14 10:07:24,062:INFO:             sklearn: 1.4.2
2025-08-14 10:07:24,062:INFO:                pyod: 2.0.5
2025-08-14 10:07:24,063:INFO:            imblearn: 0.13.0
2025-08-14 10:07:24,063:INFO:   category_encoders: 2.7.0
2025-08-14 10:07:24,063:INFO:            lightgbm: 4.6.0
2025-08-14 10:07:24,063:INFO:               numba: 0.61.0
2025-08-14 10:07:24,063:INFO:            requests: 2.32.4
2025-08-14 10:07:24,063:INFO:          matplotlib: 3.7.5
2025-08-14 10:07:24,063:INFO:          scikitplot: 0.3.7
2025-08-14 10:07:24,063:INFO:         yellowbrick: 1.5
2025-08-14 10:07:24,063:INFO:              plotly: 5.24.1
2025-08-14 10:07:24,063:INFO:    plotly-resampler: Not installed
2025-08-14 10:07:24,063:INFO:             kaleido: 1.0.0
2025-08-14 10:07:24,063:INFO:           schemdraw: 0.15
2025-08-14 10:07:24,063:INFO:         statsmodels: 0.14.5
2025-08-14 10:07:24,063:INFO:              sktime: 0.26.0
2025-08-14 10:07:24,063:INFO:               tbats: 1.1.3
2025-08-14 10:07:24,063:INFO:            pmdarima: 2.0.4
2025-08-14 10:07:24,063:INFO:              psutil: 7.0.0
2025-08-14 10:07:24,063:INFO:          markupsafe: 3.0.2
2025-08-14 10:07:24,063:INFO:             pickle5: Not installed
2025-08-14 10:07:24,063:INFO:         cloudpickle: 3.1.1
2025-08-14 10:07:24,063:INFO:         deprecation: 2.1.0
2025-08-14 10:07:24,063:INFO:              xxhash: 3.5.0
2025-08-14 10:07:24,063:INFO:           wurlitzer: 3.1.1
2025-08-14 10:07:24,063:INFO:PyCaret optional dependencies:
2025-08-14 10:07:24,063:INFO:                shap: 0.44.1
2025-08-14 10:07:24,063:INFO:           interpret: 0.7.2
2025-08-14 10:07:24,063:INFO:                umap: 0.5.7
2025-08-14 10:07:24,063:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:07:24,063:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:07:24,063:INFO:             autoviz: Not installed
2025-08-14 10:07:24,063:INFO:           fairlearn: 0.7.0
2025-08-14 10:07:24,063:INFO:          deepchecks: Not installed
2025-08-14 10:07:24,063:INFO:             xgboost: 3.0.4
2025-08-14 10:07:24,063:INFO:            catboost: 1.2.8
2025-08-14 10:07:24,063:INFO:              kmodes: 0.12.2
2025-08-14 10:07:24,063:INFO:             mlxtend: 0.23.4
2025-08-14 10:07:24,063:INFO:       statsforecast: 1.5.0
2025-08-14 10:07:24,063:INFO:        tune_sklearn: Not installed
2025-08-14 10:07:24,063:INFO:                 ray: Not installed
2025-08-14 10:07:24,064:INFO:            hyperopt: 0.2.7
2025-08-14 10:07:24,064:INFO:              optuna: 4.4.0
2025-08-14 10:07:24,064:INFO:               skopt: 0.10.2
2025-08-14 10:07:24,064:INFO:              mlflow: 3.2.0
2025-08-14 10:07:24,064:INFO:              gradio: 5.42.0
2025-08-14 10:07:24,064:INFO:             fastapi: 0.116.1
2025-08-14 10:07:24,064:INFO:             uvicorn: 0.35.0
2025-08-14 10:07:24,064:INFO:              m2cgen: 0.10.0
2025-08-14 10:07:24,064:INFO:           evidently: 0.4.40
2025-08-14 10:07:24,064:INFO:               fugue: 0.8.7
2025-08-14 10:07:24,064:INFO:           streamlit: 1.48.1
2025-08-14 10:07:24,064:INFO:             prophet: Not installed
2025-08-14 10:07:24,064:INFO:None
2025-08-14 10:07:24,064:INFO:Set up data.
2025-08-14 10:07:24,065:INFO:Set up index.
2025-08-14 10:07:24,065:INFO:Assigning column types.
2025-08-14 10:07:24,066:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 10:07:24,066:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:07:24,066:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,070:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:07:24,070:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,070:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 10:07:24,070:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,070:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,071:INFO:Preparing preprocessing pipeline...
2025-08-14 10:07:24,071:INFO:Set up simple imputation.
2025-08-14 10:07:24,071:INFO:Set up feature normalization.
2025-08-14 10:07:24,077:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:07:24,078:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:07:24,078:INFO:Creating final display dataframe.
2025-08-14 10:07:24,084:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  b43d
2025-08-14 10:07:24,084:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,084:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:07:24,084:INFO:setup() successfully completed in 0.02s...............
2025-08-14 10:07:24,084:INFO:Initializing create_model()
2025-08-14 10:07:24,084:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff6003c3d0>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 10:07:24,084:INFO:Checking exceptions
2025-08-14 10:07:24,089:INFO:Importing untrained model
2025-08-14 10:07:24,089:INFO:K-Means Clustering Imported successfully
2025-08-14 10:07:24,090:INFO:Fitting Model
2025-08-14 10:07:24,278:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:07:24,278:INFO:create_models() successfully completed......................................
2025-08-14 10:07:24,278:INFO:Uploading results into container
2025-08-14 10:07:24,280:INFO:Uploading model into container now
2025-08-14 10:07:24,285:INFO:_master_model_container: 1
2025-08-14 10:07:24,285:INFO:_display_container: 2
2025-08-14 10:07:24,285:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:07:24,285:INFO:create_model() successfully completed......................................
2025-08-14 10:07:24,385:INFO:Initializing assign_model()
2025-08-14 10:07:24,386:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff6003c3d0>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 10:07:24,386:INFO:Checking exceptions
2025-08-14 10:07:24,386:INFO:Determining Trained Model
2025-08-14 10:07:24,386:INFO:Trained Model : K-Means Clustering
2025-08-14 10:07:24,386:INFO:Copying data
2025-08-14 10:07:24,387:INFO:(3000, 12)
2025-08-14 10:07:24,387:INFO:assign_model() successfully completed......................................
2025-08-14 10:07:24,389:INFO:Initializing save_model()
2025-08-14 10:07:24,389:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 10:07:24,389:INFO:Adding model into prep_pipe
2025-08-14 10:07:24,391:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 10:07:24,393:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 10:07:24,393:INFO:save_model() successfully completed......................................
2025-08-14 10:08:05,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:08:05,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:08:05,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:08:05,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:08:06,502:INFO:Initializing load_model()
2025-08-14 10:08:06,503:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 10:08:06,682:INFO:Initializing load_model()
2025-08-14 10:08:06,682:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 10:08:13,967:INFO:Initializing predict_model()
2025-08-14 10:08:13,967:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56a0dd10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff56cc22a0>)
2025-08-14 10:08:13,968:INFO:Checking exceptions
2025-08-14 10:08:13,968:INFO:Preloading libraries
2025-08-14 10:08:13,968:INFO:Set up data.
2025-08-14 10:08:13,974:INFO:Set up index.
2025-08-14 10:08:13,981:INFO:Initializing predict_model()
2025-08-14 10:08:13,982:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff568eb210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff7d91f9c0>)
2025-08-14 10:08:13,982:INFO:Checking exceptions
2025-08-14 10:08:13,982:INFO:Preloading libraries
2025-08-14 10:08:13,982:INFO:Set up data.
2025-08-14 10:08:13,985:INFO:Set up index.
2025-08-14 10:08:41,324:INFO:Initializing predict_model()
2025-08-14 10:08:41,326:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4efd8c10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9faa1260>)
2025-08-14 10:08:41,326:INFO:Checking exceptions
2025-08-14 10:08:41,327:INFO:Preloading libraries
2025-08-14 10:08:41,327:INFO:Set up data.
2025-08-14 10:08:41,334:INFO:Set up index.
2025-08-14 10:08:41,341:INFO:Initializing predict_model()
2025-08-14 10:08:41,341:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff56b8a590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff5d3c1620>)
2025-08-14 10:08:41,341:INFO:Checking exceptions
2025-08-14 10:08:41,341:INFO:Preloading libraries
2025-08-14 10:08:41,341:INFO:Set up data.
2025-08-14 10:08:41,344:INFO:Set up index.
2025-08-14 10:09:22,128:INFO:Initializing predict_model()
2025-08-14 10:09:22,131:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff4efe0990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff9faa0180>)
2025-08-14 10:09:22,131:INFO:Checking exceptions
2025-08-14 10:09:22,131:INFO:Preloading libraries
2025-08-14 10:09:22,132:INFO:Set up data.
2025-08-14 10:09:22,137:INFO:Set up index.
2025-08-14 10:09:22,144:INFO:Initializing predict_model()
2025-08-14 10:09:22,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff9fa9ed90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff4efc7d80>)
2025-08-14 10:09:22,144:INFO:Checking exceptions
2025-08-14 10:09:22,144:INFO:Preloading libraries
2025-08-14 10:09:22,144:INFO:Set up data.
2025-08-14 10:09:22,147:INFO:Set up index.
2025-08-14 10:18:45,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:18:45,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:18:45,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:18:45,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:18:46,437:INFO:PyCaret ClassificationExperiment
2025-08-14 10:18:46,437:INFO:Logging name: clf-default-name
2025-08-14 10:18:46,437:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 10:18:46,437:INFO:version 3.3.2
2025-08-14 10:18:46,437:INFO:Initializing setup()
2025-08-14 10:18:46,437:INFO:self.USI: 607d
2025-08-14 10:18:46,437:INFO:self._variable_keys: {'memory', 'is_multiclass', 'idx', 'fold_groups_param', 'X_test', 'html_param', 'y', 'seed', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'y_test', '_ml_usecase', 'USI', 'y_train', 'gpu_param', 'fold_generator', '_available_plots', 'exp_id', 'n_jobs_param', 'logging_param', 'exp_name_log', 'fold_shuffle_param', 'X', 'X_train', 'data', 'log_plots_param', 'target_param'}
2025-08-14 10:18:46,437:INFO:Checking environment
2025-08-14 10:18:46,437:INFO:python_version: 3.11.13
2025-08-14 10:18:46,437:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:18:46,438:INFO:machine: aarch64
2025-08-14 10:18:46,438:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:18:46,438:INFO:Memory: svmem(total=4109803520, available=3429855232, percent=16.5, used=519319552, free=2733457408, active=900284416, inactive=315146240, buffers=71045120, cached=785981440, shared=991232, slab=90779648)
2025-08-14 10:18:46,438:INFO:Physical Core: 8
2025-08-14 10:18:46,438:INFO:Logical Core: 8
2025-08-14 10:18:46,438:INFO:Checking libraries
2025-08-14 10:18:46,438:INFO:System:
2025-08-14 10:18:46,438:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:18:46,438:INFO:executable: /usr/local/bin/python
2025-08-14 10:18:46,438:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:18:46,438:INFO:PyCaret required dependencies:
2025-08-14 10:18:46,673:INFO:                 pip: 24.0
2025-08-14 10:18:46,673:INFO:          setuptools: 80.9.0
2025-08-14 10:18:46,674:INFO:             pycaret: 3.3.2
2025-08-14 10:18:46,674:INFO:             IPython: 9.4.0
2025-08-14 10:18:46,674:INFO:          ipywidgets: 8.1.7
2025-08-14 10:18:46,674:INFO:                tqdm: 4.67.1
2025-08-14 10:18:46,674:INFO:               numpy: 1.26.4
2025-08-14 10:18:46,674:INFO:              pandas: 2.1.4
2025-08-14 10:18:46,674:INFO:              jinja2: 3.1.6
2025-08-14 10:18:46,674:INFO:               scipy: 1.11.4
2025-08-14 10:18:46,674:INFO:              joblib: 1.3.2
2025-08-14 10:18:46,674:INFO:             sklearn: 1.4.2
2025-08-14 10:18:46,674:INFO:                pyod: 2.0.5
2025-08-14 10:18:46,674:INFO:            imblearn: 0.13.0
2025-08-14 10:18:46,674:INFO:   category_encoders: 2.7.0
2025-08-14 10:18:46,674:INFO:            lightgbm: 4.6.0
2025-08-14 10:18:46,674:INFO:               numba: 0.61.0
2025-08-14 10:18:46,674:INFO:            requests: 2.32.4
2025-08-14 10:18:46,674:INFO:          matplotlib: 3.7.5
2025-08-14 10:18:46,674:INFO:          scikitplot: 0.3.7
2025-08-14 10:18:46,674:INFO:         yellowbrick: 1.5
2025-08-14 10:18:46,674:INFO:              plotly: 5.24.1
2025-08-14 10:18:46,674:INFO:    plotly-resampler: Not installed
2025-08-14 10:18:46,674:INFO:             kaleido: 1.0.0
2025-08-14 10:18:46,674:INFO:           schemdraw: 0.15
2025-08-14 10:18:46,674:INFO:         statsmodels: 0.14.5
2025-08-14 10:18:46,674:INFO:              sktime: 0.26.0
2025-08-14 10:18:46,674:INFO:               tbats: 1.1.3
2025-08-14 10:18:46,674:INFO:            pmdarima: 2.0.4
2025-08-14 10:18:46,674:INFO:              psutil: 7.0.0
2025-08-14 10:18:46,674:INFO:          markupsafe: 3.0.2
2025-08-14 10:18:46,674:INFO:             pickle5: Not installed
2025-08-14 10:18:46,675:INFO:         cloudpickle: 3.1.1
2025-08-14 10:18:46,675:INFO:         deprecation: 2.1.0
2025-08-14 10:18:46,675:INFO:              xxhash: 3.5.0
2025-08-14 10:18:46,675:INFO:           wurlitzer: 3.1.1
2025-08-14 10:18:46,675:INFO:PyCaret optional dependencies:
2025-08-14 10:18:47,614:INFO:                shap: 0.44.1
2025-08-14 10:18:47,614:INFO:           interpret: 0.7.2
2025-08-14 10:18:47,614:INFO:                umap: 0.5.7
2025-08-14 10:18:47,614:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:18:47,614:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:18:47,614:INFO:             autoviz: Not installed
2025-08-14 10:18:47,614:INFO:           fairlearn: 0.7.0
2025-08-14 10:18:47,614:INFO:          deepchecks: Not installed
2025-08-14 10:18:47,614:INFO:             xgboost: 3.0.4
2025-08-14 10:18:47,614:INFO:            catboost: 1.2.8
2025-08-14 10:18:47,614:INFO:              kmodes: 0.12.2
2025-08-14 10:18:47,614:INFO:             mlxtend: 0.23.4
2025-08-14 10:18:47,614:INFO:       statsforecast: 1.5.0
2025-08-14 10:18:47,614:INFO:        tune_sklearn: Not installed
2025-08-14 10:18:47,614:INFO:                 ray: Not installed
2025-08-14 10:18:47,614:INFO:            hyperopt: 0.2.7
2025-08-14 10:18:47,614:INFO:              optuna: 4.4.0
2025-08-14 10:18:47,614:INFO:               skopt: 0.10.2
2025-08-14 10:18:47,615:INFO:              mlflow: 3.2.0
2025-08-14 10:18:47,615:INFO:              gradio: 5.42.0
2025-08-14 10:18:47,615:INFO:             fastapi: 0.116.1
2025-08-14 10:18:47,615:INFO:             uvicorn: 0.35.0
2025-08-14 10:18:47,615:INFO:              m2cgen: 0.10.0
2025-08-14 10:18:47,615:INFO:           evidently: 0.4.40
2025-08-14 10:18:47,615:INFO:               fugue: 0.8.7
2025-08-14 10:18:47,615:INFO:           streamlit: 1.48.1
2025-08-14 10:18:47,615:INFO:             prophet: Not installed
2025-08-14 10:18:47,615:INFO:None
2025-08-14 10:18:47,615:INFO:Set up data.
2025-08-14 10:18:47,618:INFO:Set up folding strategy.
2025-08-14 10:18:47,618:INFO:Set up train/test split.
2025-08-14 10:18:47,621:INFO:Set up index.
2025-08-14 10:18:47,621:INFO:Assigning column types.
2025-08-14 10:18:47,623:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 10:18:47,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,648:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,649:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,682:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,683:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,684:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 10:18:47,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,707:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,708:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:18:47,730:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,731:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,731:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 10:18:47,754:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,755:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,778:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,779:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,780:INFO:Preparing preprocessing pipeline...
2025-08-14 10:18:47,780:INFO:Set up label encoding.
2025-08-14 10:18:47,780:INFO:Set up simple imputation.
2025-08-14 10:18:47,781:INFO:Set up encoding of categorical features.
2025-08-14 10:18:47,781:INFO:Set up feature normalization.
2025-08-14 10:18:47,801:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:18:47,803:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:18:47,803:INFO:Creating final display dataframe.
2025-08-14 10:18:47,854:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     607d
2025-08-14 10:18:47,877:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,878:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,902:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:18:47,903:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:18:47,904:INFO:setup() successfully completed in 1.47s...............
2025-08-14 10:18:47,904:INFO:Initializing compare_models()
2025-08-14 10:18:47,904:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 10:18:47,904:INFO:Checking exceptions
2025-08-14 10:18:47,905:INFO:Preparing display monitor
2025-08-14 10:18:47,906:INFO:Initializing Logistic Regression
2025-08-14 10:18:47,906:INFO:Total runtime is 1.148382822672526e-06 minutes
2025-08-14 10:18:47,906:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:47,906:INFO:Initializing create_model()
2025-08-14 10:18:47,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:47,906:INFO:Checking exceptions
2025-08-14 10:18:47,906:INFO:Importing libraries
2025-08-14 10:18:47,906:INFO:Copying training dataset
2025-08-14 10:18:47,908:INFO:Defining folds
2025-08-14 10:18:47,908:INFO:Declaring metric variables
2025-08-14 10:18:47,908:INFO:Importing untrained model
2025-08-14 10:18:47,908:INFO:Logistic Regression Imported successfully
2025-08-14 10:18:47,908:INFO:Starting cross validation
2025-08-14 10:18:47,909:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:49,146:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,151:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,154:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,158:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,163:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,165:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,167:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,169:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,171:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,181:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,184:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,187:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,202:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,218:INFO:Calculating mean and std
2025-08-14 10:18:49,220:INFO:Creating metrics dataframe
2025-08-14 10:18:49,228:INFO:Uploading results into container
2025-08-14 10:18:49,229:INFO:Uploading model into container now
2025-08-14 10:18:49,229:INFO:_master_model_container: 1
2025-08-14 10:18:49,230:INFO:_display_container: 2
2025-08-14 10:18:49,230:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:18:49,230:INFO:create_model() successfully completed......................................
2025-08-14 10:18:49,373:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:49,373:INFO:Creating metrics dataframe
2025-08-14 10:18:49,374:INFO:Initializing K Neighbors Classifier
2025-08-14 10:18:49,374:INFO:Total runtime is 0.02447226842244466 minutes
2025-08-14 10:18:49,374:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:49,375:INFO:Initializing create_model()
2025-08-14 10:18:49,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:49,375:INFO:Checking exceptions
2025-08-14 10:18:49,375:INFO:Importing libraries
2025-08-14 10:18:49,375:INFO:Copying training dataset
2025-08-14 10:18:49,377:INFO:Defining folds
2025-08-14 10:18:49,377:INFO:Declaring metric variables
2025-08-14 10:18:49,377:INFO:Importing untrained model
2025-08-14 10:18:49,377:INFO:K Neighbors Classifier Imported successfully
2025-08-14 10:18:49,377:INFO:Starting cross validation
2025-08-14 10:18:49,378:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:49,496:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,502:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,511:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,514:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:49,516:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,395:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,398:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,401:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,405:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,408:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,408:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,410:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,411:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,414:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,424:INFO:Calculating mean and std
2025-08-14 10:18:50,425:INFO:Creating metrics dataframe
2025-08-14 10:18:50,427:INFO:Uploading results into container
2025-08-14 10:18:50,427:INFO:Uploading model into container now
2025-08-14 10:18:50,428:INFO:_master_model_container: 2
2025-08-14 10:18:50,428:INFO:_display_container: 2
2025-08-14 10:18:50,428:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 10:18:50,428:INFO:create_model() successfully completed......................................
2025-08-14 10:18:50,542:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:50,542:INFO:Creating metrics dataframe
2025-08-14 10:18:50,543:INFO:Initializing Naive Bayes
2025-08-14 10:18:50,543:INFO:Total runtime is 0.043952476978302 minutes
2025-08-14 10:18:50,543:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:50,543:INFO:Initializing create_model()
2025-08-14 10:18:50,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:50,543:INFO:Checking exceptions
2025-08-14 10:18:50,543:INFO:Importing libraries
2025-08-14 10:18:50,543:INFO:Copying training dataset
2025-08-14 10:18:50,546:INFO:Defining folds
2025-08-14 10:18:50,546:INFO:Declaring metric variables
2025-08-14 10:18:50,546:INFO:Importing untrained model
2025-08-14 10:18:50,547:INFO:Naive Bayes Imported successfully
2025-08-14 10:18:50,547:INFO:Starting cross validation
2025-08-14 10:18:50,547:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:50,612:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,612:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,615:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,615:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,616:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,620:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,620:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,621:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,622:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,624:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,625:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,627:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,629:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,633:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,634:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,645:INFO:Calculating mean and std
2025-08-14 10:18:50,646:INFO:Creating metrics dataframe
2025-08-14 10:18:50,647:INFO:Uploading results into container
2025-08-14 10:18:50,647:INFO:Uploading model into container now
2025-08-14 10:18:50,647:INFO:_master_model_container: 3
2025-08-14 10:18:50,648:INFO:_display_container: 2
2025-08-14 10:18:50,648:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 10:18:50,648:INFO:create_model() successfully completed......................................
2025-08-14 10:18:50,749:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:50,750:INFO:Creating metrics dataframe
2025-08-14 10:18:50,751:INFO:Initializing Decision Tree Classifier
2025-08-14 10:18:50,751:INFO:Total runtime is 0.04741254647572835 minutes
2025-08-14 10:18:50,751:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:50,751:INFO:Initializing create_model()
2025-08-14 10:18:50,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:50,751:INFO:Checking exceptions
2025-08-14 10:18:50,751:INFO:Importing libraries
2025-08-14 10:18:50,751:INFO:Copying training dataset
2025-08-14 10:18:50,754:INFO:Defining folds
2025-08-14 10:18:50,754:INFO:Declaring metric variables
2025-08-14 10:18:50,754:INFO:Importing untrained model
2025-08-14 10:18:50,754:INFO:Decision Tree Classifier Imported successfully
2025-08-14 10:18:50,755:INFO:Starting cross validation
2025-08-14 10:18:50,755:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:50,785:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,786:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,786:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,788:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,790:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,791:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,791:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,791:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,792:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,793:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,794:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,795:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,798:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,805:INFO:Calculating mean and std
2025-08-14 10:18:50,805:INFO:Creating metrics dataframe
2025-08-14 10:18:50,806:INFO:Uploading results into container
2025-08-14 10:18:50,806:INFO:Uploading model into container now
2025-08-14 10:18:50,806:INFO:_master_model_container: 4
2025-08-14 10:18:50,806:INFO:_display_container: 2
2025-08-14 10:18:50,806:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 10:18:50,806:INFO:create_model() successfully completed......................................
2025-08-14 10:18:50,873:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:50,873:INFO:Creating metrics dataframe
2025-08-14 10:18:50,874:INFO:Initializing SVM - Linear Kernel
2025-08-14 10:18:50,874:INFO:Total runtime is 0.049462048212687175 minutes
2025-08-14 10:18:50,874:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:50,874:INFO:Initializing create_model()
2025-08-14 10:18:50,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:50,874:INFO:Checking exceptions
2025-08-14 10:18:50,874:INFO:Importing libraries
2025-08-14 10:18:50,874:INFO:Copying training dataset
2025-08-14 10:18:50,876:INFO:Defining folds
2025-08-14 10:18:50,876:INFO:Declaring metric variables
2025-08-14 10:18:50,876:INFO:Importing untrained model
2025-08-14 10:18:50,876:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 10:18:50,876:INFO:Starting cross validation
2025-08-14 10:18:50,877:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:50,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,910:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,911:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,912:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,914:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,914:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,914:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,914:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,916:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,917:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,917:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,917:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,920:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,920:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:50,939:INFO:Calculating mean and std
2025-08-14 10:18:50,939:INFO:Creating metrics dataframe
2025-08-14 10:18:50,940:INFO:Uploading results into container
2025-08-14 10:18:50,940:INFO:Uploading model into container now
2025-08-14 10:18:50,940:INFO:_master_model_container: 5
2025-08-14 10:18:50,940:INFO:_display_container: 2
2025-08-14 10:18:50,941:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 10:18:50,941:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,006:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,006:INFO:Creating metrics dataframe
2025-08-14 10:18:51,007:INFO:Initializing Ridge Classifier
2025-08-14 10:18:51,007:INFO:Total runtime is 0.051685635248819986 minutes
2025-08-14 10:18:51,007:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,007:INFO:Initializing create_model()
2025-08-14 10:18:51,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,007:INFO:Checking exceptions
2025-08-14 10:18:51,007:INFO:Importing libraries
2025-08-14 10:18:51,008:INFO:Copying training dataset
2025-08-14 10:18:51,009:INFO:Defining folds
2025-08-14 10:18:51,009:INFO:Declaring metric variables
2025-08-14 10:18:51,010:INFO:Importing untrained model
2025-08-14 10:18:51,010:INFO:Ridge Classifier Imported successfully
2025-08-14 10:18:51,010:INFO:Starting cross validation
2025-08-14 10:18:51,010:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,049:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,052:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,053:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,054:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,055:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,057:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,060:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,067:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,086:INFO:Calculating mean and std
2025-08-14 10:18:51,087:INFO:Creating metrics dataframe
2025-08-14 10:18:51,089:INFO:Uploading results into container
2025-08-14 10:18:51,089:INFO:Uploading model into container now
2025-08-14 10:18:51,089:INFO:_master_model_container: 6
2025-08-14 10:18:51,089:INFO:_display_container: 2
2025-08-14 10:18:51,090:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 10:18:51,090:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,169:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,169:INFO:Creating metrics dataframe
2025-08-14 10:18:51,170:INFO:Initializing Random Forest Classifier
2025-08-14 10:18:51,170:INFO:Total runtime is 0.054401687781016034 minutes
2025-08-14 10:18:51,170:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,170:INFO:Initializing create_model()
2025-08-14 10:18:51,170:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,170:INFO:Checking exceptions
2025-08-14 10:18:51,170:INFO:Importing libraries
2025-08-14 10:18:51,170:INFO:Copying training dataset
2025-08-14 10:18:51,172:INFO:Defining folds
2025-08-14 10:18:51,172:INFO:Declaring metric variables
2025-08-14 10:18:51,172:INFO:Importing untrained model
2025-08-14 10:18:51,173:INFO:Random Forest Classifier Imported successfully
2025-08-14 10:18:51,173:INFO:Starting cross validation
2025-08-14 10:18:51,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,341:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,350:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,364:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,365:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,367:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,372:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,372:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,390:INFO:Calculating mean and std
2025-08-14 10:18:51,390:INFO:Creating metrics dataframe
2025-08-14 10:18:51,391:INFO:Uploading results into container
2025-08-14 10:18:51,391:INFO:Uploading model into container now
2025-08-14 10:18:51,391:INFO:_master_model_container: 7
2025-08-14 10:18:51,391:INFO:_display_container: 2
2025-08-14 10:18:51,392:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 10:18:51,392:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,460:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,460:INFO:Creating metrics dataframe
2025-08-14 10:18:51,461:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 10:18:51,461:INFO:Total runtime is 0.05924850304921468 minutes
2025-08-14 10:18:51,461:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,461:INFO:Initializing create_model()
2025-08-14 10:18:51,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,461:INFO:Checking exceptions
2025-08-14 10:18:51,461:INFO:Importing libraries
2025-08-14 10:18:51,461:INFO:Copying training dataset
2025-08-14 10:18:51,463:INFO:Defining folds
2025-08-14 10:18:51,463:INFO:Declaring metric variables
2025-08-14 10:18:51,463:INFO:Importing untrained model
2025-08-14 10:18:51,463:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 10:18:51,463:INFO:Starting cross validation
2025-08-14 10:18:51,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,485:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:18:51,485:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:18:51,486:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:18:51,487:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:18:51,493:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:18:51,494:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:18:51,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:18:51,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,497:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:18:51,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:18:51,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:18:51,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:18:51,501:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,503:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,503:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 10:18:51,503:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,503:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,507:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,509:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,511:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,513:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:18:51,514:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,524:INFO:Calculating mean and std
2025-08-14 10:18:51,525:INFO:Creating metrics dataframe
2025-08-14 10:18:51,525:INFO:Uploading results into container
2025-08-14 10:18:51,526:INFO:Uploading model into container now
2025-08-14 10:18:51,526:INFO:_master_model_container: 8
2025-08-14 10:18:51,526:INFO:_display_container: 2
2025-08-14 10:18:51,526:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 10:18:51,526:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,593:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,593:INFO:Creating metrics dataframe
2025-08-14 10:18:51,594:INFO:Initializing Ada Boost Classifier
2025-08-14 10:18:51,594:INFO:Total runtime is 0.0614622433980306 minutes
2025-08-14 10:18:51,594:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,594:INFO:Initializing create_model()
2025-08-14 10:18:51,594:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,594:INFO:Checking exceptions
2025-08-14 10:18:51,594:INFO:Importing libraries
2025-08-14 10:18:51,594:INFO:Copying training dataset
2025-08-14 10:18:51,596:INFO:Defining folds
2025-08-14 10:18:51,596:INFO:Declaring metric variables
2025-08-14 10:18:51,596:INFO:Importing untrained model
2025-08-14 10:18:51,596:INFO:Ada Boost Classifier Imported successfully
2025-08-14 10:18:51,596:INFO:Starting cross validation
2025-08-14 10:18:51,596:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,613:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:18:51,614:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:18:51,616:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:18:51,618:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:18:51,622:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:18:51,624:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,626:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,628:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,628:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,630:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,630:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,631:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,632:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,633:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,633:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,633:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,634:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,636:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,636:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,639:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,644:INFO:Calculating mean and std
2025-08-14 10:18:51,644:INFO:Creating metrics dataframe
2025-08-14 10:18:51,645:INFO:Uploading results into container
2025-08-14 10:18:51,645:INFO:Uploading model into container now
2025-08-14 10:18:51,645:INFO:_master_model_container: 9
2025-08-14 10:18:51,645:INFO:_display_container: 2
2025-08-14 10:18:51,645:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 10:18:51,645:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,710:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,710:INFO:Creating metrics dataframe
2025-08-14 10:18:51,711:INFO:Initializing Gradient Boosting Classifier
2025-08-14 10:18:51,711:INFO:Total runtime is 0.06342242161432902 minutes
2025-08-14 10:18:51,711:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,712:INFO:Initializing create_model()
2025-08-14 10:18:51,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,712:INFO:Checking exceptions
2025-08-14 10:18:51,712:INFO:Importing libraries
2025-08-14 10:18:51,712:INFO:Copying training dataset
2025-08-14 10:18:51,713:INFO:Defining folds
2025-08-14 10:18:51,713:INFO:Declaring metric variables
2025-08-14 10:18:51,713:INFO:Importing untrained model
2025-08-14 10:18:51,714:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 10:18:51,714:INFO:Starting cross validation
2025-08-14 10:18:51,714:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,823:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,824:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,825:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,825:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,826:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,827:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,829:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,829:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,829:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,829:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,831:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,832:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,832:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,832:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,835:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,840:INFO:Calculating mean and std
2025-08-14 10:18:51,841:INFO:Creating metrics dataframe
2025-08-14 10:18:51,841:INFO:Uploading results into container
2025-08-14 10:18:51,842:INFO:Uploading model into container now
2025-08-14 10:18:51,842:INFO:_master_model_container: 10
2025-08-14 10:18:51,842:INFO:_display_container: 2
2025-08-14 10:18:51,842:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 10:18:51,842:INFO:create_model() successfully completed......................................
2025-08-14 10:18:51,907:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:51,907:INFO:Creating metrics dataframe
2025-08-14 10:18:51,908:INFO:Initializing Linear Discriminant Analysis
2025-08-14 10:18:51,908:INFO:Total runtime is 0.06670261224110921 minutes
2025-08-14 10:18:51,908:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:51,908:INFO:Initializing create_model()
2025-08-14 10:18:51,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:51,908:INFO:Checking exceptions
2025-08-14 10:18:51,908:INFO:Importing libraries
2025-08-14 10:18:51,909:INFO:Copying training dataset
2025-08-14 10:18:51,910:INFO:Defining folds
2025-08-14 10:18:51,910:INFO:Declaring metric variables
2025-08-14 10:18:51,910:INFO:Importing untrained model
2025-08-14 10:18:51,910:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 10:18:51,910:INFO:Starting cross validation
2025-08-14 10:18:51,911:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:51,941:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,944:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,945:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,945:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,948:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,949:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,952:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,953:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,953:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,956:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:51,961:INFO:Calculating mean and std
2025-08-14 10:18:51,962:INFO:Creating metrics dataframe
2025-08-14 10:18:51,962:INFO:Uploading results into container
2025-08-14 10:18:51,963:INFO:Uploading model into container now
2025-08-14 10:18:51,963:INFO:_master_model_container: 11
2025-08-14 10:18:51,963:INFO:_display_container: 2
2025-08-14 10:18:51,963:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 10:18:51,963:INFO:create_model() successfully completed......................................
2025-08-14 10:18:52,029:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:52,029:INFO:Creating metrics dataframe
2025-08-14 10:18:52,030:INFO:Initializing Extra Trees Classifier
2025-08-14 10:18:52,030:INFO:Total runtime is 0.06873067617416381 minutes
2025-08-14 10:18:52,030:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:52,030:INFO:Initializing create_model()
2025-08-14 10:18:52,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:52,030:INFO:Checking exceptions
2025-08-14 10:18:52,030:INFO:Importing libraries
2025-08-14 10:18:52,030:INFO:Copying training dataset
2025-08-14 10:18:52,032:INFO:Defining folds
2025-08-14 10:18:52,032:INFO:Declaring metric variables
2025-08-14 10:18:52,032:INFO:Importing untrained model
2025-08-14 10:18:52,032:INFO:Extra Trees Classifier Imported successfully
2025-08-14 10:18:52,032:INFO:Starting cross validation
2025-08-14 10:18:52,033:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:52,167:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,170:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,173:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,173:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,173:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,175:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,175:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,179:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,182:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,182:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,182:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,186:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,202:INFO:Calculating mean and std
2025-08-14 10:18:52,203:INFO:Creating metrics dataframe
2025-08-14 10:18:52,204:INFO:Uploading results into container
2025-08-14 10:18:52,204:INFO:Uploading model into container now
2025-08-14 10:18:52,204:INFO:_master_model_container: 12
2025-08-14 10:18:52,204:INFO:_display_container: 2
2025-08-14 10:18:52,204:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 10:18:52,204:INFO:create_model() successfully completed......................................
2025-08-14 10:18:52,272:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:52,272:INFO:Creating metrics dataframe
2025-08-14 10:18:52,273:INFO:Initializing Extreme Gradient Boosting
2025-08-14 10:18:52,273:INFO:Total runtime is 0.07277937730153401 minutes
2025-08-14 10:18:52,273:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:52,273:INFO:Initializing create_model()
2025-08-14 10:18:52,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:52,273:INFO:Checking exceptions
2025-08-14 10:18:52,273:INFO:Importing libraries
2025-08-14 10:18:52,273:INFO:Copying training dataset
2025-08-14 10:18:52,275:INFO:Defining folds
2025-08-14 10:18:52,275:INFO:Declaring metric variables
2025-08-14 10:18:52,275:INFO:Importing untrained model
2025-08-14 10:18:52,275:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 10:18:52,275:INFO:Starting cross validation
2025-08-14 10:18:52,276:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:52,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,338:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,338:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,340:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,341:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,341:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,346:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,346:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:52,359:INFO:Calculating mean and std
2025-08-14 10:18:52,359:INFO:Creating metrics dataframe
2025-08-14 10:18:52,360:INFO:Uploading results into container
2025-08-14 10:18:52,360:INFO:Uploading model into container now
2025-08-14 10:18:52,360:INFO:_master_model_container: 13
2025-08-14 10:18:52,360:INFO:_display_container: 2
2025-08-14 10:18:52,360:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 10:18:52,360:INFO:create_model() successfully completed......................................
2025-08-14 10:18:52,427:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:52,428:INFO:Creating metrics dataframe
2025-08-14 10:18:52,429:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 10:18:52,429:INFO:Total runtime is 0.07537649075190225 minutes
2025-08-14 10:18:52,429:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:52,429:INFO:Initializing create_model()
2025-08-14 10:18:52,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:52,429:INFO:Checking exceptions
2025-08-14 10:18:52,429:INFO:Importing libraries
2025-08-14 10:18:52,429:INFO:Copying training dataset
2025-08-14 10:18:52,431:INFO:Defining folds
2025-08-14 10:18:52,431:INFO:Declaring metric variables
2025-08-14 10:18:52,431:INFO:Importing untrained model
2025-08-14 10:18:52,431:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 10:18:52,431:INFO:Starting cross validation
2025-08-14 10:18:52,432:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:18:55,032:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,035:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,041:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,064:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,067:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,158:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,162:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,165:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,178:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,181:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,184:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,189:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,194:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:18:55,205:INFO:Calculating mean and std
2025-08-14 10:18:55,206:INFO:Creating metrics dataframe
2025-08-14 10:18:55,207:INFO:Uploading results into container
2025-08-14 10:18:55,207:INFO:Uploading model into container now
2025-08-14 10:18:55,207:INFO:_master_model_container: 14
2025-08-14 10:18:55,207:INFO:_display_container: 2
2025-08-14 10:18:55,208:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 10:18:55,208:INFO:create_model() successfully completed......................................
2025-08-14 10:18:55,283:INFO:SubProcess create_model() end ==================================
2025-08-14 10:18:55,283:INFO:Creating metrics dataframe
2025-08-14 10:18:55,284:INFO:Initializing CatBoost Classifier
2025-08-14 10:18:55,284:INFO:Total runtime is 0.12297292550404865 minutes
2025-08-14 10:18:55,284:INFO:SubProcess create_model() called ==================================
2025-08-14 10:18:55,285:INFO:Initializing create_model()
2025-08-14 10:18:55,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:18:55,285:INFO:Checking exceptions
2025-08-14 10:18:55,285:INFO:Importing libraries
2025-08-14 10:18:55,285:INFO:Copying training dataset
2025-08-14 10:18:55,287:INFO:Defining folds
2025-08-14 10:18:55,287:INFO:Declaring metric variables
2025-08-14 10:18:55,287:INFO:Importing untrained model
2025-08-14 10:18:55,287:INFO:CatBoost Classifier Imported successfully
2025-08-14 10:18:55,287:INFO:Starting cross validation
2025-08-14 10:18:55,288:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:19:00,450:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,456:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,460:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,462:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,469:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,471:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,474:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,483:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,563:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,566:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,566:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,568:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,573:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,589:INFO:Calculating mean and std
2025-08-14 10:19:00,590:INFO:Creating metrics dataframe
2025-08-14 10:19:00,598:INFO:Uploading results into container
2025-08-14 10:19:00,600:INFO:Uploading model into container now
2025-08-14 10:19:00,601:INFO:_master_model_container: 15
2025-08-14 10:19:00,601:INFO:_display_container: 2
2025-08-14 10:19:00,601:INFO:<catboost.core.CatBoostClassifier object at 0xffff2c115a10>
2025-08-14 10:19:00,601:INFO:create_model() successfully completed......................................
2025-08-14 10:19:00,769:INFO:SubProcess create_model() end ==================================
2025-08-14 10:19:00,769:INFO:Creating metrics dataframe
2025-08-14 10:19:00,770:INFO:Initializing Dummy Classifier
2025-08-14 10:19:00,771:INFO:Total runtime is 0.21440905729929605 minutes
2025-08-14 10:19:00,771:INFO:SubProcess create_model() called ==================================
2025-08-14 10:19:00,771:INFO:Initializing create_model()
2025-08-14 10:19:00,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff1af07d90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:19:00,771:INFO:Checking exceptions
2025-08-14 10:19:00,771:INFO:Importing libraries
2025-08-14 10:19:00,771:INFO:Copying training dataset
2025-08-14 10:19:00,773:INFO:Defining folds
2025-08-14 10:19:00,773:INFO:Declaring metric variables
2025-08-14 10:19:00,773:INFO:Importing untrained model
2025-08-14 10:19:00,773:INFO:Dummy Classifier Imported successfully
2025-08-14 10:19:00,774:INFO:Starting cross validation
2025-08-14 10:19:00,774:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:19:00,836:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,840:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,842:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,844:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,846:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:19:00,846:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,847:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:19:00,848:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,849:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,850:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,851:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,852:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,854:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:19:00,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:19:00,856:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,856:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,856:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,857:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:19:00,859:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:19:00,872:INFO:Calculating mean and std
2025-08-14 10:19:00,872:INFO:Creating metrics dataframe
2025-08-14 10:19:00,873:INFO:Uploading results into container
2025-08-14 10:19:00,873:INFO:Uploading model into container now
2025-08-14 10:19:00,874:INFO:_master_model_container: 16
2025-08-14 10:19:00,874:INFO:_display_container: 2
2025-08-14 10:19:00,874:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 10:19:00,874:INFO:create_model() successfully completed......................................
2025-08-14 10:19:00,940:INFO:SubProcess create_model() end ==================================
2025-08-14 10:19:00,940:INFO:Creating metrics dataframe
2025-08-14 10:19:00,942:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 10:19:00,942:INFO:Initializing create_model()
2025-08-14 10:19:00,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:19:00,942:INFO:Checking exceptions
2025-08-14 10:19:00,943:INFO:Importing libraries
2025-08-14 10:19:00,943:INFO:Copying training dataset
2025-08-14 10:19:00,945:INFO:Defining folds
2025-08-14 10:19:00,945:INFO:Declaring metric variables
2025-08-14 10:19:00,945:INFO:Importing untrained model
2025-08-14 10:19:00,945:INFO:Declaring custom model
2025-08-14 10:19:00,945:INFO:Logistic Regression Imported successfully
2025-08-14 10:19:00,945:INFO:Cross validation set to False
2025-08-14 10:19:00,945:INFO:Fitting Model
2025-08-14 10:19:00,969:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:19:00,970:INFO:create_model() successfully completed......................................
2025-08-14 10:19:01,073:INFO:_master_model_container: 16
2025-08-14 10:19:01,073:INFO:_display_container: 2
2025-08-14 10:19:01,073:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:19:01,073:INFO:compare_models() successfully completed......................................
2025-08-14 10:19:01,073:INFO:Initializing finalize_model()
2025-08-14 10:19:01,073:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 10:19:01,074:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:19:01,075:INFO:Initializing create_model()
2025-08-14 10:19:01,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6d370750>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:19:01,075:INFO:Checking exceptions
2025-08-14 10:19:01,075:INFO:Importing libraries
2025-08-14 10:19:01,075:INFO:Copying training dataset
2025-08-14 10:19:01,075:INFO:Defining folds
2025-08-14 10:19:01,075:INFO:Declaring metric variables
2025-08-14 10:19:01,075:INFO:Importing untrained model
2025-08-14 10:19:01,075:INFO:Declaring custom model
2025-08-14 10:19:01,076:INFO:Logistic Regression Imported successfully
2025-08-14 10:19:01,076:INFO:Cross validation set to False
2025-08-14 10:19:01,076:INFO:Fitting Model
2025-08-14 10:19:01,100:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:19:01,100:INFO:create_model() successfully completed......................................
2025-08-14 10:19:01,194:INFO:_master_model_container: 16
2025-08-14 10:19:01,194:INFO:_display_container: 2
2025-08-14 10:19:01,197:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:19:01,197:INFO:finalize_model() successfully completed......................................
2025-08-14 10:19:01,270:INFO:Initializing save_model()
2025-08-14 10:19:01,270:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 10:19:01,270:INFO:Adding model into prep_pipe
2025-08-14 10:19:01,270:WARNING:Only Model saved as it was a pipeline.
2025-08-14 10:19:01,273:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 10:19:01,275:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:19:01,275:INFO:save_model() successfully completed......................................
2025-08-14 10:19:01,372:INFO:PyCaret ClusteringExperiment
2025-08-14 10:19:01,372:INFO:Logging name: cluster-default-name
2025-08-14 10:19:01,372:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 10:19:01,372:INFO:version 3.3.2
2025-08-14 10:19:01,372:INFO:Initializing setup()
2025-08-14 10:19:01,372:INFO:self.USI: 7624
2025-08-14 10:19:01,372:INFO:self._variable_keys: {'memory', 'idx', 'html_param', 'seed', 'pipeline', 'gpu_n_jobs_param', '_ml_usecase', 'USI', 'gpu_param', '_available_plots', 'exp_id', 'n_jobs_param', 'logging_param', 'exp_name_log', 'X', 'data', 'log_plots_param'}
2025-08-14 10:19:01,372:INFO:Checking environment
2025-08-14 10:19:01,373:INFO:python_version: 3.11.13
2025-08-14 10:19:01,373:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:19:01,373:INFO:machine: aarch64
2025-08-14 10:19:01,373:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:19:01,373:INFO:Memory: svmem(total=4109803520, available=1253216256, percent=69.5, used=2694217728, free=552296448, active=3032162304, inactive=317911040, buffers=71815168, cached=791474176, shared=1093632, slab=100139008)
2025-08-14 10:19:01,374:INFO:Physical Core: 8
2025-08-14 10:19:01,374:INFO:Logical Core: 8
2025-08-14 10:19:01,374:INFO:Checking libraries
2025-08-14 10:19:01,374:INFO:System:
2025-08-14 10:19:01,374:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:19:01,374:INFO:executable: /usr/local/bin/python
2025-08-14 10:19:01,375:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:19:01,375:INFO:PyCaret required dependencies:
2025-08-14 10:19:01,375:INFO:                 pip: 24.0
2025-08-14 10:19:01,375:INFO:          setuptools: 80.9.0
2025-08-14 10:19:01,375:INFO:             pycaret: 3.3.2
2025-08-14 10:19:01,375:INFO:             IPython: 9.4.0
2025-08-14 10:19:01,375:INFO:          ipywidgets: 8.1.7
2025-08-14 10:19:01,375:INFO:                tqdm: 4.67.1
2025-08-14 10:19:01,375:INFO:               numpy: 1.26.4
2025-08-14 10:19:01,375:INFO:              pandas: 2.1.4
2025-08-14 10:19:01,375:INFO:              jinja2: 3.1.6
2025-08-14 10:19:01,375:INFO:               scipy: 1.11.4
2025-08-14 10:19:01,375:INFO:              joblib: 1.3.2
2025-08-14 10:19:01,375:INFO:             sklearn: 1.4.2
2025-08-14 10:19:01,375:INFO:                pyod: 2.0.5
2025-08-14 10:19:01,375:INFO:            imblearn: 0.13.0
2025-08-14 10:19:01,375:INFO:   category_encoders: 2.7.0
2025-08-14 10:19:01,375:INFO:            lightgbm: 4.6.0
2025-08-14 10:19:01,375:INFO:               numba: 0.61.0
2025-08-14 10:19:01,375:INFO:            requests: 2.32.4
2025-08-14 10:19:01,375:INFO:          matplotlib: 3.7.5
2025-08-14 10:19:01,375:INFO:          scikitplot: 0.3.7
2025-08-14 10:19:01,375:INFO:         yellowbrick: 1.5
2025-08-14 10:19:01,375:INFO:              plotly: 5.24.1
2025-08-14 10:19:01,375:INFO:    plotly-resampler: Not installed
2025-08-14 10:19:01,375:INFO:             kaleido: 1.0.0
2025-08-14 10:19:01,375:INFO:           schemdraw: 0.15
2025-08-14 10:19:01,376:INFO:         statsmodels: 0.14.5
2025-08-14 10:19:01,376:INFO:              sktime: 0.26.0
2025-08-14 10:19:01,376:INFO:               tbats: 1.1.3
2025-08-14 10:19:01,376:INFO:            pmdarima: 2.0.4
2025-08-14 10:19:01,376:INFO:              psutil: 7.0.0
2025-08-14 10:19:01,376:INFO:          markupsafe: 3.0.2
2025-08-14 10:19:01,376:INFO:             pickle5: Not installed
2025-08-14 10:19:01,376:INFO:         cloudpickle: 3.1.1
2025-08-14 10:19:01,376:INFO:         deprecation: 2.1.0
2025-08-14 10:19:01,376:INFO:              xxhash: 3.5.0
2025-08-14 10:19:01,376:INFO:           wurlitzer: 3.1.1
2025-08-14 10:19:01,376:INFO:PyCaret optional dependencies:
2025-08-14 10:19:01,376:INFO:                shap: 0.44.1
2025-08-14 10:19:01,376:INFO:           interpret: 0.7.2
2025-08-14 10:19:01,377:INFO:                umap: 0.5.7
2025-08-14 10:19:01,377:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:19:01,377:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:19:01,377:INFO:             autoviz: Not installed
2025-08-14 10:19:01,377:INFO:           fairlearn: 0.7.0
2025-08-14 10:19:01,377:INFO:          deepchecks: Not installed
2025-08-14 10:19:01,377:INFO:             xgboost: 3.0.4
2025-08-14 10:19:01,377:INFO:            catboost: 1.2.8
2025-08-14 10:19:01,377:INFO:              kmodes: 0.12.2
2025-08-14 10:19:01,377:INFO:             mlxtend: 0.23.4
2025-08-14 10:19:01,378:INFO:       statsforecast: 1.5.0
2025-08-14 10:19:01,378:INFO:        tune_sklearn: Not installed
2025-08-14 10:19:01,378:INFO:                 ray: Not installed
2025-08-14 10:19:01,378:INFO:            hyperopt: 0.2.7
2025-08-14 10:19:01,378:INFO:              optuna: 4.4.0
2025-08-14 10:19:01,378:INFO:               skopt: 0.10.2
2025-08-14 10:19:01,378:INFO:              mlflow: 3.2.0
2025-08-14 10:19:01,378:INFO:              gradio: 5.42.0
2025-08-14 10:19:01,378:INFO:             fastapi: 0.116.1
2025-08-14 10:19:01,378:INFO:             uvicorn: 0.35.0
2025-08-14 10:19:01,378:INFO:              m2cgen: 0.10.0
2025-08-14 10:19:01,378:INFO:           evidently: 0.4.40
2025-08-14 10:19:01,378:INFO:               fugue: 0.8.7
2025-08-14 10:19:01,378:INFO:           streamlit: 1.48.1
2025-08-14 10:19:01,379:INFO:             prophet: Not installed
2025-08-14 10:19:01,379:INFO:None
2025-08-14 10:19:01,379:INFO:Set up data.
2025-08-14 10:19:01,380:INFO:Set up index.
2025-08-14 10:19:01,380:INFO:Assigning column types.
2025-08-14 10:19:01,381:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 10:19:01,382:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:19:01,382:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,384:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:19:01,384:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,384:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 10:19:01,384:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,384:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,384:INFO:Preparing preprocessing pipeline...
2025-08-14 10:19:01,384:INFO:Set up simple imputation.
2025-08-14 10:19:01,384:INFO:Set up feature normalization.
2025-08-14 10:19:01,389:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:19:01,391:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:19:01,391:INFO:Creating final display dataframe.
2025-08-14 10:19:01,397:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  7624
2025-08-14 10:19:01,397:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,397:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:19:01,397:INFO:setup() successfully completed in 0.03s...............
2025-08-14 10:19:01,397:INFO:Initializing create_model()
2025-08-14 10:19:01,397:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff2c835810>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 10:19:01,397:INFO:Checking exceptions
2025-08-14 10:19:01,402:INFO:Importing untrained model
2025-08-14 10:19:01,403:INFO:K-Means Clustering Imported successfully
2025-08-14 10:19:01,403:INFO:Fitting Model
2025-08-14 10:19:01,596:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:19:01,601:INFO:create_models() successfully completed......................................
2025-08-14 10:19:01,601:INFO:Uploading results into container
2025-08-14 10:19:01,602:INFO:Uploading model into container now
2025-08-14 10:19:01,607:INFO:_master_model_container: 1
2025-08-14 10:19:01,607:INFO:_display_container: 2
2025-08-14 10:19:01,608:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:19:01,608:INFO:create_model() successfully completed......................................
2025-08-14 10:19:01,700:INFO:Initializing assign_model()
2025-08-14 10:19:01,700:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff2c835810>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 10:19:01,700:INFO:Checking exceptions
2025-08-14 10:19:01,700:INFO:Determining Trained Model
2025-08-14 10:19:01,700:INFO:Trained Model : K-Means Clustering
2025-08-14 10:19:01,700:INFO:Copying data
2025-08-14 10:19:01,701:INFO:(3000, 12)
2025-08-14 10:19:01,701:INFO:assign_model() successfully completed......................................
2025-08-14 10:19:01,703:INFO:Initializing save_model()
2025-08-14 10:19:01,703:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 10:19:01,703:INFO:Adding model into prep_pipe
2025-08-14 10:19:01,706:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 10:19:01,707:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 10:19:01,707:INFO:save_model() successfully completed......................................
2025-08-14 10:19:16,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:19:16,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:19:16,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:19:16,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:19:16,958:INFO:Initializing load_model()
2025-08-14 10:19:16,958:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 10:19:17,151:INFO:Initializing load_model()
2025-08-14 10:19:17,151:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 10:20:24,447:INFO:Initializing predict_model()
2025-08-14 10:20:24,448:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff5a4c3590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffffaa59bd80>)
2025-08-14 10:20:24,449:INFO:Checking exceptions
2025-08-14 10:20:24,449:INFO:Preloading libraries
2025-08-14 10:20:24,450:INFO:Set up data.
2025-08-14 10:20:24,454:INFO:Set up index.
2025-08-14 10:20:24,459:INFO:Initializing predict_model()
2025-08-14 10:20:24,459:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff5a4c1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff8847f060>)
2025-08-14 10:20:24,459:INFO:Checking exceptions
2025-08-14 10:20:24,459:INFO:Preloading libraries
2025-08-14 10:20:24,460:INFO:Set up data.
2025-08-14 10:20:24,462:INFO:Set up index.
2025-08-14 10:21:29,509:INFO:Initializing predict_model()
2025-08-14 10:21:29,512:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff59beac90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffffaa59b9c0>)
2025-08-14 10:21:29,512:INFO:Checking exceptions
2025-08-14 10:21:29,512:INFO:Preloading libraries
2025-08-14 10:21:29,513:INFO:Set up data.
2025-08-14 10:21:29,519:INFO:Set up index.
2025-08-14 10:21:29,525:INFO:Initializing predict_model()
2025-08-14 10:21:29,525:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff60e28790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff5a955120>)
2025-08-14 10:21:29,525:INFO:Checking exceptions
2025-08-14 10:21:29,525:INFO:Preloading libraries
2025-08-14 10:21:29,525:INFO:Set up data.
2025-08-14 10:21:29,528:INFO:Set up index.
2025-08-14 10:30:31,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:31,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:31,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:31,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:53,366:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:53,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:53,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:30:53,367:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:33:28,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:33:28,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:33:28,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:33:28,396:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:44:49,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:44:49,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:44:49,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:44:49,677:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:44:50,152:INFO:PyCaret ClassificationExperiment
2025-08-14 10:44:50,153:INFO:Logging name: clf-default-name
2025-08-14 10:44:50,153:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 10:44:50,153:INFO:version 3.3.2
2025-08-14 10:44:50,153:INFO:Initializing setup()
2025-08-14 10:44:50,153:INFO:self.USI: 1cdd
2025-08-14 10:44:50,153:INFO:self._variable_keys: {'fix_imbalance', 'y', 'is_multiclass', 'USI', 'X_test', '_available_plots', 'X', 'y_train', 'X_train', 'memory', 'target_param', 'fold_groups_param', 'y_test', 'exp_name_log', 'html_param', 'seed', 'exp_id', 'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'pipeline', 'n_jobs_param', 'data', '_ml_usecase', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'idx'}
2025-08-14 10:44:50,153:INFO:Checking environment
2025-08-14 10:44:50,153:INFO:python_version: 3.11.13
2025-08-14 10:44:50,153:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:44:50,153:INFO:machine: aarch64
2025-08-14 10:44:50,153:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:44:50,153:INFO:Memory: svmem(total=4109803520, available=3424305152, percent=16.7, used=524627968, free=2724052992, active=898002944, inactive=318726144, buffers=72466432, cached=788656128, shared=1060864, slab=91279360)
2025-08-14 10:44:50,153:INFO:Physical Core: 8
2025-08-14 10:44:50,153:INFO:Logical Core: 8
2025-08-14 10:44:50,153:INFO:Checking libraries
2025-08-14 10:44:50,153:INFO:System:
2025-08-14 10:44:50,153:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:44:50,153:INFO:executable: /usr/local/bin/python
2025-08-14 10:44:50,153:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:44:50,153:INFO:PyCaret required dependencies:
2025-08-14 10:44:50,382:INFO:                 pip: 24.0
2025-08-14 10:44:50,382:INFO:          setuptools: 80.9.0
2025-08-14 10:44:50,382:INFO:             pycaret: 3.3.2
2025-08-14 10:44:50,382:INFO:             IPython: 9.4.0
2025-08-14 10:44:50,382:INFO:          ipywidgets: 8.1.7
2025-08-14 10:44:50,382:INFO:                tqdm: 4.67.1
2025-08-14 10:44:50,382:INFO:               numpy: 1.26.4
2025-08-14 10:44:50,382:INFO:              pandas: 2.1.4
2025-08-14 10:44:50,382:INFO:              jinja2: 3.1.6
2025-08-14 10:44:50,382:INFO:               scipy: 1.11.4
2025-08-14 10:44:50,382:INFO:              joblib: 1.3.2
2025-08-14 10:44:50,382:INFO:             sklearn: 1.4.2
2025-08-14 10:44:50,382:INFO:                pyod: 2.0.5
2025-08-14 10:44:50,382:INFO:            imblearn: 0.13.0
2025-08-14 10:44:50,382:INFO:   category_encoders: 2.7.0
2025-08-14 10:44:50,382:INFO:            lightgbm: 4.6.0
2025-08-14 10:44:50,383:INFO:               numba: 0.61.0
2025-08-14 10:44:50,383:INFO:            requests: 2.32.4
2025-08-14 10:44:50,383:INFO:          matplotlib: 3.7.5
2025-08-14 10:44:50,383:INFO:          scikitplot: 0.3.7
2025-08-14 10:44:50,383:INFO:         yellowbrick: 1.5
2025-08-14 10:44:50,383:INFO:              plotly: 5.24.1
2025-08-14 10:44:50,383:INFO:    plotly-resampler: Not installed
2025-08-14 10:44:50,383:INFO:             kaleido: 1.0.0
2025-08-14 10:44:50,383:INFO:           schemdraw: 0.15
2025-08-14 10:44:50,383:INFO:         statsmodels: 0.14.5
2025-08-14 10:44:50,383:INFO:              sktime: 0.26.0
2025-08-14 10:44:50,383:INFO:               tbats: 1.1.3
2025-08-14 10:44:50,383:INFO:            pmdarima: 2.0.4
2025-08-14 10:44:50,383:INFO:              psutil: 7.0.0
2025-08-14 10:44:50,383:INFO:          markupsafe: 3.0.2
2025-08-14 10:44:50,383:INFO:             pickle5: Not installed
2025-08-14 10:44:50,383:INFO:         cloudpickle: 3.1.1
2025-08-14 10:44:50,383:INFO:         deprecation: 2.1.0
2025-08-14 10:44:50,383:INFO:              xxhash: 3.5.0
2025-08-14 10:44:50,383:INFO:           wurlitzer: 3.1.1
2025-08-14 10:44:50,383:INFO:PyCaret optional dependencies:
2025-08-14 10:44:51,315:INFO:                shap: 0.44.1
2025-08-14 10:44:51,315:INFO:           interpret: 0.7.2
2025-08-14 10:44:51,315:INFO:                umap: 0.5.7
2025-08-14 10:44:51,315:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:44:51,315:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:44:51,315:INFO:             autoviz: Not installed
2025-08-14 10:44:51,315:INFO:           fairlearn: 0.7.0
2025-08-14 10:44:51,315:INFO:          deepchecks: Not installed
2025-08-14 10:44:51,315:INFO:             xgboost: 3.0.4
2025-08-14 10:44:51,315:INFO:            catboost: 1.2.8
2025-08-14 10:44:51,315:INFO:              kmodes: 0.12.2
2025-08-14 10:44:51,315:INFO:             mlxtend: 0.23.4
2025-08-14 10:44:51,315:INFO:       statsforecast: 1.5.0
2025-08-14 10:44:51,315:INFO:        tune_sklearn: Not installed
2025-08-14 10:44:51,315:INFO:                 ray: Not installed
2025-08-14 10:44:51,315:INFO:            hyperopt: 0.2.7
2025-08-14 10:44:51,315:INFO:              optuna: 4.4.0
2025-08-14 10:44:51,315:INFO:               skopt: 0.10.2
2025-08-14 10:44:51,315:INFO:              mlflow: 3.2.0
2025-08-14 10:44:51,315:INFO:              gradio: 5.42.0
2025-08-14 10:44:51,315:INFO:             fastapi: 0.116.1
2025-08-14 10:44:51,315:INFO:             uvicorn: 0.35.0
2025-08-14 10:44:51,315:INFO:              m2cgen: 0.10.0
2025-08-14 10:44:51,315:INFO:           evidently: 0.4.40
2025-08-14 10:44:51,315:INFO:               fugue: 0.8.7
2025-08-14 10:44:51,315:INFO:           streamlit: 1.48.1
2025-08-14 10:44:51,315:INFO:             prophet: Not installed
2025-08-14 10:44:51,315:INFO:None
2025-08-14 10:44:51,315:INFO:Set up data.
2025-08-14 10:44:51,319:INFO:Set up folding strategy.
2025-08-14 10:44:51,319:INFO:Set up train/test split.
2025-08-14 10:44:51,322:INFO:Set up index.
2025-08-14 10:44:51,322:INFO:Assigning column types.
2025-08-14 10:44:51,323:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 10:44:51,337:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,338:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,348:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,349:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,372:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,381:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,382:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,382:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 10:44:51,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,404:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,405:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 10:44:51,428:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,429:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,429:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 10:44:51,452:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,453:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,475:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,476:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,477:INFO:Preparing preprocessing pipeline...
2025-08-14 10:44:51,477:INFO:Set up label encoding.
2025-08-14 10:44:51,477:INFO:Set up simple imputation.
2025-08-14 10:44:51,478:INFO:Set up encoding of categorical features.
2025-08-14 10:44:51,478:INFO:Set up feature normalization.
2025-08-14 10:44:51,498:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:44:51,500:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:44:51,500:INFO:Creating final display dataframe.
2025-08-14 10:44:51,550:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     1cdd
2025-08-14 10:44:51,573:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,574:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,598:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 10:44:51,599:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 10:44:51,599:INFO:setup() successfully completed in 1.45s...............
2025-08-14 10:44:51,599:INFO:Initializing compare_models()
2025-08-14 10:44:51,599:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 10:44:51,599:INFO:Checking exceptions
2025-08-14 10:44:51,600:INFO:Preparing display monitor
2025-08-14 10:44:51,601:INFO:Initializing Logistic Regression
2025-08-14 10:44:51,601:INFO:Total runtime is 9.57647959391276e-07 minutes
2025-08-14 10:44:51,601:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:51,602:INFO:Initializing create_model()
2025-08-14 10:44:51,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:51,602:INFO:Checking exceptions
2025-08-14 10:44:51,602:INFO:Importing libraries
2025-08-14 10:44:51,602:INFO:Copying training dataset
2025-08-14 10:44:51,603:INFO:Defining folds
2025-08-14 10:44:51,604:INFO:Declaring metric variables
2025-08-14 10:44:51,604:INFO:Importing untrained model
2025-08-14 10:44:51,604:INFO:Logistic Regression Imported successfully
2025-08-14 10:44:51,604:INFO:Starting cross validation
2025-08-14 10:44:51,604:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:52,860:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,861:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,861:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,866:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,867:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,870:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,870:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,876:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,885:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,886:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,889:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,894:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:52,909:INFO:Calculating mean and std
2025-08-14 10:44:52,912:INFO:Creating metrics dataframe
2025-08-14 10:44:52,918:INFO:Uploading results into container
2025-08-14 10:44:52,921:INFO:Uploading model into container now
2025-08-14 10:44:52,923:INFO:_master_model_container: 1
2025-08-14 10:44:52,925:INFO:_display_container: 2
2025-08-14 10:44:52,926:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:44:52,926:INFO:create_model() successfully completed......................................
2025-08-14 10:44:53,045:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:53,045:INFO:Creating metrics dataframe
2025-08-14 10:44:53,046:INFO:Initializing K Neighbors Classifier
2025-08-14 10:44:53,046:INFO:Total runtime is 0.024080348014831544 minutes
2025-08-14 10:44:53,046:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:53,047:INFO:Initializing create_model()
2025-08-14 10:44:53,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:53,047:INFO:Checking exceptions
2025-08-14 10:44:53,047:INFO:Importing libraries
2025-08-14 10:44:53,047:INFO:Copying training dataset
2025-08-14 10:44:53,049:INFO:Defining folds
2025-08-14 10:44:53,049:INFO:Declaring metric variables
2025-08-14 10:44:53,050:INFO:Importing untrained model
2025-08-14 10:44:53,050:INFO:K Neighbors Classifier Imported successfully
2025-08-14 10:44:53,050:INFO:Starting cross validation
2025-08-14 10:44:53,050:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:53,154:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:53,157:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:53,160:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:53,166:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:53,169:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:53,172:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,087:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,089:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,090:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,092:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,092:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,095:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,100:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,103:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,106:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,120:INFO:Calculating mean and std
2025-08-14 10:44:54,121:INFO:Creating metrics dataframe
2025-08-14 10:44:54,123:INFO:Uploading results into container
2025-08-14 10:44:54,123:INFO:Uploading model into container now
2025-08-14 10:44:54,123:INFO:_master_model_container: 2
2025-08-14 10:44:54,123:INFO:_display_container: 2
2025-08-14 10:44:54,124:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 10:44:54,124:INFO:create_model() successfully completed......................................
2025-08-14 10:44:54,242:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:54,242:INFO:Creating metrics dataframe
2025-08-14 10:44:54,243:INFO:Initializing Naive Bayes
2025-08-14 10:44:54,243:INFO:Total runtime is 0.044034147262573244 minutes
2025-08-14 10:44:54,243:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:54,244:INFO:Initializing create_model()
2025-08-14 10:44:54,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:54,244:INFO:Checking exceptions
2025-08-14 10:44:54,244:INFO:Importing libraries
2025-08-14 10:44:54,244:INFO:Copying training dataset
2025-08-14 10:44:54,246:INFO:Defining folds
2025-08-14 10:44:54,246:INFO:Declaring metric variables
2025-08-14 10:44:54,246:INFO:Importing untrained model
2025-08-14 10:44:54,246:INFO:Naive Bayes Imported successfully
2025-08-14 10:44:54,246:INFO:Starting cross validation
2025-08-14 10:44:54,247:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:54,299:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,303:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,306:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,309:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,310:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,310:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,312:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,313:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,314:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,314:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,321:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,333:INFO:Calculating mean and std
2025-08-14 10:44:54,333:INFO:Creating metrics dataframe
2025-08-14 10:44:54,334:INFO:Uploading results into container
2025-08-14 10:44:54,334:INFO:Uploading model into container now
2025-08-14 10:44:54,334:INFO:_master_model_container: 3
2025-08-14 10:44:54,334:INFO:_display_container: 2
2025-08-14 10:44:54,334:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 10:44:54,334:INFO:create_model() successfully completed......................................
2025-08-14 10:44:54,399:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:54,400:INFO:Creating metrics dataframe
2025-08-14 10:44:54,400:INFO:Initializing Decision Tree Classifier
2025-08-14 10:44:54,401:INFO:Total runtime is 0.04665394226710002 minutes
2025-08-14 10:44:54,401:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:54,401:INFO:Initializing create_model()
2025-08-14 10:44:54,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:54,401:INFO:Checking exceptions
2025-08-14 10:44:54,401:INFO:Importing libraries
2025-08-14 10:44:54,401:INFO:Copying training dataset
2025-08-14 10:44:54,403:INFO:Defining folds
2025-08-14 10:44:54,403:INFO:Declaring metric variables
2025-08-14 10:44:54,403:INFO:Importing untrained model
2025-08-14 10:44:54,403:INFO:Decision Tree Classifier Imported successfully
2025-08-14 10:44:54,403:INFO:Starting cross validation
2025-08-14 10:44:54,404:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:54,432:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,433:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,435:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,435:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,437:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,438:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,438:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,439:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,439:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,441:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,441:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,442:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,444:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,444:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,446:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,453:INFO:Calculating mean and std
2025-08-14 10:44:54,453:INFO:Creating metrics dataframe
2025-08-14 10:44:54,454:INFO:Uploading results into container
2025-08-14 10:44:54,454:INFO:Uploading model into container now
2025-08-14 10:44:54,454:INFO:_master_model_container: 4
2025-08-14 10:44:54,454:INFO:_display_container: 2
2025-08-14 10:44:54,454:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 10:44:54,454:INFO:create_model() successfully completed......................................
2025-08-14 10:44:54,519:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:54,520:INFO:Creating metrics dataframe
2025-08-14 10:44:54,521:INFO:Initializing SVM - Linear Kernel
2025-08-14 10:44:54,521:INFO:Total runtime is 0.04865443706512451 minutes
2025-08-14 10:44:54,521:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:54,521:INFO:Initializing create_model()
2025-08-14 10:44:54,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:54,521:INFO:Checking exceptions
2025-08-14 10:44:54,521:INFO:Importing libraries
2025-08-14 10:44:54,521:INFO:Copying training dataset
2025-08-14 10:44:54,523:INFO:Defining folds
2025-08-14 10:44:54,523:INFO:Declaring metric variables
2025-08-14 10:44:54,523:INFO:Importing untrained model
2025-08-14 10:44:54,523:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 10:44:54,523:INFO:Starting cross validation
2025-08-14 10:44:54,524:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:54,551:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,553:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,553:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,561:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,563:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,565:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,567:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,579:INFO:Calculating mean and std
2025-08-14 10:44:54,579:INFO:Creating metrics dataframe
2025-08-14 10:44:54,580:INFO:Uploading results into container
2025-08-14 10:44:54,580:INFO:Uploading model into container now
2025-08-14 10:44:54,580:INFO:_master_model_container: 5
2025-08-14 10:44:54,581:INFO:_display_container: 2
2025-08-14 10:44:54,581:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 10:44:54,581:INFO:create_model() successfully completed......................................
2025-08-14 10:44:54,646:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:54,646:INFO:Creating metrics dataframe
2025-08-14 10:44:54,647:INFO:Initializing Ridge Classifier
2025-08-14 10:44:54,647:INFO:Total runtime is 0.05076016982396444 minutes
2025-08-14 10:44:54,647:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:54,647:INFO:Initializing create_model()
2025-08-14 10:44:54,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:54,647:INFO:Checking exceptions
2025-08-14 10:44:54,647:INFO:Importing libraries
2025-08-14 10:44:54,647:INFO:Copying training dataset
2025-08-14 10:44:54,649:INFO:Defining folds
2025-08-14 10:44:54,649:INFO:Declaring metric variables
2025-08-14 10:44:54,649:INFO:Importing untrained model
2025-08-14 10:44:54,649:INFO:Ridge Classifier Imported successfully
2025-08-14 10:44:54,650:INFO:Starting cross validation
2025-08-14 10:44:54,650:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:54,679:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,679:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,681:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,681:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,683:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,684:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,685:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,686:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,687:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,688:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,690:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,691:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,691:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,693:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,694:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,698:INFO:Calculating mean and std
2025-08-14 10:44:54,699:INFO:Creating metrics dataframe
2025-08-14 10:44:54,699:INFO:Uploading results into container
2025-08-14 10:44:54,700:INFO:Uploading model into container now
2025-08-14 10:44:54,700:INFO:_master_model_container: 6
2025-08-14 10:44:54,700:INFO:_display_container: 2
2025-08-14 10:44:54,700:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 10:44:54,700:INFO:create_model() successfully completed......................................
2025-08-14 10:44:54,765:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:54,765:INFO:Creating metrics dataframe
2025-08-14 10:44:54,766:INFO:Initializing Random Forest Classifier
2025-08-14 10:44:54,766:INFO:Total runtime is 0.052747035026550294 minutes
2025-08-14 10:44:54,766:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:54,766:INFO:Initializing create_model()
2025-08-14 10:44:54,766:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:54,766:INFO:Checking exceptions
2025-08-14 10:44:54,766:INFO:Importing libraries
2025-08-14 10:44:54,766:INFO:Copying training dataset
2025-08-14 10:44:54,768:INFO:Defining folds
2025-08-14 10:44:54,768:INFO:Declaring metric variables
2025-08-14 10:44:54,768:INFO:Importing untrained model
2025-08-14 10:44:54,769:INFO:Random Forest Classifier Imported successfully
2025-08-14 10:44:54,769:INFO:Starting cross validation
2025-08-14 10:44:54,769:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:54,931:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,933:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,934:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,936:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,936:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,938:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,939:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,942:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,945:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,949:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,952:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,953:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,956:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,956:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,958:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:54,970:INFO:Calculating mean and std
2025-08-14 10:44:54,970:INFO:Creating metrics dataframe
2025-08-14 10:44:54,971:INFO:Uploading results into container
2025-08-14 10:44:54,971:INFO:Uploading model into container now
2025-08-14 10:44:54,971:INFO:_master_model_container: 7
2025-08-14 10:44:54,971:INFO:_display_container: 2
2025-08-14 10:44:54,972:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 10:44:54,972:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,037:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,037:INFO:Creating metrics dataframe
2025-08-14 10:44:55,038:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 10:44:55,038:INFO:Total runtime is 0.05727721452713013 minutes
2025-08-14 10:44:55,038:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,038:INFO:Initializing create_model()
2025-08-14 10:44:55,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,038:INFO:Checking exceptions
2025-08-14 10:44:55,038:INFO:Importing libraries
2025-08-14 10:44:55,038:INFO:Copying training dataset
2025-08-14 10:44:55,040:INFO:Defining folds
2025-08-14 10:44:55,040:INFO:Declaring metric variables
2025-08-14 10:44:55,040:INFO:Importing untrained model
2025-08-14 10:44:55,040:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 10:44:55,040:INFO:Starting cross validation
2025-08-14 10:44:55,041:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:44:55,060:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:44:55,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:44:55,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:44:55,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 10:44:55,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:44:55,070:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:44:55,070:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:44:55,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:44:55,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 10:44:55,073:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 10:44:55,075:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,075:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,076:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 10:44:55,076:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,077:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,078:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,078:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,079:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,079:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,082:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,082:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,083:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,084:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:44:55,086:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,088:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,105:INFO:Calculating mean and std
2025-08-14 10:44:55,105:INFO:Creating metrics dataframe
2025-08-14 10:44:55,106:INFO:Uploading results into container
2025-08-14 10:44:55,106:INFO:Uploading model into container now
2025-08-14 10:44:55,106:INFO:_master_model_container: 8
2025-08-14 10:44:55,106:INFO:_display_container: 2
2025-08-14 10:44:55,106:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 10:44:55,106:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,171:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,171:INFO:Creating metrics dataframe
2025-08-14 10:44:55,172:INFO:Initializing Ada Boost Classifier
2025-08-14 10:44:55,172:INFO:Total runtime is 0.059516096115112306 minutes
2025-08-14 10:44:55,172:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,172:INFO:Initializing create_model()
2025-08-14 10:44:55,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,173:INFO:Checking exceptions
2025-08-14 10:44:55,173:INFO:Importing libraries
2025-08-14 10:44:55,173:INFO:Copying training dataset
2025-08-14 10:44:55,174:INFO:Defining folds
2025-08-14 10:44:55,174:INFO:Declaring metric variables
2025-08-14 10:44:55,174:INFO:Importing untrained model
2025-08-14 10:44:55,175:INFO:Ada Boost Classifier Imported successfully
2025-08-14 10:44:55,175:INFO:Starting cross validation
2025-08-14 10:44:55,175:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:44:55,193:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:44:55,193:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:44:55,196:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:44:55,204:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,204:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 10:44:55,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,209:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,219:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,222:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,237:INFO:Calculating mean and std
2025-08-14 10:44:55,238:INFO:Creating metrics dataframe
2025-08-14 10:44:55,238:INFO:Uploading results into container
2025-08-14 10:44:55,239:INFO:Uploading model into container now
2025-08-14 10:44:55,239:INFO:_master_model_container: 9
2025-08-14 10:44:55,239:INFO:_display_container: 2
2025-08-14 10:44:55,239:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 10:44:55,239:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,305:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,305:INFO:Creating metrics dataframe
2025-08-14 10:44:55,306:INFO:Initializing Gradient Boosting Classifier
2025-08-14 10:44:55,306:INFO:Total runtime is 0.06174066464106242 minutes
2025-08-14 10:44:55,306:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,306:INFO:Initializing create_model()
2025-08-14 10:44:55,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,306:INFO:Checking exceptions
2025-08-14 10:44:55,306:INFO:Importing libraries
2025-08-14 10:44:55,306:INFO:Copying training dataset
2025-08-14 10:44:55,308:INFO:Defining folds
2025-08-14 10:44:55,308:INFO:Declaring metric variables
2025-08-14 10:44:55,308:INFO:Importing untrained model
2025-08-14 10:44:55,308:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 10:44:55,308:INFO:Starting cross validation
2025-08-14 10:44:55,309:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,415:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,420:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,421:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,421:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,423:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,424:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,426:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,426:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,430:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,430:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,431:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,433:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,434:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,435:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,436:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,445:INFO:Calculating mean and std
2025-08-14 10:44:55,445:INFO:Creating metrics dataframe
2025-08-14 10:44:55,446:INFO:Uploading results into container
2025-08-14 10:44:55,446:INFO:Uploading model into container now
2025-08-14 10:44:55,447:INFO:_master_model_container: 10
2025-08-14 10:44:55,447:INFO:_display_container: 2
2025-08-14 10:44:55,447:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 10:44:55,447:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,513:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,513:INFO:Creating metrics dataframe
2025-08-14 10:44:55,514:INFO:Initializing Linear Discriminant Analysis
2025-08-14 10:44:55,514:INFO:Total runtime is 0.0652088483174642 minutes
2025-08-14 10:44:55,514:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,514:INFO:Initializing create_model()
2025-08-14 10:44:55,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,514:INFO:Checking exceptions
2025-08-14 10:44:55,514:INFO:Importing libraries
2025-08-14 10:44:55,514:INFO:Copying training dataset
2025-08-14 10:44:55,516:INFO:Defining folds
2025-08-14 10:44:55,516:INFO:Declaring metric variables
2025-08-14 10:44:55,516:INFO:Importing untrained model
2025-08-14 10:44:55,516:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 10:44:55,516:INFO:Starting cross validation
2025-08-14 10:44:55,517:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,550:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,558:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,560:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,562:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,562:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,562:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,565:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,580:INFO:Calculating mean and std
2025-08-14 10:44:55,580:INFO:Creating metrics dataframe
2025-08-14 10:44:55,581:INFO:Uploading results into container
2025-08-14 10:44:55,581:INFO:Uploading model into container now
2025-08-14 10:44:55,581:INFO:_master_model_container: 11
2025-08-14 10:44:55,581:INFO:_display_container: 2
2025-08-14 10:44:55,581:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 10:44:55,581:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,649:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,649:INFO:Creating metrics dataframe
2025-08-14 10:44:55,650:INFO:Initializing Extra Trees Classifier
2025-08-14 10:44:55,650:INFO:Total runtime is 0.06747384866078694 minutes
2025-08-14 10:44:55,650:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,650:INFO:Initializing create_model()
2025-08-14 10:44:55,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,650:INFO:Checking exceptions
2025-08-14 10:44:55,650:INFO:Importing libraries
2025-08-14 10:44:55,650:INFO:Copying training dataset
2025-08-14 10:44:55,652:INFO:Defining folds
2025-08-14 10:44:55,652:INFO:Declaring metric variables
2025-08-14 10:44:55,652:INFO:Importing untrained model
2025-08-14 10:44:55,652:INFO:Extra Trees Classifier Imported successfully
2025-08-14 10:44:55,652:INFO:Starting cross validation
2025-08-14 10:44:55,653:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,791:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,792:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,794:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,795:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,797:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,798:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,799:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,800:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,801:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,804:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,804:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,807:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,807:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,813:INFO:Calculating mean and std
2025-08-14 10:44:55,813:INFO:Creating metrics dataframe
2025-08-14 10:44:55,814:INFO:Uploading results into container
2025-08-14 10:44:55,814:INFO:Uploading model into container now
2025-08-14 10:44:55,814:INFO:_master_model_container: 12
2025-08-14 10:44:55,814:INFO:_display_container: 2
2025-08-14 10:44:55,814:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 10:44:55,814:INFO:create_model() successfully completed......................................
2025-08-14 10:44:55,880:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:55,880:INFO:Creating metrics dataframe
2025-08-14 10:44:55,881:INFO:Initializing Extreme Gradient Boosting
2025-08-14 10:44:55,881:INFO:Total runtime is 0.071323295434316 minutes
2025-08-14 10:44:55,881:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:55,881:INFO:Initializing create_model()
2025-08-14 10:44:55,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:55,881:INFO:Checking exceptions
2025-08-14 10:44:55,881:INFO:Importing libraries
2025-08-14 10:44:55,881:INFO:Copying training dataset
2025-08-14 10:44:55,883:INFO:Defining folds
2025-08-14 10:44:55,883:INFO:Declaring metric variables
2025-08-14 10:44:55,883:INFO:Importing untrained model
2025-08-14 10:44:55,883:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 10:44:55,883:INFO:Starting cross validation
2025-08-14 10:44:55,884:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:55,944:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,948:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,949:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,952:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,952:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,952:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,953:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,955:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,955:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,955:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,960:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:55,973:INFO:Calculating mean and std
2025-08-14 10:44:55,973:INFO:Creating metrics dataframe
2025-08-14 10:44:55,974:INFO:Uploading results into container
2025-08-14 10:44:55,974:INFO:Uploading model into container now
2025-08-14 10:44:55,974:INFO:_master_model_container: 13
2025-08-14 10:44:55,974:INFO:_display_container: 2
2025-08-14 10:44:55,974:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 10:44:55,975:INFO:create_model() successfully completed......................................
2025-08-14 10:44:56,040:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:56,040:INFO:Creating metrics dataframe
2025-08-14 10:44:56,041:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 10:44:56,041:INFO:Total runtime is 0.07399697701136271 minutes
2025-08-14 10:44:56,041:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:56,041:INFO:Initializing create_model()
2025-08-14 10:44:56,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:56,041:INFO:Checking exceptions
2025-08-14 10:44:56,041:INFO:Importing libraries
2025-08-14 10:44:56,041:INFO:Copying training dataset
2025-08-14 10:44:56,043:INFO:Defining folds
2025-08-14 10:44:56,043:INFO:Declaring metric variables
2025-08-14 10:44:56,043:INFO:Importing untrained model
2025-08-14 10:44:56,044:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 10:44:56,044:INFO:Starting cross validation
2025-08-14 10:44:56,044:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:44:58,590:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,594:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,598:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,684:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,689:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,694:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,735:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,738:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,739:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,742:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,742:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,747:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:44:58,759:INFO:Calculating mean and std
2025-08-14 10:44:58,759:INFO:Creating metrics dataframe
2025-08-14 10:44:58,760:INFO:Uploading results into container
2025-08-14 10:44:58,761:INFO:Uploading model into container now
2025-08-14 10:44:58,761:INFO:_master_model_container: 14
2025-08-14 10:44:58,761:INFO:_display_container: 2
2025-08-14 10:44:58,761:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 10:44:58,761:INFO:create_model() successfully completed......................................
2025-08-14 10:44:58,827:INFO:SubProcess create_model() end ==================================
2025-08-14 10:44:58,827:INFO:Creating metrics dataframe
2025-08-14 10:44:58,828:INFO:Initializing CatBoost Classifier
2025-08-14 10:44:58,828:INFO:Total runtime is 0.12045105298360188 minutes
2025-08-14 10:44:58,828:INFO:SubProcess create_model() called ==================================
2025-08-14 10:44:58,829:INFO:Initializing create_model()
2025-08-14 10:44:58,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:44:58,829:INFO:Checking exceptions
2025-08-14 10:44:58,829:INFO:Importing libraries
2025-08-14 10:44:58,829:INFO:Copying training dataset
2025-08-14 10:44:58,831:INFO:Defining folds
2025-08-14 10:44:58,831:INFO:Declaring metric variables
2025-08-14 10:44:58,831:INFO:Importing untrained model
2025-08-14 10:44:58,831:INFO:CatBoost Classifier Imported successfully
2025-08-14 10:44:58,832:INFO:Starting cross validation
2025-08-14 10:44:58,832:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:45:04,031:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,034:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,035:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,039:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,039:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,039:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,045:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,046:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,050:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,050:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,054:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,057:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,065:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,080:INFO:Calculating mean and std
2025-08-14 10:45:04,084:INFO:Creating metrics dataframe
2025-08-14 10:45:04,091:INFO:Uploading results into container
2025-08-14 10:45:04,091:INFO:Uploading model into container now
2025-08-14 10:45:04,092:INFO:_master_model_container: 15
2025-08-14 10:45:04,092:INFO:_display_container: 2
2025-08-14 10:45:04,092:INFO:<catboost.core.CatBoostClassifier object at 0xffff48f178d0>
2025-08-14 10:45:04,092:INFO:create_model() successfully completed......................................
2025-08-14 10:45:04,262:INFO:SubProcess create_model() end ==================================
2025-08-14 10:45:04,262:INFO:Creating metrics dataframe
2025-08-14 10:45:04,263:INFO:Initializing Dummy Classifier
2025-08-14 10:45:04,263:INFO:Total runtime is 0.21103481054306028 minutes
2025-08-14 10:45:04,263:INFO:SubProcess create_model() called ==================================
2025-08-14 10:45:04,264:INFO:Initializing create_model()
2025-08-14 10:45:04,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff48c1da10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:45:04,264:INFO:Checking exceptions
2025-08-14 10:45:04,264:INFO:Importing libraries
2025-08-14 10:45:04,264:INFO:Copying training dataset
2025-08-14 10:45:04,266:INFO:Defining folds
2025-08-14 10:45:04,266:INFO:Declaring metric variables
2025-08-14 10:45:04,266:INFO:Importing untrained model
2025-08-14 10:45:04,266:INFO:Dummy Classifier Imported successfully
2025-08-14 10:45:04,266:INFO:Starting cross validation
2025-08-14 10:45:04,267:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 10:45:04,320:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,327:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,328:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:45:04,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:45:04,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:45:04,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:45:04,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 10:45:04,340:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 10:45:04,364:INFO:Calculating mean and std
2025-08-14 10:45:04,364:INFO:Creating metrics dataframe
2025-08-14 10:45:04,365:INFO:Uploading results into container
2025-08-14 10:45:04,365:INFO:Uploading model into container now
2025-08-14 10:45:04,365:INFO:_master_model_container: 16
2025-08-14 10:45:04,365:INFO:_display_container: 2
2025-08-14 10:45:04,365:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 10:45:04,365:INFO:create_model() successfully completed......................................
2025-08-14 10:45:04,432:INFO:SubProcess create_model() end ==================================
2025-08-14 10:45:04,432:INFO:Creating metrics dataframe
2025-08-14 10:45:04,433:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 10:45:04,434:INFO:Initializing create_model()
2025-08-14 10:45:04,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:45:04,434:INFO:Checking exceptions
2025-08-14 10:45:04,435:INFO:Importing libraries
2025-08-14 10:45:04,435:INFO:Copying training dataset
2025-08-14 10:45:04,437:INFO:Defining folds
2025-08-14 10:45:04,437:INFO:Declaring metric variables
2025-08-14 10:45:04,437:INFO:Importing untrained model
2025-08-14 10:45:04,437:INFO:Declaring custom model
2025-08-14 10:45:04,437:INFO:Logistic Regression Imported successfully
2025-08-14 10:45:04,437:INFO:Cross validation set to False
2025-08-14 10:45:04,437:INFO:Fitting Model
2025-08-14 10:45:04,456:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:45:04,456:INFO:create_model() successfully completed......................................
2025-08-14 10:45:04,565:INFO:_master_model_container: 16
2025-08-14 10:45:04,566:INFO:_display_container: 2
2025-08-14 10:45:04,566:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:45:04,566:INFO:compare_models() successfully completed......................................
2025-08-14 10:45:04,566:INFO:Initializing finalize_model()
2025-08-14 10:45:04,566:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 10:45:04,566:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 10:45:04,567:INFO:Initializing create_model()
2025-08-14 10:45:04,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff740a45d0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 10:45:04,567:INFO:Checking exceptions
2025-08-14 10:45:04,568:INFO:Importing libraries
2025-08-14 10:45:04,568:INFO:Copying training dataset
2025-08-14 10:45:04,568:INFO:Defining folds
2025-08-14 10:45:04,568:INFO:Declaring metric variables
2025-08-14 10:45:04,568:INFO:Importing untrained model
2025-08-14 10:45:04,568:INFO:Declaring custom model
2025-08-14 10:45:04,568:INFO:Logistic Regression Imported successfully
2025-08-14 10:45:04,568:INFO:Cross validation set to False
2025-08-14 10:45:04,568:INFO:Fitting Model
2025-08-14 10:45:04,591:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:45:04,591:INFO:create_model() successfully completed......................................
2025-08-14 10:45:04,683:INFO:_master_model_container: 16
2025-08-14 10:45:04,684:INFO:_display_container: 2
2025-08-14 10:45:04,686:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:45:04,686:INFO:finalize_model() successfully completed......................................
2025-08-14 10:45:04,751:INFO:Initializing save_model()
2025-08-14 10:45:04,752:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 10:45:04,752:INFO:Adding model into prep_pipe
2025-08-14 10:45:04,752:WARNING:Only Model saved as it was a pipeline.
2025-08-14 10:45:04,754:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 10:45:04,756:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 10:45:04,756:INFO:save_model() successfully completed......................................
2025-08-14 10:45:04,823:INFO:PyCaret ClusteringExperiment
2025-08-14 10:45:04,824:INFO:Logging name: cluster-default-name
2025-08-14 10:45:04,824:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 10:45:04,824:INFO:version 3.3.2
2025-08-14 10:45:04,824:INFO:Initializing setup()
2025-08-14 10:45:04,824:INFO:self.USI: 2f0e
2025-08-14 10:45:04,824:INFO:self._variable_keys: {'USI', '_available_plots', 'X', 'memory', 'exp_name_log', 'html_param', 'seed', 'exp_id', 'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'pipeline', 'n_jobs_param', 'data', '_ml_usecase', 'logging_param', 'idx'}
2025-08-14 10:45:04,824:INFO:Checking environment
2025-08-14 10:45:04,824:INFO:python_version: 3.11.13
2025-08-14 10:45:04,824:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 10:45:04,824:INFO:machine: aarch64
2025-08-14 10:45:04,824:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:45:04,824:INFO:Memory: svmem(total=4109803520, available=1261240320, percent=69.3, used=2686017536, free=558821376, active=3017105408, inactive=319238144, buffers=72593408, cached=792371200, shared=1114112, slab=99749888)
2025-08-14 10:45:04,824:INFO:Physical Core: 8
2025-08-14 10:45:04,824:INFO:Logical Core: 8
2025-08-14 10:45:04,824:INFO:Checking libraries
2025-08-14 10:45:04,824:INFO:System:
2025-08-14 10:45:04,824:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 10:45:04,824:INFO:executable: /usr/local/bin/python
2025-08-14 10:45:04,825:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 10:45:04,825:INFO:PyCaret required dependencies:
2025-08-14 10:45:04,825:INFO:                 pip: 24.0
2025-08-14 10:45:04,825:INFO:          setuptools: 80.9.0
2025-08-14 10:45:04,825:INFO:             pycaret: 3.3.2
2025-08-14 10:45:04,825:INFO:             IPython: 9.4.0
2025-08-14 10:45:04,825:INFO:          ipywidgets: 8.1.7
2025-08-14 10:45:04,825:INFO:                tqdm: 4.67.1
2025-08-14 10:45:04,825:INFO:               numpy: 1.26.4
2025-08-14 10:45:04,825:INFO:              pandas: 2.1.4
2025-08-14 10:45:04,825:INFO:              jinja2: 3.1.6
2025-08-14 10:45:04,825:INFO:               scipy: 1.11.4
2025-08-14 10:45:04,825:INFO:              joblib: 1.3.2
2025-08-14 10:45:04,825:INFO:             sklearn: 1.4.2
2025-08-14 10:45:04,825:INFO:                pyod: 2.0.5
2025-08-14 10:45:04,825:INFO:            imblearn: 0.13.0
2025-08-14 10:45:04,825:INFO:   category_encoders: 2.7.0
2025-08-14 10:45:04,825:INFO:            lightgbm: 4.6.0
2025-08-14 10:45:04,825:INFO:               numba: 0.61.0
2025-08-14 10:45:04,825:INFO:            requests: 2.32.4
2025-08-14 10:45:04,825:INFO:          matplotlib: 3.7.5
2025-08-14 10:45:04,825:INFO:          scikitplot: 0.3.7
2025-08-14 10:45:04,825:INFO:         yellowbrick: 1.5
2025-08-14 10:45:04,825:INFO:              plotly: 5.24.1
2025-08-14 10:45:04,825:INFO:    plotly-resampler: Not installed
2025-08-14 10:45:04,825:INFO:             kaleido: 1.0.0
2025-08-14 10:45:04,825:INFO:           schemdraw: 0.15
2025-08-14 10:45:04,825:INFO:         statsmodels: 0.14.5
2025-08-14 10:45:04,825:INFO:              sktime: 0.26.0
2025-08-14 10:45:04,825:INFO:               tbats: 1.1.3
2025-08-14 10:45:04,825:INFO:            pmdarima: 2.0.4
2025-08-14 10:45:04,825:INFO:              psutil: 7.0.0
2025-08-14 10:45:04,825:INFO:          markupsafe: 3.0.2
2025-08-14 10:45:04,825:INFO:             pickle5: Not installed
2025-08-14 10:45:04,825:INFO:         cloudpickle: 3.1.1
2025-08-14 10:45:04,825:INFO:         deprecation: 2.1.0
2025-08-14 10:45:04,825:INFO:              xxhash: 3.5.0
2025-08-14 10:45:04,825:INFO:           wurlitzer: 3.1.1
2025-08-14 10:45:04,825:INFO:PyCaret optional dependencies:
2025-08-14 10:45:04,825:INFO:                shap: 0.44.1
2025-08-14 10:45:04,826:INFO:           interpret: 0.7.2
2025-08-14 10:45:04,826:INFO:                umap: 0.5.7
2025-08-14 10:45:04,826:INFO:     ydata_profiling: 4.16.1
2025-08-14 10:45:04,826:INFO:  explainerdashboard: 0.5.1
2025-08-14 10:45:04,826:INFO:             autoviz: Not installed
2025-08-14 10:45:04,826:INFO:           fairlearn: 0.7.0
2025-08-14 10:45:04,826:INFO:          deepchecks: Not installed
2025-08-14 10:45:04,826:INFO:             xgboost: 3.0.4
2025-08-14 10:45:04,826:INFO:            catboost: 1.2.8
2025-08-14 10:45:04,826:INFO:              kmodes: 0.12.2
2025-08-14 10:45:04,826:INFO:             mlxtend: 0.23.4
2025-08-14 10:45:04,826:INFO:       statsforecast: 1.5.0
2025-08-14 10:45:04,826:INFO:        tune_sklearn: Not installed
2025-08-14 10:45:04,826:INFO:                 ray: Not installed
2025-08-14 10:45:04,826:INFO:            hyperopt: 0.2.7
2025-08-14 10:45:04,826:INFO:              optuna: 4.4.0
2025-08-14 10:45:04,826:INFO:               skopt: 0.10.2
2025-08-14 10:45:04,826:INFO:              mlflow: 3.2.0
2025-08-14 10:45:04,826:INFO:              gradio: 5.42.0
2025-08-14 10:45:04,826:INFO:             fastapi: 0.116.1
2025-08-14 10:45:04,826:INFO:             uvicorn: 0.35.0
2025-08-14 10:45:04,826:INFO:              m2cgen: 0.10.0
2025-08-14 10:45:04,826:INFO:           evidently: 0.4.40
2025-08-14 10:45:04,826:INFO:               fugue: 0.8.7
2025-08-14 10:45:04,826:INFO:           streamlit: 1.48.1
2025-08-14 10:45:04,826:INFO:             prophet: Not installed
2025-08-14 10:45:04,826:INFO:None
2025-08-14 10:45:04,826:INFO:Set up data.
2025-08-14 10:45:04,827:INFO:Set up index.
2025-08-14 10:45:04,827:INFO:Assigning column types.
2025-08-14 10:45:04,828:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 10:45:04,828:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:45:04,828:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,832:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 10:45:04,832:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,832:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 10:45:04,832:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,832:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,833:INFO:Preparing preprocessing pipeline...
2025-08-14 10:45:04,833:INFO:Set up simple imputation.
2025-08-14 10:45:04,833:INFO:Set up feature normalization.
2025-08-14 10:45:04,838:INFO:Finished creating preprocessing pipeline.
2025-08-14 10:45:04,839:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 10:45:04,839:INFO:Creating final display dataframe.
2025-08-14 10:45:04,845:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  2f0e
2025-08-14 10:45:04,845:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,846:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 10:45:04,846:INFO:setup() successfully completed in 0.02s...............
2025-08-14 10:45:04,846:INFO:Initializing create_model()
2025-08-14 10:45:04,846:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff5a955450>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 10:45:04,846:INFO:Checking exceptions
2025-08-14 10:45:04,851:INFO:Importing untrained model
2025-08-14 10:45:04,851:INFO:K-Means Clustering Imported successfully
2025-08-14 10:45:04,851:INFO:Fitting Model
2025-08-14 10:45:05,076:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:45:05,080:INFO:create_models() successfully completed......................................
2025-08-14 10:45:05,080:INFO:Uploading results into container
2025-08-14 10:45:05,081:INFO:Uploading model into container now
2025-08-14 10:45:05,086:INFO:_master_model_container: 1
2025-08-14 10:45:05,086:INFO:_display_container: 2
2025-08-14 10:45:05,086:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 10:45:05,086:INFO:create_model() successfully completed......................................
2025-08-14 10:45:05,185:INFO:Initializing assign_model()
2025-08-14 10:45:05,185:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff5a955450>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 10:45:05,185:INFO:Checking exceptions
2025-08-14 10:45:05,185:INFO:Determining Trained Model
2025-08-14 10:45:05,185:INFO:Trained Model : K-Means Clustering
2025-08-14 10:45:05,185:INFO:Copying data
2025-08-14 10:45:05,186:INFO:(3000, 12)
2025-08-14 10:45:05,186:INFO:assign_model() successfully completed......................................
2025-08-14 10:45:05,189:INFO:Initializing save_model()
2025-08-14 10:45:05,189:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 10:45:05,189:INFO:Adding model into prep_pipe
2025-08-14 10:45:05,190:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 10:45:05,192:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 10:45:05,192:INFO:save_model() successfully completed......................................
2025-08-14 10:45:27,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:45:27,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:45:27,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:45:27,027:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 10:45:27,827:INFO:Initializing load_model()
2025-08-14 10:45:27,827:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 10:45:28,008:INFO:Initializing load_model()
2025-08-14 10:45:28,008:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 10:46:19,349:INFO:Initializing predict_model()
2025-08-14 10:46:19,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffffaada3f50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff61ac5f80>)
2025-08-14 10:46:19,351:INFO:Checking exceptions
2025-08-14 10:46:19,351:INFO:Preloading libraries
2025-08-14 10:46:19,352:INFO:Set up data.
2025-08-14 10:46:19,357:INFO:Set up index.
2025-08-14 10:46:19,363:INFO:Initializing predict_model()
2025-08-14 10:46:19,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff616eb410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff88753380>)
2025-08-14 10:46:19,363:INFO:Checking exceptions
2025-08-14 10:46:19,363:INFO:Preloading libraries
2025-08-14 10:46:19,363:INFO:Set up data.
2025-08-14 10:46:19,365:INFO:Set up index.
2025-08-14 10:46:20,038:INFO:Initializing predict_model()
2025-08-14 10:46:20,038:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffffaacd9bd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 10:46:20,039:INFO:Set up data.
2025-08-14 11:11:27,013:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:11:27,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:11:27,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:11:27,014:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:11:27,516:INFO:PyCaret ClassificationExperiment
2025-08-14 11:11:27,516:INFO:Logging name: clf-default-name
2025-08-14 11:11:27,516:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 11:11:27,516:INFO:version 3.3.2
2025-08-14 11:11:27,516:INFO:Initializing setup()
2025-08-14 11:11:27,516:INFO:self.USI: c7d2
2025-08-14 11:11:27,516:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'y_train', 'log_plots_param', 'X_test', 'gpu_param', 'is_multiclass', 'memory', 'gpu_n_jobs_param', 'exp_id', 'USI', 'html_param', 'X_train', 'n_jobs_param', 'y_test', 'fold_groups_param', 'fix_imbalance', 'seed', 'pipeline', 'logging_param', 'fold_generator', 'exp_name_log', 'data', 'X', 'fold_shuffle_param', 'idx', 'target_param', 'y'}
2025-08-14 11:11:27,516:INFO:Checking environment
2025-08-14 11:11:27,516:INFO:python_version: 3.11.13
2025-08-14 11:11:27,516:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:11:27,516:INFO:machine: aarch64
2025-08-14 11:11:27,516:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:11:27,516:INFO:Memory: svmem(total=4109803520, available=3416313856, percent=16.9, used=532701184, free=2715054080, active=901931008, inactive=319811584, buffers=73289728, cached=788758528, shared=1032192, slab=91529216)
2025-08-14 11:11:27,517:INFO:Physical Core: 8
2025-08-14 11:11:27,517:INFO:Logical Core: 8
2025-08-14 11:11:27,517:INFO:Checking libraries
2025-08-14 11:11:27,517:INFO:System:
2025-08-14 11:11:27,517:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:11:27,517:INFO:executable: /usr/local/bin/python
2025-08-14 11:11:27,517:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:11:27,517:INFO:PyCaret required dependencies:
2025-08-14 11:11:27,761:INFO:                 pip: 24.0
2025-08-14 11:11:27,761:INFO:          setuptools: 80.9.0
2025-08-14 11:11:27,761:INFO:             pycaret: 3.3.2
2025-08-14 11:11:27,761:INFO:             IPython: 9.4.0
2025-08-14 11:11:27,761:INFO:          ipywidgets: 8.1.7
2025-08-14 11:11:27,761:INFO:                tqdm: 4.67.1
2025-08-14 11:11:27,762:INFO:               numpy: 1.26.4
2025-08-14 11:11:27,762:INFO:              pandas: 2.1.4
2025-08-14 11:11:27,762:INFO:              jinja2: 3.1.6
2025-08-14 11:11:27,762:INFO:               scipy: 1.11.4
2025-08-14 11:11:27,762:INFO:              joblib: 1.3.2
2025-08-14 11:11:27,762:INFO:             sklearn: 1.4.2
2025-08-14 11:11:27,762:INFO:                pyod: 2.0.5
2025-08-14 11:11:27,762:INFO:            imblearn: 0.13.0
2025-08-14 11:11:27,762:INFO:   category_encoders: 2.7.0
2025-08-14 11:11:27,762:INFO:            lightgbm: 4.6.0
2025-08-14 11:11:27,762:INFO:               numba: 0.61.0
2025-08-14 11:11:27,762:INFO:            requests: 2.32.4
2025-08-14 11:11:27,762:INFO:          matplotlib: 3.7.5
2025-08-14 11:11:27,762:INFO:          scikitplot: 0.3.7
2025-08-14 11:11:27,762:INFO:         yellowbrick: 1.5
2025-08-14 11:11:27,762:INFO:              plotly: 5.24.1
2025-08-14 11:11:27,762:INFO:    plotly-resampler: Not installed
2025-08-14 11:11:27,762:INFO:             kaleido: 1.0.0
2025-08-14 11:11:27,762:INFO:           schemdraw: 0.15
2025-08-14 11:11:27,762:INFO:         statsmodels: 0.14.5
2025-08-14 11:11:27,762:INFO:              sktime: 0.26.0
2025-08-14 11:11:27,762:INFO:               tbats: 1.1.3
2025-08-14 11:11:27,762:INFO:            pmdarima: 2.0.4
2025-08-14 11:11:27,762:INFO:              psutil: 7.0.0
2025-08-14 11:11:27,762:INFO:          markupsafe: 3.0.2
2025-08-14 11:11:27,762:INFO:             pickle5: Not installed
2025-08-14 11:11:27,762:INFO:         cloudpickle: 3.1.1
2025-08-14 11:11:27,762:INFO:         deprecation: 2.1.0
2025-08-14 11:11:27,762:INFO:              xxhash: 3.5.0
2025-08-14 11:11:27,762:INFO:           wurlitzer: 3.1.1
2025-08-14 11:11:27,762:INFO:PyCaret optional dependencies:
2025-08-14 11:11:28,721:INFO:                shap: 0.44.1
2025-08-14 11:11:28,722:INFO:           interpret: 0.7.2
2025-08-14 11:11:28,722:INFO:                umap: 0.5.7
2025-08-14 11:11:28,722:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:11:28,722:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:11:28,722:INFO:             autoviz: Not installed
2025-08-14 11:11:28,722:INFO:           fairlearn: 0.7.0
2025-08-14 11:11:28,722:INFO:          deepchecks: Not installed
2025-08-14 11:11:28,722:INFO:             xgboost: 3.0.4
2025-08-14 11:11:28,722:INFO:            catboost: 1.2.8
2025-08-14 11:11:28,722:INFO:              kmodes: 0.12.2
2025-08-14 11:11:28,722:INFO:             mlxtend: 0.23.4
2025-08-14 11:11:28,722:INFO:       statsforecast: 1.5.0
2025-08-14 11:11:28,722:INFO:        tune_sklearn: Not installed
2025-08-14 11:11:28,722:INFO:                 ray: Not installed
2025-08-14 11:11:28,722:INFO:            hyperopt: 0.2.7
2025-08-14 11:11:28,722:INFO:              optuna: 4.4.0
2025-08-14 11:11:28,722:INFO:               skopt: 0.10.2
2025-08-14 11:11:28,722:INFO:              mlflow: 3.2.0
2025-08-14 11:11:28,722:INFO:              gradio: 5.42.0
2025-08-14 11:11:28,722:INFO:             fastapi: 0.116.1
2025-08-14 11:11:28,722:INFO:             uvicorn: 0.35.0
2025-08-14 11:11:28,722:INFO:              m2cgen: 0.10.0
2025-08-14 11:11:28,722:INFO:           evidently: 0.4.40
2025-08-14 11:11:28,722:INFO:               fugue: 0.8.7
2025-08-14 11:11:28,722:INFO:           streamlit: 1.48.1
2025-08-14 11:11:28,722:INFO:             prophet: Not installed
2025-08-14 11:11:28,722:INFO:None
2025-08-14 11:11:28,722:INFO:Set up data.
2025-08-14 11:11:28,725:INFO:Set up folding strategy.
2025-08-14 11:11:28,725:INFO:Set up train/test split.
2025-08-14 11:11:28,729:INFO:Set up index.
2025-08-14 11:11:28,729:INFO:Assigning column types.
2025-08-14 11:11:28,730:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 11:11:28,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,756:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,757:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,790:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,791:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 11:11:28,806:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,815:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,816:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:11:28,840:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,841:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,841:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 11:11:28,865:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,866:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,890:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,891:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:28,892:INFO:Preparing preprocessing pipeline...
2025-08-14 11:11:28,893:INFO:Set up label encoding.
2025-08-14 11:11:28,893:INFO:Set up simple imputation.
2025-08-14 11:11:28,894:INFO:Set up encoding of categorical features.
2025-08-14 11:11:28,894:INFO:Set up feature normalization.
2025-08-14 11:11:28,914:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:11:28,916:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:11:28,916:INFO:Creating final display dataframe.
2025-08-14 11:11:28,969:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     c7d2
2025-08-14 11:11:28,992:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:28,993:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:29,017:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:11:29,018:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:11:29,019:INFO:setup() successfully completed in 1.5s...............
2025-08-14 11:11:29,019:INFO:Initializing compare_models()
2025-08-14 11:11:29,019:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 11:11:29,019:INFO:Checking exceptions
2025-08-14 11:11:29,020:INFO:Preparing display monitor
2025-08-14 11:11:29,021:INFO:Initializing Logistic Regression
2025-08-14 11:11:29,021:INFO:Total runtime is 1.235802968343099e-06 minutes
2025-08-14 11:11:29,021:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:29,021:INFO:Initializing create_model()
2025-08-14 11:11:29,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:29,021:INFO:Checking exceptions
2025-08-14 11:11:29,021:INFO:Importing libraries
2025-08-14 11:11:29,021:INFO:Copying training dataset
2025-08-14 11:11:29,023:INFO:Defining folds
2025-08-14 11:11:29,023:INFO:Declaring metric variables
2025-08-14 11:11:29,023:INFO:Importing untrained model
2025-08-14 11:11:29,023:INFO:Logistic Regression Imported successfully
2025-08-14 11:11:29,023:INFO:Starting cross validation
2025-08-14 11:11:29,024:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:30,296:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,302:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,306:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,327:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,366:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,369:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,370:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,372:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,373:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,375:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,389:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,392:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,395:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,411:INFO:Calculating mean and std
2025-08-14 11:11:30,413:INFO:Creating metrics dataframe
2025-08-14 11:11:30,426:INFO:Uploading results into container
2025-08-14 11:11:30,427:INFO:Uploading model into container now
2025-08-14 11:11:30,429:INFO:_master_model_container: 1
2025-08-14 11:11:30,429:INFO:_display_container: 2
2025-08-14 11:11:30,430:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:11:30,430:INFO:create_model() successfully completed......................................
2025-08-14 11:11:30,622:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:30,622:INFO:Creating metrics dataframe
2025-08-14 11:11:30,623:INFO:Initializing K Neighbors Classifier
2025-08-14 11:11:30,623:INFO:Total runtime is 0.026709409554799397 minutes
2025-08-14 11:11:30,624:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:30,624:INFO:Initializing create_model()
2025-08-14 11:11:30,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:30,624:INFO:Checking exceptions
2025-08-14 11:11:30,624:INFO:Importing libraries
2025-08-14 11:11:30,624:INFO:Copying training dataset
2025-08-14 11:11:30,626:INFO:Defining folds
2025-08-14 11:11:30,626:INFO:Declaring metric variables
2025-08-14 11:11:30,626:INFO:Importing untrained model
2025-08-14 11:11:30,626:INFO:K Neighbors Classifier Imported successfully
2025-08-14 11:11:30,626:INFO:Starting cross validation
2025-08-14 11:11:30,627:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:30,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,747:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,749:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,755:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,758:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:30,761:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,638:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,640:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,641:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,641:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,644:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,644:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,644:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,647:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,647:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,658:INFO:Calculating mean and std
2025-08-14 11:11:31,659:INFO:Creating metrics dataframe
2025-08-14 11:11:31,666:INFO:Uploading results into container
2025-08-14 11:11:31,668:INFO:Uploading model into container now
2025-08-14 11:11:31,668:INFO:_master_model_container: 2
2025-08-14 11:11:31,668:INFO:_display_container: 2
2025-08-14 11:11:31,668:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 11:11:31,668:INFO:create_model() successfully completed......................................
2025-08-14 11:11:31,748:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:31,748:INFO:Creating metrics dataframe
2025-08-14 11:11:31,749:INFO:Initializing Naive Bayes
2025-08-14 11:11:31,749:INFO:Total runtime is 0.04546919266382853 minutes
2025-08-14 11:11:31,749:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:31,749:INFO:Initializing create_model()
2025-08-14 11:11:31,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:31,749:INFO:Checking exceptions
2025-08-14 11:11:31,749:INFO:Importing libraries
2025-08-14 11:11:31,749:INFO:Copying training dataset
2025-08-14 11:11:31,751:INFO:Defining folds
2025-08-14 11:11:31,751:INFO:Declaring metric variables
2025-08-14 11:11:31,751:INFO:Importing untrained model
2025-08-14 11:11:31,751:INFO:Naive Bayes Imported successfully
2025-08-14 11:11:31,751:INFO:Starting cross validation
2025-08-14 11:11:31,752:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:31,805:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,808:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,808:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,810:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,812:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,812:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,813:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,814:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,814:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,816:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,816:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,817:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,818:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,821:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,822:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,837:INFO:Calculating mean and std
2025-08-14 11:11:31,837:INFO:Creating metrics dataframe
2025-08-14 11:11:31,838:INFO:Uploading results into container
2025-08-14 11:11:31,838:INFO:Uploading model into container now
2025-08-14 11:11:31,838:INFO:_master_model_container: 3
2025-08-14 11:11:31,839:INFO:_display_container: 2
2025-08-14 11:11:31,839:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 11:11:31,839:INFO:create_model() successfully completed......................................
2025-08-14 11:11:31,905:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:31,905:INFO:Creating metrics dataframe
2025-08-14 11:11:31,906:INFO:Initializing Decision Tree Classifier
2025-08-14 11:11:31,906:INFO:Total runtime is 0.04809289773305257 minutes
2025-08-14 11:11:31,907:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:31,907:INFO:Initializing create_model()
2025-08-14 11:11:31,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:31,907:INFO:Checking exceptions
2025-08-14 11:11:31,907:INFO:Importing libraries
2025-08-14 11:11:31,907:INFO:Copying training dataset
2025-08-14 11:11:31,909:INFO:Defining folds
2025-08-14 11:11:31,909:INFO:Declaring metric variables
2025-08-14 11:11:31,909:INFO:Importing untrained model
2025-08-14 11:11:31,909:INFO:Decision Tree Classifier Imported successfully
2025-08-14 11:11:31,909:INFO:Starting cross validation
2025-08-14 11:11:31,909:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:31,936:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,937:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,939:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,940:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,941:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,942:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,943:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,944:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,944:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,944:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,946:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,947:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,950:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,951:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:31,961:INFO:Calculating mean and std
2025-08-14 11:11:31,961:INFO:Creating metrics dataframe
2025-08-14 11:11:31,962:INFO:Uploading results into container
2025-08-14 11:11:31,962:INFO:Uploading model into container now
2025-08-14 11:11:31,962:INFO:_master_model_container: 4
2025-08-14 11:11:31,962:INFO:_display_container: 2
2025-08-14 11:11:31,962:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 11:11:31,962:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,029:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,029:INFO:Creating metrics dataframe
2025-08-14 11:11:32,030:INFO:Initializing SVM - Linear Kernel
2025-08-14 11:11:32,030:INFO:Total runtime is 0.05014905532201131 minutes
2025-08-14 11:11:32,030:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,030:INFO:Initializing create_model()
2025-08-14 11:11:32,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,030:INFO:Checking exceptions
2025-08-14 11:11:32,030:INFO:Importing libraries
2025-08-14 11:11:32,030:INFO:Copying training dataset
2025-08-14 11:11:32,032:INFO:Defining folds
2025-08-14 11:11:32,032:INFO:Declaring metric variables
2025-08-14 11:11:32,032:INFO:Importing untrained model
2025-08-14 11:11:32,032:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 11:11:32,032:INFO:Starting cross validation
2025-08-14 11:11:32,033:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,060:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,062:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,063:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,064:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,065:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,066:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,067:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,068:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,069:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,069:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,071:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,071:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,074:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,074:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,083:INFO:Calculating mean and std
2025-08-14 11:11:32,084:INFO:Creating metrics dataframe
2025-08-14 11:11:32,084:INFO:Uploading results into container
2025-08-14 11:11:32,085:INFO:Uploading model into container now
2025-08-14 11:11:32,085:INFO:_master_model_container: 5
2025-08-14 11:11:32,085:INFO:_display_container: 2
2025-08-14 11:11:32,085:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 11:11:32,085:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,152:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,152:INFO:Creating metrics dataframe
2025-08-14 11:11:32,153:INFO:Initializing Ridge Classifier
2025-08-14 11:11:32,153:INFO:Total runtime is 0.052198147773742674 minutes
2025-08-14 11:11:32,153:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,153:INFO:Initializing create_model()
2025-08-14 11:11:32,153:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,153:INFO:Checking exceptions
2025-08-14 11:11:32,153:INFO:Importing libraries
2025-08-14 11:11:32,153:INFO:Copying training dataset
2025-08-14 11:11:32,155:INFO:Defining folds
2025-08-14 11:11:32,155:INFO:Declaring metric variables
2025-08-14 11:11:32,155:INFO:Importing untrained model
2025-08-14 11:11:32,155:INFO:Ridge Classifier Imported successfully
2025-08-14 11:11:32,155:INFO:Starting cross validation
2025-08-14 11:11:32,156:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,191:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,191:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,193:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,194:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,195:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,197:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,198:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,199:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,217:INFO:Calculating mean and std
2025-08-14 11:11:32,217:INFO:Creating metrics dataframe
2025-08-14 11:11:32,218:INFO:Uploading results into container
2025-08-14 11:11:32,218:INFO:Uploading model into container now
2025-08-14 11:11:32,218:INFO:_master_model_container: 6
2025-08-14 11:11:32,218:INFO:_display_container: 2
2025-08-14 11:11:32,218:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 11:11:32,218:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,285:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,285:INFO:Creating metrics dataframe
2025-08-14 11:11:32,286:INFO:Initializing Random Forest Classifier
2025-08-14 11:11:32,286:INFO:Total runtime is 0.054419422149658205 minutes
2025-08-14 11:11:32,286:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,286:INFO:Initializing create_model()
2025-08-14 11:11:32,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,286:INFO:Checking exceptions
2025-08-14 11:11:32,286:INFO:Importing libraries
2025-08-14 11:11:32,286:INFO:Copying training dataset
2025-08-14 11:11:32,288:INFO:Defining folds
2025-08-14 11:11:32,288:INFO:Declaring metric variables
2025-08-14 11:11:32,288:INFO:Importing untrained model
2025-08-14 11:11:32,288:INFO:Random Forest Classifier Imported successfully
2025-08-14 11:11:32,289:INFO:Starting cross validation
2025-08-14 11:11:32,289:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,457:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,458:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,459:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,461:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,461:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,462:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,462:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,464:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,464:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,465:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,471:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,483:INFO:Calculating mean and std
2025-08-14 11:11:32,483:INFO:Creating metrics dataframe
2025-08-14 11:11:32,484:INFO:Uploading results into container
2025-08-14 11:11:32,484:INFO:Uploading model into container now
2025-08-14 11:11:32,484:INFO:_master_model_container: 7
2025-08-14 11:11:32,484:INFO:_display_container: 2
2025-08-14 11:11:32,485:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 11:11:32,485:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,558:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,558:INFO:Creating metrics dataframe
2025-08-14 11:11:32,559:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 11:11:32,559:INFO:Total runtime is 0.05896733601888021 minutes
2025-08-14 11:11:32,559:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,559:INFO:Initializing create_model()
2025-08-14 11:11:32,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,559:INFO:Checking exceptions
2025-08-14 11:11:32,559:INFO:Importing libraries
2025-08-14 11:11:32,559:INFO:Copying training dataset
2025-08-14 11:11:32,561:INFO:Defining folds
2025-08-14 11:11:32,561:INFO:Declaring metric variables
2025-08-14 11:11:32,561:INFO:Importing untrained model
2025-08-14 11:11:32,561:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 11:11:32,561:INFO:Starting cross validation
2025-08-14 11:11:32,562:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,588:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:11:32,588:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:11:32,592:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:11:32,594:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:11:32,595:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:11:32,599:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,601:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,602:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:11:32,602:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:11:32,602:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:11:32,603:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,603:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,604:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:11:32,604:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,605:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,605:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:11:32,607:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,608:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,608:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,608:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,608:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:11:32,611:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,614:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 11:11:32,615:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,615:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,618:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,619:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:32,620:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,636:INFO:Calculating mean and std
2025-08-14 11:11:32,637:INFO:Creating metrics dataframe
2025-08-14 11:11:32,637:INFO:Uploading results into container
2025-08-14 11:11:32,638:INFO:Uploading model into container now
2025-08-14 11:11:32,638:INFO:_master_model_container: 8
2025-08-14 11:11:32,638:INFO:_display_container: 2
2025-08-14 11:11:32,638:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 11:11:32,638:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,705:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,705:INFO:Creating metrics dataframe
2025-08-14 11:11:32,706:INFO:Initializing Ada Boost Classifier
2025-08-14 11:11:32,706:INFO:Total runtime is 0.0614203413327535 minutes
2025-08-14 11:11:32,706:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,706:INFO:Initializing create_model()
2025-08-14 11:11:32,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,706:INFO:Checking exceptions
2025-08-14 11:11:32,706:INFO:Importing libraries
2025-08-14 11:11:32,706:INFO:Copying training dataset
2025-08-14 11:11:32,708:INFO:Defining folds
2025-08-14 11:11:32,708:INFO:Declaring metric variables
2025-08-14 11:11:32,708:INFO:Importing untrained model
2025-08-14 11:11:32,708:INFO:Ada Boost Classifier Imported successfully
2025-08-14 11:11:32,709:INFO:Starting cross validation
2025-08-14 11:11:32,709:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,727:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:11:32,728:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:11:32,729:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:11:32,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:11:32,736:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:11:32,739:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,741:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,741:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,747:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,750:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,750:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,753:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,771:INFO:Calculating mean and std
2025-08-14 11:11:32,771:INFO:Creating metrics dataframe
2025-08-14 11:11:32,772:INFO:Uploading results into container
2025-08-14 11:11:32,772:INFO:Uploading model into container now
2025-08-14 11:11:32,772:INFO:_master_model_container: 9
2025-08-14 11:11:32,772:INFO:_display_container: 2
2025-08-14 11:11:32,772:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 11:11:32,772:INFO:create_model() successfully completed......................................
2025-08-14 11:11:32,839:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:32,839:INFO:Creating metrics dataframe
2025-08-14 11:11:32,840:INFO:Initializing Gradient Boosting Classifier
2025-08-14 11:11:32,840:INFO:Total runtime is 0.06365919510523478 minutes
2025-08-14 11:11:32,841:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:32,841:INFO:Initializing create_model()
2025-08-14 11:11:32,841:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:32,841:INFO:Checking exceptions
2025-08-14 11:11:32,841:INFO:Importing libraries
2025-08-14 11:11:32,841:INFO:Copying training dataset
2025-08-14 11:11:32,843:INFO:Defining folds
2025-08-14 11:11:32,843:INFO:Declaring metric variables
2025-08-14 11:11:32,843:INFO:Importing untrained model
2025-08-14 11:11:32,843:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 11:11:32,843:INFO:Starting cross validation
2025-08-14 11:11:32,843:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:32,948:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,954:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,954:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,956:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,957:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,957:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,958:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,959:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,960:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,960:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,961:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,963:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,964:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,965:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,967:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:32,983:INFO:Calculating mean and std
2025-08-14 11:11:32,984:INFO:Creating metrics dataframe
2025-08-14 11:11:32,984:INFO:Uploading results into container
2025-08-14 11:11:32,985:INFO:Uploading model into container now
2025-08-14 11:11:32,985:INFO:_master_model_container: 10
2025-08-14 11:11:32,985:INFO:_display_container: 2
2025-08-14 11:11:32,985:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 11:11:32,985:INFO:create_model() successfully completed......................................
2025-08-14 11:11:33,052:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:33,052:INFO:Creating metrics dataframe
2025-08-14 11:11:33,053:INFO:Initializing Linear Discriminant Analysis
2025-08-14 11:11:33,053:INFO:Total runtime is 0.06719679037729899 minutes
2025-08-14 11:11:33,053:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:33,053:INFO:Initializing create_model()
2025-08-14 11:11:33,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:33,053:INFO:Checking exceptions
2025-08-14 11:11:33,053:INFO:Importing libraries
2025-08-14 11:11:33,053:INFO:Copying training dataset
2025-08-14 11:11:33,055:INFO:Defining folds
2025-08-14 11:11:33,055:INFO:Declaring metric variables
2025-08-14 11:11:33,055:INFO:Importing untrained model
2025-08-14 11:11:33,055:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 11:11:33,055:INFO:Starting cross validation
2025-08-14 11:11:33,056:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:33,086:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,087:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,088:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,093:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,093:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,095:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,095:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,095:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,096:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,097:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,098:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,102:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,102:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,119:INFO:Calculating mean and std
2025-08-14 11:11:33,119:INFO:Creating metrics dataframe
2025-08-14 11:11:33,120:INFO:Uploading results into container
2025-08-14 11:11:33,120:INFO:Uploading model into container now
2025-08-14 11:11:33,120:INFO:_master_model_container: 11
2025-08-14 11:11:33,120:INFO:_display_container: 2
2025-08-14 11:11:33,120:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 11:11:33,120:INFO:create_model() successfully completed......................................
2025-08-14 11:11:33,187:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:33,187:INFO:Creating metrics dataframe
2025-08-14 11:11:33,188:INFO:Initializing Extra Trees Classifier
2025-08-14 11:11:33,188:INFO:Total runtime is 0.0694482684135437 minutes
2025-08-14 11:11:33,188:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:33,188:INFO:Initializing create_model()
2025-08-14 11:11:33,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:33,188:INFO:Checking exceptions
2025-08-14 11:11:33,188:INFO:Importing libraries
2025-08-14 11:11:33,188:INFO:Copying training dataset
2025-08-14 11:11:33,190:INFO:Defining folds
2025-08-14 11:11:33,190:INFO:Declaring metric variables
2025-08-14 11:11:33,190:INFO:Importing untrained model
2025-08-14 11:11:33,190:INFO:Extra Trees Classifier Imported successfully
2025-08-14 11:11:33,190:INFO:Starting cross validation
2025-08-14 11:11:33,191:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:33,318:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,321:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,323:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,327:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,347:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,363:INFO:Calculating mean and std
2025-08-14 11:11:33,363:INFO:Creating metrics dataframe
2025-08-14 11:11:33,365:INFO:Uploading results into container
2025-08-14 11:11:33,366:INFO:Uploading model into container now
2025-08-14 11:11:33,366:INFO:_master_model_container: 12
2025-08-14 11:11:33,366:INFO:_display_container: 2
2025-08-14 11:11:33,366:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 11:11:33,366:INFO:create_model() successfully completed......................................
2025-08-14 11:11:33,435:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:33,435:INFO:Creating metrics dataframe
2025-08-14 11:11:33,436:INFO:Initializing Extreme Gradient Boosting
2025-08-14 11:11:33,436:INFO:Total runtime is 0.07358523209889731 minutes
2025-08-14 11:11:33,436:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:33,436:INFO:Initializing create_model()
2025-08-14 11:11:33,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:33,436:INFO:Checking exceptions
2025-08-14 11:11:33,436:INFO:Importing libraries
2025-08-14 11:11:33,436:INFO:Copying training dataset
2025-08-14 11:11:33,438:INFO:Defining folds
2025-08-14 11:11:33,438:INFO:Declaring metric variables
2025-08-14 11:11:33,438:INFO:Importing untrained model
2025-08-14 11:11:33,439:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 11:11:33,439:INFO:Starting cross validation
2025-08-14 11:11:33,439:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:33,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,499:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,500:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,501:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,502:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,505:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,506:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,508:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,509:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:33,516:INFO:Calculating mean and std
2025-08-14 11:11:33,517:INFO:Creating metrics dataframe
2025-08-14 11:11:33,518:INFO:Uploading results into container
2025-08-14 11:11:33,518:INFO:Uploading model into container now
2025-08-14 11:11:33,518:INFO:_master_model_container: 13
2025-08-14 11:11:33,518:INFO:_display_container: 2
2025-08-14 11:11:33,518:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 11:11:33,519:INFO:create_model() successfully completed......................................
2025-08-14 11:11:33,589:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:33,589:INFO:Creating metrics dataframe
2025-08-14 11:11:33,590:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 11:11:33,590:INFO:Total runtime is 0.0761552413304647 minutes
2025-08-14 11:11:33,590:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:33,590:INFO:Initializing create_model()
2025-08-14 11:11:33,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:33,590:INFO:Checking exceptions
2025-08-14 11:11:33,590:INFO:Importing libraries
2025-08-14 11:11:33,591:INFO:Copying training dataset
2025-08-14 11:11:33,592:INFO:Defining folds
2025-08-14 11:11:33,592:INFO:Declaring metric variables
2025-08-14 11:11:33,592:INFO:Importing untrained model
2025-08-14 11:11:33,593:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 11:11:33,593:INFO:Starting cross validation
2025-08-14 11:11:33,593:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:36,247:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,253:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,257:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,307:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,310:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,313:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,341:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,344:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,348:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,370:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,373:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,375:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,376:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,379:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,382:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:36,396:INFO:Calculating mean and std
2025-08-14 11:11:36,396:INFO:Creating metrics dataframe
2025-08-14 11:11:36,397:INFO:Uploading results into container
2025-08-14 11:11:36,398:INFO:Uploading model into container now
2025-08-14 11:11:36,398:INFO:_master_model_container: 14
2025-08-14 11:11:36,398:INFO:_display_container: 2
2025-08-14 11:11:36,398:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 11:11:36,398:INFO:create_model() successfully completed......................................
2025-08-14 11:11:36,544:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:36,544:INFO:Creating metrics dataframe
2025-08-14 11:11:36,546:INFO:Initializing CatBoost Classifier
2025-08-14 11:11:36,546:INFO:Total runtime is 0.1254119952519735 minutes
2025-08-14 11:11:36,546:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:36,546:INFO:Initializing create_model()
2025-08-14 11:11:36,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:36,546:INFO:Checking exceptions
2025-08-14 11:11:36,546:INFO:Importing libraries
2025-08-14 11:11:36,546:INFO:Copying training dataset
2025-08-14 11:11:36,548:INFO:Defining folds
2025-08-14 11:11:36,548:INFO:Declaring metric variables
2025-08-14 11:11:36,548:INFO:Importing untrained model
2025-08-14 11:11:36,548:INFO:CatBoost Classifier Imported successfully
2025-08-14 11:11:36,549:INFO:Starting cross validation
2025-08-14 11:11:36,549:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:42,179:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,184:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,185:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,188:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,191:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,192:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,218:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,238:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,241:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,243:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,255:INFO:Calculating mean and std
2025-08-14 11:11:42,257:INFO:Creating metrics dataframe
2025-08-14 11:11:42,262:INFO:Uploading results into container
2025-08-14 11:11:42,263:INFO:Uploading model into container now
2025-08-14 11:11:42,263:INFO:_master_model_container: 15
2025-08-14 11:11:42,263:INFO:_display_container: 2
2025-08-14 11:11:42,263:INFO:<catboost.core.CatBoostClassifier object at 0xffff16f72990>
2025-08-14 11:11:42,263:INFO:create_model() successfully completed......................................
2025-08-14 11:11:42,451:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:42,452:INFO:Creating metrics dataframe
2025-08-14 11:11:42,453:INFO:Initializing Dummy Classifier
2025-08-14 11:11:42,453:INFO:Total runtime is 0.22386946678161623 minutes
2025-08-14 11:11:42,453:INFO:SubProcess create_model() called ==================================
2025-08-14 11:11:42,453:INFO:Initializing create_model()
2025-08-14 11:11:42,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff16e15ed0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:42,453:INFO:Checking exceptions
2025-08-14 11:11:42,453:INFO:Importing libraries
2025-08-14 11:11:42,453:INFO:Copying training dataset
2025-08-14 11:11:42,456:INFO:Defining folds
2025-08-14 11:11:42,456:INFO:Declaring metric variables
2025-08-14 11:11:42,456:INFO:Importing untrained model
2025-08-14 11:11:42,456:INFO:Dummy Classifier Imported successfully
2025-08-14 11:11:42,456:INFO:Starting cross validation
2025-08-14 11:11:42,457:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:11:42,521:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,524:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,527:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,528:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,529:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,529:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:42,530:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,531:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:42,531:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,532:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,532:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,533:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,533:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,534:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:42,536:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,537:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,538:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:42,538:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:11:42,539:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,539:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:11:42,552:INFO:Calculating mean and std
2025-08-14 11:11:42,552:INFO:Creating metrics dataframe
2025-08-14 11:11:42,553:INFO:Uploading results into container
2025-08-14 11:11:42,553:INFO:Uploading model into container now
2025-08-14 11:11:42,553:INFO:_master_model_container: 16
2025-08-14 11:11:42,554:INFO:_display_container: 2
2025-08-14 11:11:42,554:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 11:11:42,554:INFO:create_model() successfully completed......................................
2025-08-14 11:11:42,624:INFO:SubProcess create_model() end ==================================
2025-08-14 11:11:42,625:INFO:Creating metrics dataframe
2025-08-14 11:11:42,626:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 11:11:42,627:INFO:Initializing create_model()
2025-08-14 11:11:42,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:42,627:INFO:Checking exceptions
2025-08-14 11:11:42,627:INFO:Importing libraries
2025-08-14 11:11:42,627:INFO:Copying training dataset
2025-08-14 11:11:42,629:INFO:Defining folds
2025-08-14 11:11:42,629:INFO:Declaring metric variables
2025-08-14 11:11:42,629:INFO:Importing untrained model
2025-08-14 11:11:42,629:INFO:Declaring custom model
2025-08-14 11:11:42,630:INFO:Logistic Regression Imported successfully
2025-08-14 11:11:42,630:INFO:Cross validation set to False
2025-08-14 11:11:42,630:INFO:Fitting Model
2025-08-14 11:11:42,656:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:11:42,656:INFO:create_model() successfully completed......................................
2025-08-14 11:11:42,765:INFO:_master_model_container: 16
2025-08-14 11:11:42,765:INFO:_display_container: 2
2025-08-14 11:11:42,765:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:11:42,765:INFO:compare_models() successfully completed......................................
2025-08-14 11:11:42,765:INFO:Initializing finalize_model()
2025-08-14 11:11:42,765:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 11:11:42,766:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:11:42,767:INFO:Initializing create_model()
2025-08-14 11:11:42,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff853a2f50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:11:42,767:INFO:Checking exceptions
2025-08-14 11:11:42,767:INFO:Importing libraries
2025-08-14 11:11:42,767:INFO:Copying training dataset
2025-08-14 11:11:42,767:INFO:Defining folds
2025-08-14 11:11:42,767:INFO:Declaring metric variables
2025-08-14 11:11:42,767:INFO:Importing untrained model
2025-08-14 11:11:42,767:INFO:Declaring custom model
2025-08-14 11:11:42,768:INFO:Logistic Regression Imported successfully
2025-08-14 11:11:42,768:INFO:Cross validation set to False
2025-08-14 11:11:42,768:INFO:Fitting Model
2025-08-14 11:11:42,792:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:11:42,792:INFO:create_model() successfully completed......................................
2025-08-14 11:11:42,895:INFO:_master_model_container: 16
2025-08-14 11:11:42,895:INFO:_display_container: 2
2025-08-14 11:11:42,897:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:11:42,897:INFO:finalize_model() successfully completed......................................
2025-08-14 11:11:42,971:INFO:Initializing save_model()
2025-08-14 11:11:42,971:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 11:11:42,971:INFO:Adding model into prep_pipe
2025-08-14 11:11:42,971:WARNING:Only Model saved as it was a pipeline.
2025-08-14 11:11:42,974:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 11:11:42,976:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:11:42,976:INFO:save_model() successfully completed......................................
2025-08-14 11:11:43,050:INFO:PyCaret ClusteringExperiment
2025-08-14 11:11:43,050:INFO:Logging name: cluster-default-name
2025-08-14 11:11:43,050:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 11:11:43,050:INFO:version 3.3.2
2025-08-14 11:11:43,050:INFO:Initializing setup()
2025-08-14 11:11:43,050:INFO:self.USI: ed83
2025-08-14 11:11:43,050:INFO:self._variable_keys: {'_available_plots', '_ml_usecase', 'log_plots_param', 'gpu_param', 'memory', 'gpu_n_jobs_param', 'exp_id', 'USI', 'html_param', 'n_jobs_param', 'seed', 'pipeline', 'logging_param', 'exp_name_log', 'data', 'X', 'idx'}
2025-08-14 11:11:43,051:INFO:Checking environment
2025-08-14 11:11:43,051:INFO:python_version: 3.11.13
2025-08-14 11:11:43,051:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:11:43,051:INFO:machine: aarch64
2025-08-14 11:11:43,051:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:11:43,051:INFO:Memory: svmem(total=4109803520, available=1245421568, percent=69.7, used=2701897728, free=541851648, active=3039199232, inactive=320446464, buffers=73416704, cached=792637440, shared=1093632, slab=100470784)
2025-08-14 11:11:43,051:INFO:Physical Core: 8
2025-08-14 11:11:43,051:INFO:Logical Core: 8
2025-08-14 11:11:43,051:INFO:Checking libraries
2025-08-14 11:11:43,051:INFO:System:
2025-08-14 11:11:43,051:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:11:43,051:INFO:executable: /usr/local/bin/python
2025-08-14 11:11:43,051:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:11:43,051:INFO:PyCaret required dependencies:
2025-08-14 11:11:43,052:INFO:                 pip: 24.0
2025-08-14 11:11:43,052:INFO:          setuptools: 80.9.0
2025-08-14 11:11:43,052:INFO:             pycaret: 3.3.2
2025-08-14 11:11:43,052:INFO:             IPython: 9.4.0
2025-08-14 11:11:43,052:INFO:          ipywidgets: 8.1.7
2025-08-14 11:11:43,052:INFO:                tqdm: 4.67.1
2025-08-14 11:11:43,052:INFO:               numpy: 1.26.4
2025-08-14 11:11:43,052:INFO:              pandas: 2.1.4
2025-08-14 11:11:43,052:INFO:              jinja2: 3.1.6
2025-08-14 11:11:43,052:INFO:               scipy: 1.11.4
2025-08-14 11:11:43,052:INFO:              joblib: 1.3.2
2025-08-14 11:11:43,052:INFO:             sklearn: 1.4.2
2025-08-14 11:11:43,052:INFO:                pyod: 2.0.5
2025-08-14 11:11:43,052:INFO:            imblearn: 0.13.0
2025-08-14 11:11:43,052:INFO:   category_encoders: 2.7.0
2025-08-14 11:11:43,052:INFO:            lightgbm: 4.6.0
2025-08-14 11:11:43,052:INFO:               numba: 0.61.0
2025-08-14 11:11:43,052:INFO:            requests: 2.32.4
2025-08-14 11:11:43,052:INFO:          matplotlib: 3.7.5
2025-08-14 11:11:43,052:INFO:          scikitplot: 0.3.7
2025-08-14 11:11:43,052:INFO:         yellowbrick: 1.5
2025-08-14 11:11:43,052:INFO:              plotly: 5.24.1
2025-08-14 11:11:43,052:INFO:    plotly-resampler: Not installed
2025-08-14 11:11:43,052:INFO:             kaleido: 1.0.0
2025-08-14 11:11:43,052:INFO:           schemdraw: 0.15
2025-08-14 11:11:43,052:INFO:         statsmodels: 0.14.5
2025-08-14 11:11:43,052:INFO:              sktime: 0.26.0
2025-08-14 11:11:43,052:INFO:               tbats: 1.1.3
2025-08-14 11:11:43,052:INFO:            pmdarima: 2.0.4
2025-08-14 11:11:43,052:INFO:              psutil: 7.0.0
2025-08-14 11:11:43,052:INFO:          markupsafe: 3.0.2
2025-08-14 11:11:43,052:INFO:             pickle5: Not installed
2025-08-14 11:11:43,052:INFO:         cloudpickle: 3.1.1
2025-08-14 11:11:43,052:INFO:         deprecation: 2.1.0
2025-08-14 11:11:43,053:INFO:              xxhash: 3.5.0
2025-08-14 11:11:43,053:INFO:           wurlitzer: 3.1.1
2025-08-14 11:11:43,053:INFO:PyCaret optional dependencies:
2025-08-14 11:11:43,053:INFO:                shap: 0.44.1
2025-08-14 11:11:43,053:INFO:           interpret: 0.7.2
2025-08-14 11:11:43,053:INFO:                umap: 0.5.7
2025-08-14 11:11:43,053:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:11:43,053:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:11:43,053:INFO:             autoviz: Not installed
2025-08-14 11:11:43,053:INFO:           fairlearn: 0.7.0
2025-08-14 11:11:43,053:INFO:          deepchecks: Not installed
2025-08-14 11:11:43,053:INFO:             xgboost: 3.0.4
2025-08-14 11:11:43,053:INFO:            catboost: 1.2.8
2025-08-14 11:11:43,053:INFO:              kmodes: 0.12.2
2025-08-14 11:11:43,053:INFO:             mlxtend: 0.23.4
2025-08-14 11:11:43,053:INFO:       statsforecast: 1.5.0
2025-08-14 11:11:43,053:INFO:        tune_sklearn: Not installed
2025-08-14 11:11:43,053:INFO:                 ray: Not installed
2025-08-14 11:11:43,053:INFO:            hyperopt: 0.2.7
2025-08-14 11:11:43,053:INFO:              optuna: 4.4.0
2025-08-14 11:11:43,053:INFO:               skopt: 0.10.2
2025-08-14 11:11:43,053:INFO:              mlflow: 3.2.0
2025-08-14 11:11:43,053:INFO:              gradio: 5.42.0
2025-08-14 11:11:43,053:INFO:             fastapi: 0.116.1
2025-08-14 11:11:43,053:INFO:             uvicorn: 0.35.0
2025-08-14 11:11:43,053:INFO:              m2cgen: 0.10.0
2025-08-14 11:11:43,053:INFO:           evidently: 0.4.40
2025-08-14 11:11:43,053:INFO:               fugue: 0.8.7
2025-08-14 11:11:43,053:INFO:           streamlit: 1.48.1
2025-08-14 11:11:43,053:INFO:             prophet: Not installed
2025-08-14 11:11:43,053:INFO:None
2025-08-14 11:11:43,053:INFO:Set up data.
2025-08-14 11:11:43,054:INFO:Set up index.
2025-08-14 11:11:43,054:INFO:Assigning column types.
2025-08-14 11:11:43,055:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 11:11:43,056:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:11:43,056:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,058:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:11:43,058:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,058:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 11:11:43,058:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,058:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,059:INFO:Preparing preprocessing pipeline...
2025-08-14 11:11:43,059:INFO:Set up simple imputation.
2025-08-14 11:11:43,059:INFO:Set up feature normalization.
2025-08-14 11:11:43,064:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:11:43,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:11:43,065:INFO:Creating final display dataframe.
2025-08-14 11:11:43,072:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  ed83
2025-08-14 11:11:43,072:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,072:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:11:43,072:INFO:setup() successfully completed in 0.02s...............
2025-08-14 11:11:43,072:INFO:Initializing create_model()
2025-08-14 11:11:43,072:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff28761050>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 11:11:43,072:INFO:Checking exceptions
2025-08-14 11:11:43,077:INFO:Importing untrained model
2025-08-14 11:11:43,078:INFO:K-Means Clustering Imported successfully
2025-08-14 11:11:43,078:INFO:Fitting Model
2025-08-14 11:11:43,285:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:11:43,285:INFO:create_models() successfully completed......................................
2025-08-14 11:11:43,285:INFO:Uploading results into container
2025-08-14 11:11:43,287:INFO:Uploading model into container now
2025-08-14 11:11:43,292:INFO:_master_model_container: 1
2025-08-14 11:11:43,292:INFO:_display_container: 2
2025-08-14 11:11:43,293:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:11:43,293:INFO:create_model() successfully completed......................................
2025-08-14 11:11:43,384:INFO:Initializing assign_model()
2025-08-14 11:11:43,384:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff28761050>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 11:11:43,384:INFO:Checking exceptions
2025-08-14 11:11:43,384:INFO:Determining Trained Model
2025-08-14 11:11:43,384:INFO:Trained Model : K-Means Clustering
2025-08-14 11:11:43,384:INFO:Copying data
2025-08-14 11:11:43,385:INFO:(3000, 12)
2025-08-14 11:11:43,385:INFO:assign_model() successfully completed......................................
2025-08-14 11:11:43,387:INFO:Initializing save_model()
2025-08-14 11:11:43,387:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 11:11:43,387:INFO:Adding model into prep_pipe
2025-08-14 11:11:43,389:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 11:11:43,391:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 11:11:43,391:INFO:save_model() successfully completed......................................
2025-08-14 11:13:29,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:13:29,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:13:29,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:13:29,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:13:30,673:INFO:Initializing load_model()
2025-08-14 11:13:30,673:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 11:13:30,858:INFO:Initializing load_model()
2025-08-14 11:13:30,858:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 11:14:43,874:INFO:Initializing predict_model()
2025-08-14 11:14:43,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff2c8e4610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff5a880fe0>)
2025-08-14 11:14:43,876:INFO:Checking exceptions
2025-08-14 11:14:43,876:INFO:Preloading libraries
2025-08-14 11:14:43,877:INFO:Set up data.
2025-08-14 11:14:43,882:INFO:Set up index.
2025-08-14 11:14:43,889:INFO:Initializing predict_model()
2025-08-14 11:14:43,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d922510>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff5a883100>)
2025-08-14 11:14:43,889:INFO:Checking exceptions
2025-08-14 11:14:43,889:INFO:Preloading libraries
2025-08-14 11:14:43,889:INFO:Set up data.
2025-08-14 11:14:43,891:INFO:Set up index.
2025-08-14 11:14:44,563:INFO:Initializing predict_model()
2025-08-14 11:14:44,564:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff2c8e77d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 11:14:44,564:INFO:Set up data.
2025-08-14 11:24:48,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:24:48,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:24:48,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:24:48,408:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:24:48,909:INFO:PyCaret ClassificationExperiment
2025-08-14 11:24:48,909:INFO:Logging name: clf-default-name
2025-08-14 11:24:48,909:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 11:24:48,909:INFO:version 3.3.2
2025-08-14 11:24:48,909:INFO:Initializing setup()
2025-08-14 11:24:48,909:INFO:self.USI: cab9
2025-08-14 11:24:48,909:INFO:self._variable_keys: {'exp_id', 'n_jobs_param', 'fold_groups_param', 'USI', 'fold_generator', 'data', 'logging_param', 'gpu_n_jobs_param', 'y_test', 'X_train', 'seed', 'X_test', 'html_param', 'memory', 'pipeline', 'y', 'target_param', 'fold_shuffle_param', 'fix_imbalance', 'idx', 'y_train', 'is_multiclass', '_available_plots', 'log_plots_param', 'exp_name_log', '_ml_usecase', 'X', 'gpu_param'}
2025-08-14 11:24:48,909:INFO:Checking environment
2025-08-14 11:24:48,909:INFO:python_version: 3.11.13
2025-08-14 11:24:48,909:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:24:48,909:INFO:machine: aarch64
2025-08-14 11:24:48,909:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:24:48,910:INFO:Memory: svmem(total=4109803520, available=3414908928, percent=16.9, used=534032384, free=2712637440, active=903757824, inactive=320774144, buffers=74080256, cached=789053440, shared=1032192, slab=91635712)
2025-08-14 11:24:48,910:INFO:Physical Core: 8
2025-08-14 11:24:48,910:INFO:Logical Core: 8
2025-08-14 11:24:48,910:INFO:Checking libraries
2025-08-14 11:24:48,910:INFO:System:
2025-08-14 11:24:48,910:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:24:48,910:INFO:executable: /usr/local/bin/python
2025-08-14 11:24:48,910:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:24:48,910:INFO:PyCaret required dependencies:
2025-08-14 11:24:49,157:INFO:                 pip: 24.0
2025-08-14 11:24:49,157:INFO:          setuptools: 80.9.0
2025-08-14 11:24:49,158:INFO:             pycaret: 3.3.2
2025-08-14 11:24:49,158:INFO:             IPython: 9.4.0
2025-08-14 11:24:49,158:INFO:          ipywidgets: 8.1.7
2025-08-14 11:24:49,158:INFO:                tqdm: 4.67.1
2025-08-14 11:24:49,158:INFO:               numpy: 1.26.4
2025-08-14 11:24:49,158:INFO:              pandas: 2.1.4
2025-08-14 11:24:49,158:INFO:              jinja2: 3.1.6
2025-08-14 11:24:49,158:INFO:               scipy: 1.11.4
2025-08-14 11:24:49,158:INFO:              joblib: 1.3.2
2025-08-14 11:24:49,158:INFO:             sklearn: 1.4.2
2025-08-14 11:24:49,158:INFO:                pyod: 2.0.5
2025-08-14 11:24:49,158:INFO:            imblearn: 0.13.0
2025-08-14 11:24:49,158:INFO:   category_encoders: 2.7.0
2025-08-14 11:24:49,158:INFO:            lightgbm: 4.6.0
2025-08-14 11:24:49,158:INFO:               numba: 0.61.0
2025-08-14 11:24:49,158:INFO:            requests: 2.32.4
2025-08-14 11:24:49,158:INFO:          matplotlib: 3.7.5
2025-08-14 11:24:49,158:INFO:          scikitplot: 0.3.7
2025-08-14 11:24:49,158:INFO:         yellowbrick: 1.5
2025-08-14 11:24:49,158:INFO:              plotly: 5.24.1
2025-08-14 11:24:49,158:INFO:    plotly-resampler: Not installed
2025-08-14 11:24:49,158:INFO:             kaleido: 1.0.0
2025-08-14 11:24:49,158:INFO:           schemdraw: 0.15
2025-08-14 11:24:49,158:INFO:         statsmodels: 0.14.5
2025-08-14 11:24:49,158:INFO:              sktime: 0.26.0
2025-08-14 11:24:49,158:INFO:               tbats: 1.1.3
2025-08-14 11:24:49,158:INFO:            pmdarima: 2.0.4
2025-08-14 11:24:49,158:INFO:              psutil: 7.0.0
2025-08-14 11:24:49,158:INFO:          markupsafe: 3.0.2
2025-08-14 11:24:49,158:INFO:             pickle5: Not installed
2025-08-14 11:24:49,159:INFO:         cloudpickle: 3.1.1
2025-08-14 11:24:49,159:INFO:         deprecation: 2.1.0
2025-08-14 11:24:49,159:INFO:              xxhash: 3.5.0
2025-08-14 11:24:49,159:INFO:           wurlitzer: 3.1.1
2025-08-14 11:24:49,159:INFO:PyCaret optional dependencies:
2025-08-14 11:24:50,123:INFO:                shap: 0.44.1
2025-08-14 11:24:50,123:INFO:           interpret: 0.7.2
2025-08-14 11:24:50,123:INFO:                umap: 0.5.7
2025-08-14 11:24:50,123:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:24:50,123:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:24:50,123:INFO:             autoviz: Not installed
2025-08-14 11:24:50,123:INFO:           fairlearn: 0.7.0
2025-08-14 11:24:50,123:INFO:          deepchecks: Not installed
2025-08-14 11:24:50,123:INFO:             xgboost: 3.0.4
2025-08-14 11:24:50,123:INFO:            catboost: 1.2.8
2025-08-14 11:24:50,123:INFO:              kmodes: 0.12.2
2025-08-14 11:24:50,123:INFO:             mlxtend: 0.23.4
2025-08-14 11:24:50,123:INFO:       statsforecast: 1.5.0
2025-08-14 11:24:50,123:INFO:        tune_sklearn: Not installed
2025-08-14 11:24:50,123:INFO:                 ray: Not installed
2025-08-14 11:24:50,123:INFO:            hyperopt: 0.2.7
2025-08-14 11:24:50,124:INFO:              optuna: 4.4.0
2025-08-14 11:24:50,124:INFO:               skopt: 0.10.2
2025-08-14 11:24:50,124:INFO:              mlflow: 3.2.0
2025-08-14 11:24:50,124:INFO:              gradio: 5.42.0
2025-08-14 11:24:50,124:INFO:             fastapi: 0.116.1
2025-08-14 11:24:50,124:INFO:             uvicorn: 0.35.0
2025-08-14 11:24:50,124:INFO:              m2cgen: 0.10.0
2025-08-14 11:24:50,124:INFO:           evidently: 0.4.40
2025-08-14 11:24:50,124:INFO:               fugue: 0.8.7
2025-08-14 11:24:50,124:INFO:           streamlit: 1.48.1
2025-08-14 11:24:50,124:INFO:             prophet: Not installed
2025-08-14 11:24:50,124:INFO:None
2025-08-14 11:24:50,124:INFO:Set up data.
2025-08-14 11:24:50,127:INFO:Set up folding strategy.
2025-08-14 11:24:50,127:INFO:Set up train/test split.
2025-08-14 11:24:50,130:INFO:Set up index.
2025-08-14 11:24:50,130:INFO:Assigning column types.
2025-08-14 11:24:50,132:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 11:24:50,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,158:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,158:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,193:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,193:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,194:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 11:24:50,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,217:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,218:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,232:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:24:50,241:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,242:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,242:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 11:24:50,265:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,266:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,289:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,290:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,291:INFO:Preparing preprocessing pipeline...
2025-08-14 11:24:50,291:INFO:Set up label encoding.
2025-08-14 11:24:50,291:INFO:Set up simple imputation.
2025-08-14 11:24:50,292:INFO:Set up encoding of categorical features.
2025-08-14 11:24:50,292:INFO:Set up feature normalization.
2025-08-14 11:24:50,313:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:24:50,315:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:24:50,315:INFO:Creating final display dataframe.
2025-08-14 11:24:50,366:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     cab9
2025-08-14 11:24:50,390:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,391:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,415:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:24:50,416:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:24:50,417:INFO:setup() successfully completed in 1.51s...............
2025-08-14 11:24:50,417:INFO:Initializing compare_models()
2025-08-14 11:24:50,417:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 11:24:50,417:INFO:Checking exceptions
2025-08-14 11:24:50,418:INFO:Preparing display monitor
2025-08-14 11:24:50,419:INFO:Initializing Logistic Regression
2025-08-14 11:24:50,419:INFO:Total runtime is 1.1920928955078125e-06 minutes
2025-08-14 11:24:50,419:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:50,419:INFO:Initializing create_model()
2025-08-14 11:24:50,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:50,419:INFO:Checking exceptions
2025-08-14 11:24:50,419:INFO:Importing libraries
2025-08-14 11:24:50,419:INFO:Copying training dataset
2025-08-14 11:24:50,421:INFO:Defining folds
2025-08-14 11:24:50,421:INFO:Declaring metric variables
2025-08-14 11:24:50,421:INFO:Importing untrained model
2025-08-14 11:24:50,421:INFO:Logistic Regression Imported successfully
2025-08-14 11:24:50,421:INFO:Starting cross validation
2025-08-14 11:24:50,422:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:51,672:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,681:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,682:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,685:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,685:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,686:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,689:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,691:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,695:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,696:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,704:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,708:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,709:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,712:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,718:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,741:INFO:Calculating mean and std
2025-08-14 11:24:51,743:INFO:Creating metrics dataframe
2025-08-14 11:24:51,748:INFO:Uploading results into container
2025-08-14 11:24:51,749:INFO:Uploading model into container now
2025-08-14 11:24:51,750:INFO:_master_model_container: 1
2025-08-14 11:24:51,750:INFO:_display_container: 2
2025-08-14 11:24:51,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:24:51,751:INFO:create_model() successfully completed......................................
2025-08-14 11:24:51,861:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:51,861:INFO:Creating metrics dataframe
2025-08-14 11:24:51,862:INFO:Initializing K Neighbors Classifier
2025-08-14 11:24:51,862:INFO:Total runtime is 0.024052123228708904 minutes
2025-08-14 11:24:51,862:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:51,862:INFO:Initializing create_model()
2025-08-14 11:24:51,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:51,862:INFO:Checking exceptions
2025-08-14 11:24:51,862:INFO:Importing libraries
2025-08-14 11:24:51,862:INFO:Copying training dataset
2025-08-14 11:24:51,864:INFO:Defining folds
2025-08-14 11:24:51,864:INFO:Declaring metric variables
2025-08-14 11:24:51,865:INFO:Importing untrained model
2025-08-14 11:24:51,865:INFO:K Neighbors Classifier Imported successfully
2025-08-14 11:24:51,865:INFO:Starting cross validation
2025-08-14 11:24:51,865:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:51,972:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,978:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,981:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,987:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,990:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:51,993:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,881:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,884:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,889:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,893:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,898:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,901:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,907:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,910:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,912:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:52,919:INFO:Calculating mean and std
2025-08-14 11:24:52,919:INFO:Creating metrics dataframe
2025-08-14 11:24:52,921:INFO:Uploading results into container
2025-08-14 11:24:52,925:INFO:Uploading model into container now
2025-08-14 11:24:52,927:INFO:_master_model_container: 2
2025-08-14 11:24:52,928:INFO:_display_container: 2
2025-08-14 11:24:52,928:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 11:24:52,928:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,038:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,038:INFO:Creating metrics dataframe
2025-08-14 11:24:53,039:INFO:Initializing Naive Bayes
2025-08-14 11:24:53,039:INFO:Total runtime is 0.043671218554178874 minutes
2025-08-14 11:24:53,039:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,039:INFO:Initializing create_model()
2025-08-14 11:24:53,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,040:INFO:Checking exceptions
2025-08-14 11:24:53,040:INFO:Importing libraries
2025-08-14 11:24:53,040:INFO:Copying training dataset
2025-08-14 11:24:53,042:INFO:Defining folds
2025-08-14 11:24:53,042:INFO:Declaring metric variables
2025-08-14 11:24:53,042:INFO:Importing untrained model
2025-08-14 11:24:53,042:INFO:Naive Bayes Imported successfully
2025-08-14 11:24:53,042:INFO:Starting cross validation
2025-08-14 11:24:53,043:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,080:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,082:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,085:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,086:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,087:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,087:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,088:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,089:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,091:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,094:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,095:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,096:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,104:INFO:Calculating mean and std
2025-08-14 11:24:53,104:INFO:Creating metrics dataframe
2025-08-14 11:24:53,104:INFO:Uploading results into container
2025-08-14 11:24:53,105:INFO:Uploading model into container now
2025-08-14 11:24:53,105:INFO:_master_model_container: 3
2025-08-14 11:24:53,105:INFO:_display_container: 2
2025-08-14 11:24:53,105:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 11:24:53,105:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,172:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,172:INFO:Creating metrics dataframe
2025-08-14 11:24:53,173:INFO:Initializing Decision Tree Classifier
2025-08-14 11:24:53,173:INFO:Total runtime is 0.0459091583887736 minutes
2025-08-14 11:24:53,174:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,174:INFO:Initializing create_model()
2025-08-14 11:24:53,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,174:INFO:Checking exceptions
2025-08-14 11:24:53,174:INFO:Importing libraries
2025-08-14 11:24:53,174:INFO:Copying training dataset
2025-08-14 11:24:53,176:INFO:Defining folds
2025-08-14 11:24:53,176:INFO:Declaring metric variables
2025-08-14 11:24:53,176:INFO:Importing untrained model
2025-08-14 11:24:53,176:INFO:Decision Tree Classifier Imported successfully
2025-08-14 11:24:53,176:INFO:Starting cross validation
2025-08-14 11:24:53,177:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,203:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,204:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,205:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,209:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,210:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,210:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,216:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,217:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,228:INFO:Calculating mean and std
2025-08-14 11:24:53,228:INFO:Creating metrics dataframe
2025-08-14 11:24:53,229:INFO:Uploading results into container
2025-08-14 11:24:53,229:INFO:Uploading model into container now
2025-08-14 11:24:53,229:INFO:_master_model_container: 4
2025-08-14 11:24:53,229:INFO:_display_container: 2
2025-08-14 11:24:53,229:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 11:24:53,229:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,297:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,297:INFO:Creating metrics dataframe
2025-08-14 11:24:53,298:INFO:Initializing SVM - Linear Kernel
2025-08-14 11:24:53,298:INFO:Total runtime is 0.04798200527826945 minutes
2025-08-14 11:24:53,298:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,298:INFO:Initializing create_model()
2025-08-14 11:24:53,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,298:INFO:Checking exceptions
2025-08-14 11:24:53,298:INFO:Importing libraries
2025-08-14 11:24:53,298:INFO:Copying training dataset
2025-08-14 11:24:53,300:INFO:Defining folds
2025-08-14 11:24:53,300:INFO:Declaring metric variables
2025-08-14 11:24:53,300:INFO:Importing untrained model
2025-08-14 11:24:53,300:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 11:24:53,300:INFO:Starting cross validation
2025-08-14 11:24:53,301:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,327:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,341:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,350:INFO:Calculating mean and std
2025-08-14 11:24:53,350:INFO:Creating metrics dataframe
2025-08-14 11:24:53,351:INFO:Uploading results into container
2025-08-14 11:24:53,351:INFO:Uploading model into container now
2025-08-14 11:24:53,351:INFO:_master_model_container: 5
2025-08-14 11:24:53,351:INFO:_display_container: 2
2025-08-14 11:24:53,351:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 11:24:53,351:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,419:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,419:INFO:Creating metrics dataframe
2025-08-14 11:24:53,420:INFO:Initializing Ridge Classifier
2025-08-14 11:24:53,420:INFO:Total runtime is 0.05002033313115438 minutes
2025-08-14 11:24:53,420:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,420:INFO:Initializing create_model()
2025-08-14 11:24:53,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,420:INFO:Checking exceptions
2025-08-14 11:24:53,420:INFO:Importing libraries
2025-08-14 11:24:53,420:INFO:Copying training dataset
2025-08-14 11:24:53,422:INFO:Defining folds
2025-08-14 11:24:53,422:INFO:Declaring metric variables
2025-08-14 11:24:53,422:INFO:Importing untrained model
2025-08-14 11:24:53,423:INFO:Ridge Classifier Imported successfully
2025-08-14 11:24:53,423:INFO:Starting cross validation
2025-08-14 11:24:53,423:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,464:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,466:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,467:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,467:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,467:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,470:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,473:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,476:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,477:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,479:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,484:INFO:Calculating mean and std
2025-08-14 11:24:53,484:INFO:Creating metrics dataframe
2025-08-14 11:24:53,485:INFO:Uploading results into container
2025-08-14 11:24:53,485:INFO:Uploading model into container now
2025-08-14 11:24:53,485:INFO:_master_model_container: 6
2025-08-14 11:24:53,486:INFO:_display_container: 2
2025-08-14 11:24:53,486:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 11:24:53,486:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,553:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,553:INFO:Creating metrics dataframe
2025-08-14 11:24:53,554:INFO:Initializing Random Forest Classifier
2025-08-14 11:24:53,554:INFO:Total runtime is 0.052257883548736575 minutes
2025-08-14 11:24:53,554:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,555:INFO:Initializing create_model()
2025-08-14 11:24:53,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,555:INFO:Checking exceptions
2025-08-14 11:24:53,555:INFO:Importing libraries
2025-08-14 11:24:53,555:INFO:Copying training dataset
2025-08-14 11:24:53,557:INFO:Defining folds
2025-08-14 11:24:53,557:INFO:Declaring metric variables
2025-08-14 11:24:53,557:INFO:Importing untrained model
2025-08-14 11:24:53,557:INFO:Random Forest Classifier Imported successfully
2025-08-14 11:24:53,557:INFO:Starting cross validation
2025-08-14 11:24:53,557:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,721:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,724:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,727:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,734:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,736:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,739:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,749:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,751:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,762:INFO:Calculating mean and std
2025-08-14 11:24:53,763:INFO:Creating metrics dataframe
2025-08-14 11:24:53,763:INFO:Uploading results into container
2025-08-14 11:24:53,764:INFO:Uploading model into container now
2025-08-14 11:24:53,764:INFO:_master_model_container: 7
2025-08-14 11:24:53,764:INFO:_display_container: 2
2025-08-14 11:24:53,764:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 11:24:53,764:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,832:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,832:INFO:Creating metrics dataframe
2025-08-14 11:24:53,833:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 11:24:53,833:INFO:Total runtime is 0.056902269522349044 minutes
2025-08-14 11:24:53,833:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,833:INFO:Initializing create_model()
2025-08-14 11:24:53,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,833:INFO:Checking exceptions
2025-08-14 11:24:53,833:INFO:Importing libraries
2025-08-14 11:24:53,833:INFO:Copying training dataset
2025-08-14 11:24:53,835:INFO:Defining folds
2025-08-14 11:24:53,835:INFO:Declaring metric variables
2025-08-14 11:24:53,835:INFO:Importing untrained model
2025-08-14 11:24:53,835:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 11:24:53,835:INFO:Starting cross validation
2025-08-14 11:24:53,836:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:24:53,855:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:24:53,857:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:24:53,858:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:24:53,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:24:53,864:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:24:53,866:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:24:53,866:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:24:53,867:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,867:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,868:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:24:53,870:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,871:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,871:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,871:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:24:53,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:24:53,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,873:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,875:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,875:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 11:24:53,876:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,879:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,880:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,883:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,883:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:24:53,884:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:53,897:INFO:Calculating mean and std
2025-08-14 11:24:53,897:INFO:Creating metrics dataframe
2025-08-14 11:24:53,898:INFO:Uploading results into container
2025-08-14 11:24:53,898:INFO:Uploading model into container now
2025-08-14 11:24:53,898:INFO:_master_model_container: 8
2025-08-14 11:24:53,898:INFO:_display_container: 2
2025-08-14 11:24:53,898:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 11:24:53,898:INFO:create_model() successfully completed......................................
2025-08-14 11:24:53,965:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:53,965:INFO:Creating metrics dataframe
2025-08-14 11:24:53,966:INFO:Initializing Ada Boost Classifier
2025-08-14 11:24:53,966:INFO:Total runtime is 0.05912581284840902 minutes
2025-08-14 11:24:53,967:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:53,967:INFO:Initializing create_model()
2025-08-14 11:24:53,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:53,967:INFO:Checking exceptions
2025-08-14 11:24:53,967:INFO:Importing libraries
2025-08-14 11:24:53,967:INFO:Copying training dataset
2025-08-14 11:24:53,969:INFO:Defining folds
2025-08-14 11:24:53,969:INFO:Declaring metric variables
2025-08-14 11:24:53,969:INFO:Importing untrained model
2025-08-14 11:24:53,969:INFO:Ada Boost Classifier Imported successfully
2025-08-14 11:24:53,969:INFO:Starting cross validation
2025-08-14 11:24:53,969:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:53,990:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:24:53,990:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:24:53,992:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:24:53,994:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:24:53,999:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:24:54,001:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,002:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,004:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,006:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,007:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,008:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,010:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,010:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,011:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,015:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,021:INFO:Calculating mean and std
2025-08-14 11:24:54,022:INFO:Creating metrics dataframe
2025-08-14 11:24:54,022:INFO:Uploading results into container
2025-08-14 11:24:54,023:INFO:Uploading model into container now
2025-08-14 11:24:54,023:INFO:_master_model_container: 9
2025-08-14 11:24:54,023:INFO:_display_container: 2
2025-08-14 11:24:54,023:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 11:24:54,023:INFO:create_model() successfully completed......................................
2025-08-14 11:24:54,090:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:54,090:INFO:Creating metrics dataframe
2025-08-14 11:24:54,091:INFO:Initializing Gradient Boosting Classifier
2025-08-14 11:24:54,091:INFO:Total runtime is 0.06120819250742595 minutes
2025-08-14 11:24:54,091:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:54,092:INFO:Initializing create_model()
2025-08-14 11:24:54,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:54,092:INFO:Checking exceptions
2025-08-14 11:24:54,092:INFO:Importing libraries
2025-08-14 11:24:54,092:INFO:Copying training dataset
2025-08-14 11:24:54,093:INFO:Defining folds
2025-08-14 11:24:54,093:INFO:Declaring metric variables
2025-08-14 11:24:54,094:INFO:Importing untrained model
2025-08-14 11:24:54,094:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 11:24:54,094:INFO:Starting cross validation
2025-08-14 11:24:54,094:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:54,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,208:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,211:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,212:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,214:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,215:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,216:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,217:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,218:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,219:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,224:INFO:Calculating mean and std
2025-08-14 11:24:54,225:INFO:Creating metrics dataframe
2025-08-14 11:24:54,225:INFO:Uploading results into container
2025-08-14 11:24:54,226:INFO:Uploading model into container now
2025-08-14 11:24:54,226:INFO:_master_model_container: 10
2025-08-14 11:24:54,226:INFO:_display_container: 2
2025-08-14 11:24:54,226:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 11:24:54,226:INFO:create_model() successfully completed......................................
2025-08-14 11:24:54,294:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:54,294:INFO:Creating metrics dataframe
2025-08-14 11:24:54,295:INFO:Initializing Linear Discriminant Analysis
2025-08-14 11:24:54,295:INFO:Total runtime is 0.06459541320800782 minutes
2025-08-14 11:24:54,295:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:54,295:INFO:Initializing create_model()
2025-08-14 11:24:54,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:54,295:INFO:Checking exceptions
2025-08-14 11:24:54,295:INFO:Importing libraries
2025-08-14 11:24:54,295:INFO:Copying training dataset
2025-08-14 11:24:54,297:INFO:Defining folds
2025-08-14 11:24:54,297:INFO:Declaring metric variables
2025-08-14 11:24:54,297:INFO:Importing untrained model
2025-08-14 11:24:54,297:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 11:24:54,297:INFO:Starting cross validation
2025-08-14 11:24:54,298:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:54,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,327:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,329:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,332:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,334:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,335:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,338:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,338:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,342:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,349:INFO:Calculating mean and std
2025-08-14 11:24:54,349:INFO:Creating metrics dataframe
2025-08-14 11:24:54,350:INFO:Uploading results into container
2025-08-14 11:24:54,350:INFO:Uploading model into container now
2025-08-14 11:24:54,350:INFO:_master_model_container: 11
2025-08-14 11:24:54,350:INFO:_display_container: 2
2025-08-14 11:24:54,350:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 11:24:54,350:INFO:create_model() successfully completed......................................
2025-08-14 11:24:54,427:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:54,427:INFO:Creating metrics dataframe
2025-08-14 11:24:54,428:INFO:Initializing Extra Trees Classifier
2025-08-14 11:24:54,429:INFO:Total runtime is 0.06682755947113038 minutes
2025-08-14 11:24:54,429:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:54,429:INFO:Initializing create_model()
2025-08-14 11:24:54,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:54,429:INFO:Checking exceptions
2025-08-14 11:24:54,429:INFO:Importing libraries
2025-08-14 11:24:54,429:INFO:Copying training dataset
2025-08-14 11:24:54,431:INFO:Defining folds
2025-08-14 11:24:54,431:INFO:Declaring metric variables
2025-08-14 11:24:54,431:INFO:Importing untrained model
2025-08-14 11:24:54,431:INFO:Extra Trees Classifier Imported successfully
2025-08-14 11:24:54,431:INFO:Starting cross validation
2025-08-14 11:24:54,432:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:54,567:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,568:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,570:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,571:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,572:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,573:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,578:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,581:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,583:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,586:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,587:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,589:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,590:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,591:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,592:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,601:INFO:Calculating mean and std
2025-08-14 11:24:54,601:INFO:Creating metrics dataframe
2025-08-14 11:24:54,602:INFO:Uploading results into container
2025-08-14 11:24:54,602:INFO:Uploading model into container now
2025-08-14 11:24:54,603:INFO:_master_model_container: 12
2025-08-14 11:24:54,603:INFO:_display_container: 2
2025-08-14 11:24:54,603:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 11:24:54,603:INFO:create_model() successfully completed......................................
2025-08-14 11:24:54,672:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:54,672:INFO:Creating metrics dataframe
2025-08-14 11:24:54,673:INFO:Initializing Extreme Gradient Boosting
2025-08-14 11:24:54,673:INFO:Total runtime is 0.07090385754903158 minutes
2025-08-14 11:24:54,673:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:54,673:INFO:Initializing create_model()
2025-08-14 11:24:54,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:54,673:INFO:Checking exceptions
2025-08-14 11:24:54,673:INFO:Importing libraries
2025-08-14 11:24:54,673:INFO:Copying training dataset
2025-08-14 11:24:54,675:INFO:Defining folds
2025-08-14 11:24:54,675:INFO:Declaring metric variables
2025-08-14 11:24:54,675:INFO:Importing untrained model
2025-08-14 11:24:54,676:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 11:24:54,676:INFO:Starting cross validation
2025-08-14 11:24:54,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:54,727:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,730:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,731:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,731:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,733:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,734:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,734:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,737:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:54,752:INFO:Calculating mean and std
2025-08-14 11:24:54,752:INFO:Creating metrics dataframe
2025-08-14 11:24:54,753:INFO:Uploading results into container
2025-08-14 11:24:54,753:INFO:Uploading model into container now
2025-08-14 11:24:54,754:INFO:_master_model_container: 13
2025-08-14 11:24:54,754:INFO:_display_container: 2
2025-08-14 11:24:54,754:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 11:24:54,754:INFO:create_model() successfully completed......................................
2025-08-14 11:24:54,826:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:54,826:INFO:Creating metrics dataframe
2025-08-14 11:24:54,827:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 11:24:54,827:INFO:Total runtime is 0.07347381909688315 minutes
2025-08-14 11:24:54,827:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:54,827:INFO:Initializing create_model()
2025-08-14 11:24:54,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:54,828:INFO:Checking exceptions
2025-08-14 11:24:54,828:INFO:Importing libraries
2025-08-14 11:24:54,828:INFO:Copying training dataset
2025-08-14 11:24:54,829:INFO:Defining folds
2025-08-14 11:24:54,829:INFO:Declaring metric variables
2025-08-14 11:24:54,830:INFO:Importing untrained model
2025-08-14 11:24:54,830:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 11:24:54,830:INFO:Starting cross validation
2025-08-14 11:24:54,830:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:24:57,549:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,556:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,559:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,562:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,575:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,575:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,578:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,578:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,581:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,581:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,607:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,610:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,612:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:24:57,618:INFO:Calculating mean and std
2025-08-14 11:24:57,619:INFO:Creating metrics dataframe
2025-08-14 11:24:57,620:INFO:Uploading results into container
2025-08-14 11:24:57,621:INFO:Uploading model into container now
2025-08-14 11:24:57,621:INFO:_master_model_container: 14
2025-08-14 11:24:57,621:INFO:_display_container: 2
2025-08-14 11:24:57,622:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 11:24:57,622:INFO:create_model() successfully completed......................................
2025-08-14 11:24:57,703:INFO:SubProcess create_model() end ==================================
2025-08-14 11:24:57,703:INFO:Creating metrics dataframe
2025-08-14 11:24:57,705:INFO:Initializing CatBoost Classifier
2025-08-14 11:24:57,705:INFO:Total runtime is 0.12143010695775351 minutes
2025-08-14 11:24:57,705:INFO:SubProcess create_model() called ==================================
2025-08-14 11:24:57,705:INFO:Initializing create_model()
2025-08-14 11:24:57,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:24:57,705:INFO:Checking exceptions
2025-08-14 11:24:57,705:INFO:Importing libraries
2025-08-14 11:24:57,705:INFO:Copying training dataset
2025-08-14 11:24:57,708:INFO:Defining folds
2025-08-14 11:24:57,708:INFO:Declaring metric variables
2025-08-14 11:24:57,708:INFO:Importing untrained model
2025-08-14 11:24:57,708:INFO:CatBoost Classifier Imported successfully
2025-08-14 11:24:57,708:INFO:Starting cross validation
2025-08-14 11:24:57,709:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:25:02,926:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,932:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,936:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,951:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,962:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,966:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,976:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,980:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:02,987:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,014:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,018:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,021:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,021:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,028:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,031:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,041:INFO:Calculating mean and std
2025-08-14 11:25:03,045:INFO:Creating metrics dataframe
2025-08-14 11:25:03,049:INFO:Uploading results into container
2025-08-14 11:25:03,049:INFO:Uploading model into container now
2025-08-14 11:25:03,050:INFO:_master_model_container: 15
2025-08-14 11:25:03,050:INFO:_display_container: 2
2025-08-14 11:25:03,050:INFO:<catboost.core.CatBoostClassifier object at 0xffff35f4b010>
2025-08-14 11:25:03,050:INFO:create_model() successfully completed......................................
2025-08-14 11:25:03,221:INFO:SubProcess create_model() end ==================================
2025-08-14 11:25:03,221:INFO:Creating metrics dataframe
2025-08-14 11:25:03,222:INFO:Initializing Dummy Classifier
2025-08-14 11:25:03,222:INFO:Total runtime is 0.21338952382405602 minutes
2025-08-14 11:25:03,222:INFO:SubProcess create_model() called ==================================
2025-08-14 11:25:03,222:INFO:Initializing create_model()
2025-08-14 11:25:03,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff349322d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:25:03,223:INFO:Checking exceptions
2025-08-14 11:25:03,223:INFO:Importing libraries
2025-08-14 11:25:03,223:INFO:Copying training dataset
2025-08-14 11:25:03,225:INFO:Defining folds
2025-08-14 11:25:03,225:INFO:Declaring metric variables
2025-08-14 11:25:03,225:INFO:Importing untrained model
2025-08-14 11:25:03,225:INFO:Dummy Classifier Imported successfully
2025-08-14 11:25:03,225:INFO:Starting cross validation
2025-08-14 11:25:03,226:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:25:03,286:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,289:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,291:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,291:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,293:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,293:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:25:03,293:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,295:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,295:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,296:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:25:03,296:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,297:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,297:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:25:03,297:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,298:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:25:03,299:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,299:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,300:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,301:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:25:03,303:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:25:03,309:INFO:Calculating mean and std
2025-08-14 11:25:03,309:INFO:Creating metrics dataframe
2025-08-14 11:25:03,310:INFO:Uploading results into container
2025-08-14 11:25:03,311:INFO:Uploading model into container now
2025-08-14 11:25:03,311:INFO:_master_model_container: 16
2025-08-14 11:25:03,311:INFO:_display_container: 2
2025-08-14 11:25:03,311:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 11:25:03,311:INFO:create_model() successfully completed......................................
2025-08-14 11:25:03,381:INFO:SubProcess create_model() end ==================================
2025-08-14 11:25:03,381:INFO:Creating metrics dataframe
2025-08-14 11:25:03,383:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 11:25:03,384:INFO:Initializing create_model()
2025-08-14 11:25:03,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:25:03,384:INFO:Checking exceptions
2025-08-14 11:25:03,384:INFO:Importing libraries
2025-08-14 11:25:03,384:INFO:Copying training dataset
2025-08-14 11:25:03,386:INFO:Defining folds
2025-08-14 11:25:03,386:INFO:Declaring metric variables
2025-08-14 11:25:03,386:INFO:Importing untrained model
2025-08-14 11:25:03,386:INFO:Declaring custom model
2025-08-14 11:25:03,386:INFO:Logistic Regression Imported successfully
2025-08-14 11:25:03,387:INFO:Cross validation set to False
2025-08-14 11:25:03,387:INFO:Fitting Model
2025-08-14 11:25:03,409:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:25:03,409:INFO:create_model() successfully completed......................................
2025-08-14 11:25:03,507:INFO:_master_model_container: 16
2025-08-14 11:25:03,507:INFO:_display_container: 2
2025-08-14 11:25:03,507:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:25:03,507:INFO:compare_models() successfully completed......................................
2025-08-14 11:25:03,507:INFO:Initializing finalize_model()
2025-08-14 11:25:03,507:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 11:25:03,508:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:25:03,509:INFO:Initializing create_model()
2025-08-14 11:25:03,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff71f7c710>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:25:03,509:INFO:Checking exceptions
2025-08-14 11:25:03,509:INFO:Importing libraries
2025-08-14 11:25:03,509:INFO:Copying training dataset
2025-08-14 11:25:03,509:INFO:Defining folds
2025-08-14 11:25:03,509:INFO:Declaring metric variables
2025-08-14 11:25:03,509:INFO:Importing untrained model
2025-08-14 11:25:03,509:INFO:Declaring custom model
2025-08-14 11:25:03,510:INFO:Logistic Regression Imported successfully
2025-08-14 11:25:03,510:INFO:Cross validation set to False
2025-08-14 11:25:03,510:INFO:Fitting Model
2025-08-14 11:25:03,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:25:03,531:INFO:create_model() successfully completed......................................
2025-08-14 11:25:03,624:INFO:_master_model_container: 16
2025-08-14 11:25:03,624:INFO:_display_container: 2
2025-08-14 11:25:03,626:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:25:03,626:INFO:finalize_model() successfully completed......................................
2025-08-14 11:25:03,694:INFO:Initializing save_model()
2025-08-14 11:25:03,694:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 11:25:03,694:INFO:Adding model into prep_pipe
2025-08-14 11:25:03,694:WARNING:Only Model saved as it was a pipeline.
2025-08-14 11:25:03,696:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 11:25:03,698:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:25:03,698:INFO:save_model() successfully completed......................................
2025-08-14 11:25:03,768:INFO:PyCaret ClusteringExperiment
2025-08-14 11:25:03,768:INFO:Logging name: cluster-default-name
2025-08-14 11:25:03,768:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 11:25:03,768:INFO:version 3.3.2
2025-08-14 11:25:03,768:INFO:Initializing setup()
2025-08-14 11:25:03,768:INFO:self.USI: 72d1
2025-08-14 11:25:03,768:INFO:self._variable_keys: {'exp_id', 'n_jobs_param', 'USI', 'data', 'logging_param', 'gpu_n_jobs_param', 'seed', 'html_param', 'memory', 'pipeline', 'idx', '_available_plots', 'log_plots_param', 'exp_name_log', '_ml_usecase', 'X', 'gpu_param'}
2025-08-14 11:25:03,768:INFO:Checking environment
2025-08-14 11:25:03,768:INFO:python_version: 3.11.13
2025-08-14 11:25:03,768:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:25:03,768:INFO:machine: aarch64
2025-08-14 11:25:03,768:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:25:03,768:INFO:Memory: svmem(total=4109803520, available=1243398144, percent=69.7, used=2703847424, free=538775552, active=3047542784, inactive=321429504, buffers=74207232, cached=792973312, shared=1093632, slab=101404672)
2025-08-14 11:25:03,769:INFO:Physical Core: 8
2025-08-14 11:25:03,769:INFO:Logical Core: 8
2025-08-14 11:25:03,769:INFO:Checking libraries
2025-08-14 11:25:03,769:INFO:System:
2025-08-14 11:25:03,769:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:25:03,769:INFO:executable: /usr/local/bin/python
2025-08-14 11:25:03,769:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:25:03,769:INFO:PyCaret required dependencies:
2025-08-14 11:25:03,769:INFO:                 pip: 24.0
2025-08-14 11:25:03,769:INFO:          setuptools: 80.9.0
2025-08-14 11:25:03,769:INFO:             pycaret: 3.3.2
2025-08-14 11:25:03,769:INFO:             IPython: 9.4.0
2025-08-14 11:25:03,769:INFO:          ipywidgets: 8.1.7
2025-08-14 11:25:03,769:INFO:                tqdm: 4.67.1
2025-08-14 11:25:03,769:INFO:               numpy: 1.26.4
2025-08-14 11:25:03,769:INFO:              pandas: 2.1.4
2025-08-14 11:25:03,769:INFO:              jinja2: 3.1.6
2025-08-14 11:25:03,769:INFO:               scipy: 1.11.4
2025-08-14 11:25:03,769:INFO:              joblib: 1.3.2
2025-08-14 11:25:03,769:INFO:             sklearn: 1.4.2
2025-08-14 11:25:03,769:INFO:                pyod: 2.0.5
2025-08-14 11:25:03,769:INFO:            imblearn: 0.13.0
2025-08-14 11:25:03,769:INFO:   category_encoders: 2.7.0
2025-08-14 11:25:03,769:INFO:            lightgbm: 4.6.0
2025-08-14 11:25:03,769:INFO:               numba: 0.61.0
2025-08-14 11:25:03,769:INFO:            requests: 2.32.4
2025-08-14 11:25:03,769:INFO:          matplotlib: 3.7.5
2025-08-14 11:25:03,770:INFO:          scikitplot: 0.3.7
2025-08-14 11:25:03,770:INFO:         yellowbrick: 1.5
2025-08-14 11:25:03,770:INFO:              plotly: 5.24.1
2025-08-14 11:25:03,770:INFO:    plotly-resampler: Not installed
2025-08-14 11:25:03,770:INFO:             kaleido: 1.0.0
2025-08-14 11:25:03,770:INFO:           schemdraw: 0.15
2025-08-14 11:25:03,770:INFO:         statsmodels: 0.14.5
2025-08-14 11:25:03,770:INFO:              sktime: 0.26.0
2025-08-14 11:25:03,770:INFO:               tbats: 1.1.3
2025-08-14 11:25:03,770:INFO:            pmdarima: 2.0.4
2025-08-14 11:25:03,770:INFO:              psutil: 7.0.0
2025-08-14 11:25:03,770:INFO:          markupsafe: 3.0.2
2025-08-14 11:25:03,770:INFO:             pickle5: Not installed
2025-08-14 11:25:03,770:INFO:         cloudpickle: 3.1.1
2025-08-14 11:25:03,770:INFO:         deprecation: 2.1.0
2025-08-14 11:25:03,770:INFO:              xxhash: 3.5.0
2025-08-14 11:25:03,770:INFO:           wurlitzer: 3.1.1
2025-08-14 11:25:03,770:INFO:PyCaret optional dependencies:
2025-08-14 11:25:03,770:INFO:                shap: 0.44.1
2025-08-14 11:25:03,770:INFO:           interpret: 0.7.2
2025-08-14 11:25:03,770:INFO:                umap: 0.5.7
2025-08-14 11:25:03,770:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:25:03,770:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:25:03,770:INFO:             autoviz: Not installed
2025-08-14 11:25:03,770:INFO:           fairlearn: 0.7.0
2025-08-14 11:25:03,770:INFO:          deepchecks: Not installed
2025-08-14 11:25:03,770:INFO:             xgboost: 3.0.4
2025-08-14 11:25:03,770:INFO:            catboost: 1.2.8
2025-08-14 11:25:03,770:INFO:              kmodes: 0.12.2
2025-08-14 11:25:03,770:INFO:             mlxtend: 0.23.4
2025-08-14 11:25:03,770:INFO:       statsforecast: 1.5.0
2025-08-14 11:25:03,770:INFO:        tune_sklearn: Not installed
2025-08-14 11:25:03,770:INFO:                 ray: Not installed
2025-08-14 11:25:03,770:INFO:            hyperopt: 0.2.7
2025-08-14 11:25:03,770:INFO:              optuna: 4.4.0
2025-08-14 11:25:03,771:INFO:               skopt: 0.10.2
2025-08-14 11:25:03,771:INFO:              mlflow: 3.2.0
2025-08-14 11:25:03,771:INFO:              gradio: 5.42.0
2025-08-14 11:25:03,771:INFO:             fastapi: 0.116.1
2025-08-14 11:25:03,771:INFO:             uvicorn: 0.35.0
2025-08-14 11:25:03,771:INFO:              m2cgen: 0.10.0
2025-08-14 11:25:03,771:INFO:           evidently: 0.4.40
2025-08-14 11:25:03,771:INFO:               fugue: 0.8.7
2025-08-14 11:25:03,771:INFO:           streamlit: 1.48.1
2025-08-14 11:25:03,771:INFO:             prophet: Not installed
2025-08-14 11:25:03,771:INFO:None
2025-08-14 11:25:03,771:INFO:Set up data.
2025-08-14 11:25:03,772:INFO:Set up index.
2025-08-14 11:25:03,772:INFO:Assigning column types.
2025-08-14 11:25:03,773:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 11:25:03,773:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:25:03,773:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,775:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:25:03,775:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,775:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 11:25:03,775:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,775:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,775:INFO:Preparing preprocessing pipeline...
2025-08-14 11:25:03,775:INFO:Set up simple imputation.
2025-08-14 11:25:03,776:INFO:Set up feature normalization.
2025-08-14 11:25:03,781:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:25:03,782:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:25:03,782:INFO:Creating final display dataframe.
2025-08-14 11:25:03,788:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  72d1
2025-08-14 11:25:03,789:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,789:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:25:03,789:INFO:setup() successfully completed in 0.02s...............
2025-08-14 11:25:03,789:INFO:Initializing create_model()
2025-08-14 11:25:03,789:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff34ee3610>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 11:25:03,789:INFO:Checking exceptions
2025-08-14 11:25:03,795:INFO:Importing untrained model
2025-08-14 11:25:03,796:INFO:K-Means Clustering Imported successfully
2025-08-14 11:25:03,796:INFO:Fitting Model
2025-08-14 11:25:04,031:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:25:04,031:INFO:create_models() successfully completed......................................
2025-08-14 11:25:04,032:INFO:Uploading results into container
2025-08-14 11:25:04,035:INFO:Uploading model into container now
2025-08-14 11:25:04,040:INFO:_master_model_container: 1
2025-08-14 11:25:04,040:INFO:_display_container: 2
2025-08-14 11:25:04,040:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:25:04,041:INFO:create_model() successfully completed......................................
2025-08-14 11:25:04,134:INFO:Initializing assign_model()
2025-08-14 11:25:04,134:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff34ee3610>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 11:25:04,134:INFO:Checking exceptions
2025-08-14 11:25:04,134:INFO:Determining Trained Model
2025-08-14 11:25:04,134:INFO:Trained Model : K-Means Clustering
2025-08-14 11:25:04,134:INFO:Copying data
2025-08-14 11:25:04,135:INFO:(3000, 12)
2025-08-14 11:25:04,135:INFO:assign_model() successfully completed......................................
2025-08-14 11:25:04,137:INFO:Initializing save_model()
2025-08-14 11:25:04,137:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 11:25:04,137:INFO:Adding model into prep_pipe
2025-08-14 11:25:04,139:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 11:25:04,141:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 11:25:04,141:INFO:save_model() successfully completed......................................
2025-08-14 11:25:16,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:25:16,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:25:16,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:25:16,590:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:25:17,361:INFO:Initializing load_model()
2025-08-14 11:25:17,361:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 11:25:17,547:INFO:Initializing load_model()
2025-08-14 11:25:17,547:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 11:25:26,778:INFO:Initializing predict_model()
2025-08-14 11:25:26,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff352d6e50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff37c96660>)
2025-08-14 11:25:26,779:INFO:Checking exceptions
2025-08-14 11:25:26,779:INFO:Preloading libraries
2025-08-14 11:25:26,780:INFO:Set up data.
2025-08-14 11:25:26,784:INFO:Set up index.
2025-08-14 11:25:26,792:INFO:Initializing predict_model()
2025-08-14 11:25:26,792:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff37c1d810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff63283100>)
2025-08-14 11:25:26,792:INFO:Checking exceptions
2025-08-14 11:25:26,792:INFO:Preloading libraries
2025-08-14 11:25:26,792:INFO:Set up data.
2025-08-14 11:25:26,796:INFO:Set up index.
2025-08-14 11:25:27,406:INFO:Initializing predict_model()
2025-08-14 11:25:27,407:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff352cb6d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 11:25:27,408:INFO:Set up data.
2025-08-14 11:31:21,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:21,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:21,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:21,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:22,251:INFO:PyCaret ClassificationExperiment
2025-08-14 11:31:22,251:INFO:Logging name: clf-default-name
2025-08-14 11:31:22,251:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-14 11:31:22,251:INFO:version 3.3.2
2025-08-14 11:31:22,251:INFO:Initializing setup()
2025-08-14 11:31:22,251:INFO:self.USI: b6a7
2025-08-14 11:31:22,251:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'html_param', 'data', 'idx', 'logging_param', 'y_train', 'gpu_n_jobs_param', 'X_test', 'fold_generator', 'fix_imbalance', 'y', 'log_plots_param', 'is_multiclass', 'target_param', '_ml_usecase', 'X', '_available_plots', 'USI', 'X_train', 'exp_name_log', 'seed', 'exp_id', 'pipeline', 'y_test', 'n_jobs_param', 'memory', 'fold_shuffle_param'}
2025-08-14 11:31:22,251:INFO:Checking environment
2025-08-14 11:31:22,251:INFO:python_version: 3.11.13
2025-08-14 11:31:22,251:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:31:22,251:INFO:machine: aarch64
2025-08-14 11:31:22,251:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:31:22,251:INFO:Memory: svmem(total=4109803520, available=3421573120, percent=16.7, used=527265792, free=2718429184, active=907792384, inactive=321581056, buffers=74821632, cached=789286912, shared=1032192, slab=92192768)
2025-08-14 11:31:22,252:INFO:Physical Core: 8
2025-08-14 11:31:22,252:INFO:Logical Core: 8
2025-08-14 11:31:22,252:INFO:Checking libraries
2025-08-14 11:31:22,252:INFO:System:
2025-08-14 11:31:22,252:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:31:22,252:INFO:executable: /usr/local/bin/python
2025-08-14 11:31:22,252:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:31:22,252:INFO:PyCaret required dependencies:
2025-08-14 11:31:22,491:INFO:                 pip: 24.0
2025-08-14 11:31:22,491:INFO:          setuptools: 80.9.0
2025-08-14 11:31:22,491:INFO:             pycaret: 3.3.2
2025-08-14 11:31:22,491:INFO:             IPython: 9.4.0
2025-08-14 11:31:22,491:INFO:          ipywidgets: 8.1.7
2025-08-14 11:31:22,491:INFO:                tqdm: 4.67.1
2025-08-14 11:31:22,491:INFO:               numpy: 1.26.4
2025-08-14 11:31:22,491:INFO:              pandas: 2.1.4
2025-08-14 11:31:22,491:INFO:              jinja2: 3.1.6
2025-08-14 11:31:22,491:INFO:               scipy: 1.11.4
2025-08-14 11:31:22,491:INFO:              joblib: 1.3.2
2025-08-14 11:31:22,491:INFO:             sklearn: 1.4.2
2025-08-14 11:31:22,491:INFO:                pyod: 2.0.5
2025-08-14 11:31:22,491:INFO:            imblearn: 0.13.0
2025-08-14 11:31:22,491:INFO:   category_encoders: 2.7.0
2025-08-14 11:31:22,491:INFO:            lightgbm: 4.6.0
2025-08-14 11:31:22,491:INFO:               numba: 0.61.0
2025-08-14 11:31:22,491:INFO:            requests: 2.32.4
2025-08-14 11:31:22,491:INFO:          matplotlib: 3.7.5
2025-08-14 11:31:22,491:INFO:          scikitplot: 0.3.7
2025-08-14 11:31:22,491:INFO:         yellowbrick: 1.5
2025-08-14 11:31:22,491:INFO:              plotly: 5.24.1
2025-08-14 11:31:22,491:INFO:    plotly-resampler: Not installed
2025-08-14 11:31:22,491:INFO:             kaleido: 1.0.0
2025-08-14 11:31:22,492:INFO:           schemdraw: 0.15
2025-08-14 11:31:22,492:INFO:         statsmodels: 0.14.5
2025-08-14 11:31:22,492:INFO:              sktime: 0.26.0
2025-08-14 11:31:22,492:INFO:               tbats: 1.1.3
2025-08-14 11:31:22,492:INFO:            pmdarima: 2.0.4
2025-08-14 11:31:22,492:INFO:              psutil: 7.0.0
2025-08-14 11:31:22,492:INFO:          markupsafe: 3.0.2
2025-08-14 11:31:22,492:INFO:             pickle5: Not installed
2025-08-14 11:31:22,492:INFO:         cloudpickle: 3.1.1
2025-08-14 11:31:22,492:INFO:         deprecation: 2.1.0
2025-08-14 11:31:22,492:INFO:              xxhash: 3.5.0
2025-08-14 11:31:22,492:INFO:           wurlitzer: 3.1.1
2025-08-14 11:31:22,492:INFO:PyCaret optional dependencies:
2025-08-14 11:31:23,444:INFO:                shap: 0.44.1
2025-08-14 11:31:23,444:INFO:           interpret: 0.7.2
2025-08-14 11:31:23,444:INFO:                umap: 0.5.7
2025-08-14 11:31:23,444:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:31:23,444:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:31:23,444:INFO:             autoviz: Not installed
2025-08-14 11:31:23,444:INFO:           fairlearn: 0.7.0
2025-08-14 11:31:23,444:INFO:          deepchecks: Not installed
2025-08-14 11:31:23,444:INFO:             xgboost: 3.0.4
2025-08-14 11:31:23,444:INFO:            catboost: 1.2.8
2025-08-14 11:31:23,444:INFO:              kmodes: 0.12.2
2025-08-14 11:31:23,444:INFO:             mlxtend: 0.23.4
2025-08-14 11:31:23,444:INFO:       statsforecast: 1.5.0
2025-08-14 11:31:23,445:INFO:        tune_sklearn: Not installed
2025-08-14 11:31:23,445:INFO:                 ray: Not installed
2025-08-14 11:31:23,445:INFO:            hyperopt: 0.2.7
2025-08-14 11:31:23,445:INFO:              optuna: 4.4.0
2025-08-14 11:31:23,445:INFO:               skopt: 0.10.2
2025-08-14 11:31:23,445:INFO:              mlflow: 3.2.0
2025-08-14 11:31:23,445:INFO:              gradio: 5.42.0
2025-08-14 11:31:23,445:INFO:             fastapi: 0.116.1
2025-08-14 11:31:23,445:INFO:             uvicorn: 0.35.0
2025-08-14 11:31:23,445:INFO:              m2cgen: 0.10.0
2025-08-14 11:31:23,445:INFO:           evidently: 0.4.40
2025-08-14 11:31:23,445:INFO:               fugue: 0.8.7
2025-08-14 11:31:23,445:INFO:           streamlit: 1.48.1
2025-08-14 11:31:23,445:INFO:             prophet: Not installed
2025-08-14 11:31:23,445:INFO:None
2025-08-14 11:31:23,445:INFO:Set up data.
2025-08-14 11:31:23,448:INFO:Set up folding strategy.
2025-08-14 11:31:23,448:INFO:Set up train/test split.
2025-08-14 11:31:23,451:INFO:Set up index.
2025-08-14 11:31:23,451:INFO:Assigning column types.
2025-08-14 11:31:23,453:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-14 11:31:23,467:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,478:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,479:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,507:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,516:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,517:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,517:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-14 11:31:23,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,542:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,543:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,558:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-14 11:31:23,567:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,568:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,568:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-14 11:31:23,591:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,592:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,615:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,616:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,617:INFO:Preparing preprocessing pipeline...
2025-08-14 11:31:23,617:INFO:Set up label encoding.
2025-08-14 11:31:23,617:INFO:Set up simple imputation.
2025-08-14 11:31:23,618:INFO:Set up encoding of categorical features.
2025-08-14 11:31:23,618:INFO:Set up feature normalization.
2025-08-14 11:31:23,639:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:31:23,641:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:31:23,641:INFO:Creating final display dataframe.
2025-08-14 11:31:23,692:INFO:Setup _display_container:                     Description                    Value
0                    Session id                       42
1                        Target                    label
2                   Target type                   Binary
3                Target mapping  BENIGN: 0, MALICIOUS: 1
4           Original data shape               (6000, 13)
5        Transformed data shape               (6000, 16)
6   Transformed train set shape               (4200, 16)
7    Transformed test set shape               (1800, 16)
8              Numeric features                       11
9          Categorical features                        1
10                   Preprocess                     True
11              Imputation type                   simple
12           Numeric imputation                     mean
13       Categorical imputation                     mode
14     Maximum one-hot encoding                       25
15              Encoding method                     None
16                    Normalize                     True
17             Normalize method                   zscore
18               Fold Generator          StratifiedKFold
19                  Fold Number                        5
20                     CPU Jobs                       -1
21                      Use GPU                    False
22               Log Experiment                    False
23              Experiment Name         clf-default-name
24                          USI                     b6a7
2025-08-14 11:31:23,716:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,717:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,742:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-14 11:31:23,743:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-14 11:31:23,743:INFO:setup() successfully completed in 1.49s...............
2025-08-14 11:31:23,744:INFO:Initializing compare_models()
2025-08-14 11:31:23,744:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-08-14 11:31:23,744:INFO:Checking exceptions
2025-08-14 11:31:23,745:INFO:Preparing display monitor
2025-08-14 11:31:23,746:INFO:Initializing Logistic Regression
2025-08-14 11:31:23,746:INFO:Total runtime is 1.4821688334147136e-06 minutes
2025-08-14 11:31:23,746:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:23,746:INFO:Initializing create_model()
2025-08-14 11:31:23,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:23,746:INFO:Checking exceptions
2025-08-14 11:31:23,746:INFO:Importing libraries
2025-08-14 11:31:23,746:INFO:Copying training dataset
2025-08-14 11:31:23,748:INFO:Defining folds
2025-08-14 11:31:23,748:INFO:Declaring metric variables
2025-08-14 11:31:23,748:INFO:Importing untrained model
2025-08-14 11:31:23,748:INFO:Logistic Regression Imported successfully
2025-08-14 11:31:23,748:INFO:Starting cross validation
2025-08-14 11:31:23,749:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:24,997:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:24,998:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,001:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,001:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,004:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,004:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,005:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,007:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,009:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,027:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,033:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,038:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,075:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,077:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,089:INFO:Calculating mean and std
2025-08-14 11:31:25,090:INFO:Creating metrics dataframe
2025-08-14 11:31:25,093:INFO:Uploading results into container
2025-08-14 11:31:25,093:INFO:Uploading model into container now
2025-08-14 11:31:25,094:INFO:_master_model_container: 1
2025-08-14 11:31:25,094:INFO:_display_container: 2
2025-08-14 11:31:25,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:31:25,094:INFO:create_model() successfully completed......................................
2025-08-14 11:31:25,189:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:25,190:INFO:Creating metrics dataframe
2025-08-14 11:31:25,190:INFO:Initializing K Neighbors Classifier
2025-08-14 11:31:25,190:INFO:Total runtime is 0.024076418081919352 minutes
2025-08-14 11:31:25,191:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:25,191:INFO:Initializing create_model()
2025-08-14 11:31:25,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:25,191:INFO:Checking exceptions
2025-08-14 11:31:25,191:INFO:Importing libraries
2025-08-14 11:31:25,191:INFO:Copying training dataset
2025-08-14 11:31:25,193:INFO:Defining folds
2025-08-14 11:31:25,193:INFO:Declaring metric variables
2025-08-14 11:31:25,193:INFO:Importing untrained model
2025-08-14 11:31:25,193:INFO:K Neighbors Classifier Imported successfully
2025-08-14 11:31:25,193:INFO:Starting cross validation
2025-08-14 11:31:25,194:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:25,297:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,299:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,302:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,310:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,313:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:25,316:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,196:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,204:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,210:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,213:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,219:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,222:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,225:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,235:INFO:Calculating mean and std
2025-08-14 11:31:26,236:INFO:Creating metrics dataframe
2025-08-14 11:31:26,237:INFO:Uploading results into container
2025-08-14 11:31:26,238:INFO:Uploading model into container now
2025-08-14 11:31:26,238:INFO:_master_model_container: 2
2025-08-14 11:31:26,238:INFO:_display_container: 2
2025-08-14 11:31:26,238:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-14 11:31:26,239:INFO:create_model() successfully completed......................................
2025-08-14 11:31:26,347:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:26,347:INFO:Creating metrics dataframe
2025-08-14 11:31:26,348:INFO:Initializing Naive Bayes
2025-08-14 11:31:26,348:INFO:Total runtime is 0.043373231093088785 minutes
2025-08-14 11:31:26,348:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:26,348:INFO:Initializing create_model()
2025-08-14 11:31:26,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:26,349:INFO:Checking exceptions
2025-08-14 11:31:26,349:INFO:Importing libraries
2025-08-14 11:31:26,349:INFO:Copying training dataset
2025-08-14 11:31:26,351:INFO:Defining folds
2025-08-14 11:31:26,351:INFO:Declaring metric variables
2025-08-14 11:31:26,351:INFO:Importing untrained model
2025-08-14 11:31:26,351:INFO:Naive Bayes Imported successfully
2025-08-14 11:31:26,351:INFO:Starting cross validation
2025-08-14 11:31:26,352:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:26,389:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,390:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,391:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,392:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,394:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,394:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,394:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,395:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,397:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,399:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,401:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,402:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,413:INFO:Calculating mean and std
2025-08-14 11:31:26,413:INFO:Creating metrics dataframe
2025-08-14 11:31:26,414:INFO:Uploading results into container
2025-08-14 11:31:26,414:INFO:Uploading model into container now
2025-08-14 11:31:26,415:INFO:_master_model_container: 3
2025-08-14 11:31:26,415:INFO:_display_container: 2
2025-08-14 11:31:26,415:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-14 11:31:26,415:INFO:create_model() successfully completed......................................
2025-08-14 11:31:26,482:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:26,482:INFO:Creating metrics dataframe
2025-08-14 11:31:26,483:INFO:Initializing Decision Tree Classifier
2025-08-14 11:31:26,483:INFO:Total runtime is 0.045620028177897134 minutes
2025-08-14 11:31:26,483:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:26,483:INFO:Initializing create_model()
2025-08-14 11:31:26,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:26,483:INFO:Checking exceptions
2025-08-14 11:31:26,483:INFO:Importing libraries
2025-08-14 11:31:26,483:INFO:Copying training dataset
2025-08-14 11:31:26,486:INFO:Defining folds
2025-08-14 11:31:26,486:INFO:Declaring metric variables
2025-08-14 11:31:26,486:INFO:Importing untrained model
2025-08-14 11:31:26,487:INFO:Decision Tree Classifier Imported successfully
2025-08-14 11:31:26,487:INFO:Starting cross validation
2025-08-14 11:31:26,487:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:26,521:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,522:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,522:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,525:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,526:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,526:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,527:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,528:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,529:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,529:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,530:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,531:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,532:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,534:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,535:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,549:INFO:Calculating mean and std
2025-08-14 11:31:26,550:INFO:Creating metrics dataframe
2025-08-14 11:31:26,550:INFO:Uploading results into container
2025-08-14 11:31:26,550:INFO:Uploading model into container now
2025-08-14 11:31:26,551:INFO:_master_model_container: 4
2025-08-14 11:31:26,551:INFO:_display_container: 2
2025-08-14 11:31:26,551:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-08-14 11:31:26,551:INFO:create_model() successfully completed......................................
2025-08-14 11:31:26,618:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:26,618:INFO:Creating metrics dataframe
2025-08-14 11:31:26,619:INFO:Initializing SVM - Linear Kernel
2025-08-14 11:31:26,619:INFO:Total runtime is 0.047880438963572185 minutes
2025-08-14 11:31:26,619:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:26,619:INFO:Initializing create_model()
2025-08-14 11:31:26,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:26,619:INFO:Checking exceptions
2025-08-14 11:31:26,619:INFO:Importing libraries
2025-08-14 11:31:26,619:INFO:Copying training dataset
2025-08-14 11:31:26,621:INFO:Defining folds
2025-08-14 11:31:26,621:INFO:Declaring metric variables
2025-08-14 11:31:26,621:INFO:Importing untrained model
2025-08-14 11:31:26,621:INFO:SVM - Linear Kernel Imported successfully
2025-08-14 11:31:26,621:INFO:Starting cross validation
2025-08-14 11:31:26,622:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:26,652:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,654:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,655:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,656:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,659:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,659:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,660:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,660:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,662:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,663:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,663:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,664:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,667:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,667:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,669:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,676:INFO:Calculating mean and std
2025-08-14 11:31:26,676:INFO:Creating metrics dataframe
2025-08-14 11:31:26,677:INFO:Uploading results into container
2025-08-14 11:31:26,677:INFO:Uploading model into container now
2025-08-14 11:31:26,677:INFO:_master_model_container: 5
2025-08-14 11:31:26,677:INFO:_display_container: 2
2025-08-14 11:31:26,677:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-14 11:31:26,677:INFO:create_model() successfully completed......................................
2025-08-14 11:31:26,743:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:26,744:INFO:Creating metrics dataframe
2025-08-14 11:31:26,745:INFO:Initializing Ridge Classifier
2025-08-14 11:31:26,745:INFO:Total runtime is 0.0499790628751119 minutes
2025-08-14 11:31:26,745:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:26,745:INFO:Initializing create_model()
2025-08-14 11:31:26,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:26,745:INFO:Checking exceptions
2025-08-14 11:31:26,745:INFO:Importing libraries
2025-08-14 11:31:26,745:INFO:Copying training dataset
2025-08-14 11:31:26,747:INFO:Defining folds
2025-08-14 11:31:26,747:INFO:Declaring metric variables
2025-08-14 11:31:26,747:INFO:Importing untrained model
2025-08-14 11:31:26,747:INFO:Ridge Classifier Imported successfully
2025-08-14 11:31:26,747:INFO:Starting cross validation
2025-08-14 11:31:26,748:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:26,779:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,780:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,783:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,783:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,785:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,786:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,787:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,789:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,791:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,792:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,796:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,798:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:26,815:INFO:Calculating mean and std
2025-08-14 11:31:26,815:INFO:Creating metrics dataframe
2025-08-14 11:31:26,816:INFO:Uploading results into container
2025-08-14 11:31:26,816:INFO:Uploading model into container now
2025-08-14 11:31:26,816:INFO:_master_model_container: 6
2025-08-14 11:31:26,816:INFO:_display_container: 2
2025-08-14 11:31:26,816:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-08-14 11:31:26,816:INFO:create_model() successfully completed......................................
2025-08-14 11:31:26,882:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:26,882:INFO:Creating metrics dataframe
2025-08-14 11:31:26,883:INFO:Initializing Random Forest Classifier
2025-08-14 11:31:26,883:INFO:Total runtime is 0.05228857596715291 minutes
2025-08-14 11:31:26,883:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:26,883:INFO:Initializing create_model()
2025-08-14 11:31:26,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:26,883:INFO:Checking exceptions
2025-08-14 11:31:26,883:INFO:Importing libraries
2025-08-14 11:31:26,883:INFO:Copying training dataset
2025-08-14 11:31:26,885:INFO:Defining folds
2025-08-14 11:31:26,885:INFO:Declaring metric variables
2025-08-14 11:31:26,885:INFO:Importing untrained model
2025-08-14 11:31:26,886:INFO:Random Forest Classifier Imported successfully
2025-08-14 11:31:26,886:INFO:Starting cross validation
2025-08-14 11:31:26,886:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,045:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,048:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,051:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,053:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,069:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,070:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,072:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,073:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,073:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,074:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,076:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,076:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,078:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,089:INFO:Calculating mean and std
2025-08-14 11:31:27,089:INFO:Creating metrics dataframe
2025-08-14 11:31:27,090:INFO:Uploading results into container
2025-08-14 11:31:27,090:INFO:Uploading model into container now
2025-08-14 11:31:27,090:INFO:_master_model_container: 7
2025-08-14 11:31:27,091:INFO:_display_container: 2
2025-08-14 11:31:27,091:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-08-14 11:31:27,091:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,157:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,157:INFO:Creating metrics dataframe
2025-08-14 11:31:27,158:INFO:Initializing Quadratic Discriminant Analysis
2025-08-14 11:31:27,158:INFO:Total runtime is 0.056870468457539874 minutes
2025-08-14 11:31:27,158:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,158:INFO:Initializing create_model()
2025-08-14 11:31:27,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,158:INFO:Checking exceptions
2025-08-14 11:31:27,158:INFO:Importing libraries
2025-08-14 11:31:27,158:INFO:Copying training dataset
2025-08-14 11:31:27,160:INFO:Defining folds
2025-08-14 11:31:27,160:INFO:Declaring metric variables
2025-08-14 11:31:27,160:INFO:Importing untrained model
2025-08-14 11:31:27,160:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-14 11:31:27,160:INFO:Starting cross validation
2025-08-14 11:31:27,161:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:31:27,180:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:31:27,182:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:31:27,183:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:31:27,188:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:31:27,188:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:31:27,189:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:31:27,189:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-14 11:31:27,190:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,190:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:31:27,190:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2025-08-14 11:31:27,190:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2025-08-14 11:31:27,193:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,194:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/usr/local/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2025-08-14 11:31:27,194:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,195:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,196:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,196:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,198:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,198:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,200:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,200:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:27,201:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,202:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,202:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,202:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,204:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,207:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,223:INFO:Calculating mean and std
2025-08-14 11:31:27,223:INFO:Creating metrics dataframe
2025-08-14 11:31:27,224:INFO:Uploading results into container
2025-08-14 11:31:27,224:INFO:Uploading model into container now
2025-08-14 11:31:27,224:INFO:_master_model_container: 8
2025-08-14 11:31:27,224:INFO:_display_container: 2
2025-08-14 11:31:27,224:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-14 11:31:27,224:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,290:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,291:INFO:Creating metrics dataframe
2025-08-14 11:31:27,291:INFO:Initializing Ada Boost Classifier
2025-08-14 11:31:27,291:INFO:Total runtime is 0.05909444491068522 minutes
2025-08-14 11:31:27,292:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,292:INFO:Initializing create_model()
2025-08-14 11:31:27,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,292:INFO:Checking exceptions
2025-08-14 11:31:27,292:INFO:Importing libraries
2025-08-14 11:31:27,292:INFO:Copying training dataset
2025-08-14 11:31:27,294:INFO:Defining folds
2025-08-14 11:31:27,294:INFO:Declaring metric variables
2025-08-14 11:31:27,294:INFO:Importing untrained model
2025-08-14 11:31:27,294:INFO:Ada Boost Classifier Imported successfully
2025-08-14 11:31:27,294:INFO:Starting cross validation
2025-08-14 11:31:27,294:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,311:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:31:27,312:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:31:27,313:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:31:27,314:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:31:27,319:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-14 11:31:27,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,324:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,328:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,326:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,328:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,330:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,331:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,333:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,336:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,337:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,339:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,355:INFO:Calculating mean and std
2025-08-14 11:31:27,355:INFO:Creating metrics dataframe
2025-08-14 11:31:27,356:INFO:Uploading results into container
2025-08-14 11:31:27,356:INFO:Uploading model into container now
2025-08-14 11:31:27,356:INFO:_master_model_container: 9
2025-08-14 11:31:27,356:INFO:_display_container: 2
2025-08-14 11:31:27,356:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-08-14 11:31:27,356:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,422:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,422:INFO:Creating metrics dataframe
2025-08-14 11:31:27,423:INFO:Initializing Gradient Boosting Classifier
2025-08-14 11:31:27,423:INFO:Total runtime is 0.06128944555918375 minutes
2025-08-14 11:31:27,423:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,423:INFO:Initializing create_model()
2025-08-14 11:31:27,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,423:INFO:Checking exceptions
2025-08-14 11:31:27,424:INFO:Importing libraries
2025-08-14 11:31:27,424:INFO:Copying training dataset
2025-08-14 11:31:27,425:INFO:Defining folds
2025-08-14 11:31:27,425:INFO:Declaring metric variables
2025-08-14 11:31:27,425:INFO:Importing untrained model
2025-08-14 11:31:27,426:INFO:Gradient Boosting Classifier Imported successfully
2025-08-14 11:31:27,426:INFO:Starting cross validation
2025-08-14 11:31:27,426:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,532:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,535:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,536:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,538:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,538:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,540:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,540:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,541:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,541:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,544:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,545:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,545:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,546:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,554:INFO:Calculating mean and std
2025-08-14 11:31:27,554:INFO:Creating metrics dataframe
2025-08-14 11:31:27,555:INFO:Uploading results into container
2025-08-14 11:31:27,555:INFO:Uploading model into container now
2025-08-14 11:31:27,555:INFO:_master_model_container: 10
2025-08-14 11:31:27,555:INFO:_display_container: 2
2025-08-14 11:31:27,556:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-14 11:31:27,556:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,622:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,622:INFO:Creating metrics dataframe
2025-08-14 11:31:27,623:INFO:Initializing Linear Discriminant Analysis
2025-08-14 11:31:27,623:INFO:Total runtime is 0.06461888949076335 minutes
2025-08-14 11:31:27,623:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,623:INFO:Initializing create_model()
2025-08-14 11:31:27,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,623:INFO:Checking exceptions
2025-08-14 11:31:27,623:INFO:Importing libraries
2025-08-14 11:31:27,623:INFO:Copying training dataset
2025-08-14 11:31:27,625:INFO:Defining folds
2025-08-14 11:31:27,625:INFO:Declaring metric variables
2025-08-14 11:31:27,625:INFO:Importing untrained model
2025-08-14 11:31:27,625:INFO:Linear Discriminant Analysis Imported successfully
2025-08-14 11:31:27,625:INFO:Starting cross validation
2025-08-14 11:31:27,626:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,656:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,657:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,658:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,659:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,661:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,661:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,662:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,663:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,664:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,664:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,664:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,667:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,667:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,670:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,671:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,678:INFO:Calculating mean and std
2025-08-14 11:31:27,679:INFO:Creating metrics dataframe
2025-08-14 11:31:27,680:INFO:Uploading results into container
2025-08-14 11:31:27,680:INFO:Uploading model into container now
2025-08-14 11:31:27,680:INFO:_master_model_container: 11
2025-08-14 11:31:27,680:INFO:_display_container: 2
2025-08-14 11:31:27,680:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-14 11:31:27,680:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,746:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,746:INFO:Creating metrics dataframe
2025-08-14 11:31:27,747:INFO:Initializing Extra Trees Classifier
2025-08-14 11:31:27,747:INFO:Total runtime is 0.0666927417119344 minutes
2025-08-14 11:31:27,747:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,748:INFO:Initializing create_model()
2025-08-14 11:31:27,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,748:INFO:Checking exceptions
2025-08-14 11:31:27,748:INFO:Importing libraries
2025-08-14 11:31:27,748:INFO:Copying training dataset
2025-08-14 11:31:27,749:INFO:Defining folds
2025-08-14 11:31:27,749:INFO:Declaring metric variables
2025-08-14 11:31:27,750:INFO:Importing untrained model
2025-08-14 11:31:27,750:INFO:Extra Trees Classifier Imported successfully
2025-08-14 11:31:27,750:INFO:Starting cross validation
2025-08-14 11:31:27,750:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:27,877:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,877:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,879:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,880:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,880:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,882:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,883:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,883:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,885:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,904:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,906:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,908:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,909:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,911:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,915:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:27,920:INFO:Calculating mean and std
2025-08-14 11:31:27,920:INFO:Creating metrics dataframe
2025-08-14 11:31:27,921:INFO:Uploading results into container
2025-08-14 11:31:27,921:INFO:Uploading model into container now
2025-08-14 11:31:27,921:INFO:_master_model_container: 12
2025-08-14 11:31:27,921:INFO:_display_container: 2
2025-08-14 11:31:27,922:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-08-14 11:31:27,922:INFO:create_model() successfully completed......................................
2025-08-14 11:31:27,990:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:27,990:INFO:Creating metrics dataframe
2025-08-14 11:31:27,991:INFO:Initializing Extreme Gradient Boosting
2025-08-14 11:31:27,991:INFO:Total runtime is 0.07075226306915282 minutes
2025-08-14 11:31:27,991:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:27,991:INFO:Initializing create_model()
2025-08-14 11:31:27,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:27,991:INFO:Checking exceptions
2025-08-14 11:31:27,991:INFO:Importing libraries
2025-08-14 11:31:27,991:INFO:Copying training dataset
2025-08-14 11:31:27,993:INFO:Defining folds
2025-08-14 11:31:27,993:INFO:Declaring metric variables
2025-08-14 11:31:27,993:INFO:Importing untrained model
2025-08-14 11:31:27,994:INFO:Extreme Gradient Boosting Imported successfully
2025-08-14 11:31:27,994:INFO:Starting cross validation
2025-08-14 11:31:27,994:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:28,046:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,049:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,050:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,050:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,051:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,052:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,052:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,053:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,053:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,056:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,058:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,059:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:28,074:INFO:Calculating mean and std
2025-08-14 11:31:28,074:INFO:Creating metrics dataframe
2025-08-14 11:31:28,075:INFO:Uploading results into container
2025-08-14 11:31:28,075:INFO:Uploading model into container now
2025-08-14 11:31:28,075:INFO:_master_model_container: 13
2025-08-14 11:31:28,076:INFO:_display_container: 2
2025-08-14 11:31:28,076:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-14 11:31:28,076:INFO:create_model() successfully completed......................................
2025-08-14 11:31:28,142:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:28,142:INFO:Creating metrics dataframe
2025-08-14 11:31:28,143:INFO:Initializing Light Gradient Boosting Machine
2025-08-14 11:31:28,143:INFO:Total runtime is 0.0732833703358968 minutes
2025-08-14 11:31:28,143:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:28,143:INFO:Initializing create_model()
2025-08-14 11:31:28,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:28,143:INFO:Checking exceptions
2025-08-14 11:31:28,143:INFO:Importing libraries
2025-08-14 11:31:28,143:INFO:Copying training dataset
2025-08-14 11:31:28,145:INFO:Defining folds
2025-08-14 11:31:28,145:INFO:Declaring metric variables
2025-08-14 11:31:28,145:INFO:Importing untrained model
2025-08-14 11:31:28,145:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-14 11:31:28,145:INFO:Starting cross validation
2025-08-14 11:31:28,146:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:30,547:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,552:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,557:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,713:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,716:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,721:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,799:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,803:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,806:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,836:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,839:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,842:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,858:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,860:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,863:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:30,878:INFO:Calculating mean and std
2025-08-14 11:31:30,878:INFO:Creating metrics dataframe
2025-08-14 11:31:30,880:INFO:Uploading results into container
2025-08-14 11:31:30,880:INFO:Uploading model into container now
2025-08-14 11:31:30,880:INFO:_master_model_container: 14
2025-08-14 11:31:30,880:INFO:_display_container: 2
2025-08-14 11:31:30,881:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-14 11:31:30,881:INFO:create_model() successfully completed......................................
2025-08-14 11:31:30,967:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:30,967:INFO:Creating metrics dataframe
2025-08-14 11:31:30,968:INFO:Initializing CatBoost Classifier
2025-08-14 11:31:30,968:INFO:Total runtime is 0.12036991119384764 minutes
2025-08-14 11:31:30,968:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:30,968:INFO:Initializing create_model()
2025-08-14 11:31:30,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:30,968:INFO:Checking exceptions
2025-08-14 11:31:30,968:INFO:Importing libraries
2025-08-14 11:31:30,968:INFO:Copying training dataset
2025-08-14 11:31:30,970:INFO:Defining folds
2025-08-14 11:31:30,970:INFO:Declaring metric variables
2025-08-14 11:31:30,970:INFO:Importing untrained model
2025-08-14 11:31:30,971:INFO:CatBoost Classifier Imported successfully
2025-08-14 11:31:30,971:INFO:Starting cross validation
2025-08-14 11:31:30,971:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:36,305:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,316:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,320:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,343:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,353:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,360:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,383:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,391:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,398:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,413:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,421:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,425:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,450:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,452:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,455:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,478:INFO:Calculating mean and std
2025-08-14 11:31:36,479:INFO:Creating metrics dataframe
2025-08-14 11:31:36,485:INFO:Uploading results into container
2025-08-14 11:31:36,485:INFO:Uploading model into container now
2025-08-14 11:31:36,486:INFO:_master_model_container: 15
2025-08-14 11:31:36,486:INFO:_display_container: 2
2025-08-14 11:31:36,486:INFO:<catboost.core.CatBoostClassifier object at 0xffff402ac9d0>
2025-08-14 11:31:36,486:INFO:create_model() successfully completed......................................
2025-08-14 11:31:36,662:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:36,662:INFO:Creating metrics dataframe
2025-08-14 11:31:36,663:INFO:Initializing Dummy Classifier
2025-08-14 11:31:36,663:INFO:Total runtime is 0.2152851104736328 minutes
2025-08-14 11:31:36,663:INFO:SubProcess create_model() called ==================================
2025-08-14 11:31:36,663:INFO:Initializing create_model()
2025-08-14 11:31:36,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0xffff2ae49fd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:36,663:INFO:Checking exceptions
2025-08-14 11:31:36,663:INFO:Importing libraries
2025-08-14 11:31:36,663:INFO:Copying training dataset
2025-08-14 11:31:36,665:INFO:Defining folds
2025-08-14 11:31:36,665:INFO:Declaring metric variables
2025-08-14 11:31:36,666:INFO:Importing untrained model
2025-08-14 11:31:36,666:INFO:Dummy Classifier Imported successfully
2025-08-14 11:31:36,666:INFO:Starting cross validation
2025-08-14 11:31:36,666:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-14 11:31:36,735:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,740:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,741:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,743:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:36,744:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:36,745:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,746:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:36,747:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:36,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,748:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,749:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,750:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-14 11:31:36,752:WARNING:/usr/local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'MALICIOUS') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-14 11:31:36,759:INFO:Calculating mean and std
2025-08-14 11:31:36,759:INFO:Creating metrics dataframe
2025-08-14 11:31:36,760:INFO:Uploading results into container
2025-08-14 11:31:36,761:INFO:Uploading model into container now
2025-08-14 11:31:36,761:INFO:_master_model_container: 16
2025-08-14 11:31:36,761:INFO:_display_container: 2
2025-08-14 11:31:36,761:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-08-14 11:31:36,761:INFO:create_model() successfully completed......................................
2025-08-14 11:31:36,828:INFO:SubProcess create_model() end ==================================
2025-08-14 11:31:36,828:INFO:Creating metrics dataframe
2025-08-14 11:31:36,829:WARNING:/usr/local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-14 11:31:36,830:INFO:Initializing create_model()
2025-08-14 11:31:36,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:36,830:INFO:Checking exceptions
2025-08-14 11:31:36,831:INFO:Importing libraries
2025-08-14 11:31:36,831:INFO:Copying training dataset
2025-08-14 11:31:36,833:INFO:Defining folds
2025-08-14 11:31:36,833:INFO:Declaring metric variables
2025-08-14 11:31:36,833:INFO:Importing untrained model
2025-08-14 11:31:36,833:INFO:Declaring custom model
2025-08-14 11:31:36,833:INFO:Logistic Regression Imported successfully
2025-08-14 11:31:36,833:INFO:Cross validation set to False
2025-08-14 11:31:36,833:INFO:Fitting Model
2025-08-14 11:31:36,855:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:31:36,856:INFO:create_model() successfully completed......................................
2025-08-14 11:31:36,952:INFO:_master_model_container: 16
2025-08-14 11:31:36,952:INFO:_display_container: 2
2025-08-14 11:31:36,952:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:31:36,952:INFO:compare_models() successfully completed......................................
2025-08-14 11:31:36,953:INFO:Initializing finalize_model()
2025-08-14 11:31:36,953:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-14 11:31:36,953:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-14 11:31:36,954:INFO:Initializing create_model()
2025-08-14 11:31:36,954:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff7d418090>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-14 11:31:36,954:INFO:Checking exceptions
2025-08-14 11:31:36,954:INFO:Importing libraries
2025-08-14 11:31:36,954:INFO:Copying training dataset
2025-08-14 11:31:36,955:INFO:Defining folds
2025-08-14 11:31:36,955:INFO:Declaring metric variables
2025-08-14 11:31:36,955:INFO:Importing untrained model
2025-08-14 11:31:36,955:INFO:Declaring custom model
2025-08-14 11:31:36,955:INFO:Logistic Regression Imported successfully
2025-08-14 11:31:36,955:INFO:Cross validation set to False
2025-08-14 11:31:36,955:INFO:Fitting Model
2025-08-14 11:31:36,977:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:31:36,978:INFO:create_model() successfully completed......................................
2025-08-14 11:31:37,070:INFO:_master_model_container: 16
2025-08-14 11:31:37,070:INFO:_display_container: 2
2025-08-14 11:31:37,072:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:31:37,072:INFO:finalize_model() successfully completed......................................
2025-08-14 11:31:37,139:INFO:Initializing save_model()
2025-08-14 11:31:37,139:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=/app/models/phishing_url_detector, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSReco...
                 TransformerWrapper(exclude=None, include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-14 11:31:37,139:INFO:Adding model into prep_pipe
2025-08-14 11:31:37,139:WARNING:Only Model saved as it was a pipeline.
2025-08-14 11:31:37,141:INFO:/app/models/phishing_url_detector.pkl saved in current working directory
2025-08-14 11:31:37,143:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_po...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-14 11:31:37,144:INFO:save_model() successfully completed......................................
2025-08-14 11:31:37,211:INFO:PyCaret ClusteringExperiment
2025-08-14 11:31:37,211:INFO:Logging name: cluster-default-name
2025-08-14 11:31:37,211:INFO:ML Usecase: MLUsecase.CLUSTERING
2025-08-14 11:31:37,211:INFO:version 3.3.2
2025-08-14 11:31:37,211:INFO:Initializing setup()
2025-08-14 11:31:37,211:INFO:self.USI: b7db
2025-08-14 11:31:37,211:INFO:self._variable_keys: {'gpu_param', 'html_param', 'data', 'idx', 'logging_param', 'gpu_n_jobs_param', 'log_plots_param', '_ml_usecase', 'X', '_available_plots', 'USI', 'exp_name_log', 'seed', 'exp_id', 'pipeline', 'n_jobs_param', 'memory'}
2025-08-14 11:31:37,211:INFO:Checking environment
2025-08-14 11:31:37,211:INFO:python_version: 3.11.13
2025-08-14 11:31:37,211:INFO:python_build: ('main', 'Aug 13 2025 11:05:25')
2025-08-14 11:31:37,211:INFO:machine: aarch64
2025-08-14 11:31:37,211:INFO:platform: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:31:37,211:INFO:Memory: svmem(total=4109803520, available=1237671936, percent=69.9, used=2709508096, free=532172800, active=3043614720, inactive=322265088, buffers=74948608, cached=793174016, shared=1118208, slab=100921344)
2025-08-14 11:31:37,212:INFO:Physical Core: 8
2025-08-14 11:31:37,212:INFO:Logical Core: 8
2025-08-14 11:31:37,212:INFO:Checking libraries
2025-08-14 11:31:37,212:INFO:System:
2025-08-14 11:31:37,212:INFO:    python: 3.11.13 (main, Aug 13 2025, 11:05:25) [GCC 14.2.0]
2025-08-14 11:31:37,212:INFO:executable: /usr/local/bin/python
2025-08-14 11:31:37,212:INFO:   machine: Linux-6.10.14-linuxkit-aarch64-with-glibc2.41
2025-08-14 11:31:37,212:INFO:PyCaret required dependencies:
2025-08-14 11:31:37,212:INFO:                 pip: 24.0
2025-08-14 11:31:37,212:INFO:          setuptools: 80.9.0
2025-08-14 11:31:37,212:INFO:             pycaret: 3.3.2
2025-08-14 11:31:37,212:INFO:             IPython: 9.4.0
2025-08-14 11:31:37,212:INFO:          ipywidgets: 8.1.7
2025-08-14 11:31:37,212:INFO:                tqdm: 4.67.1
2025-08-14 11:31:37,212:INFO:               numpy: 1.26.4
2025-08-14 11:31:37,212:INFO:              pandas: 2.1.4
2025-08-14 11:31:37,212:INFO:              jinja2: 3.1.6
2025-08-14 11:31:37,212:INFO:               scipy: 1.11.4
2025-08-14 11:31:37,212:INFO:              joblib: 1.3.2
2025-08-14 11:31:37,212:INFO:             sklearn: 1.4.2
2025-08-14 11:31:37,212:INFO:                pyod: 2.0.5
2025-08-14 11:31:37,212:INFO:            imblearn: 0.13.0
2025-08-14 11:31:37,212:INFO:   category_encoders: 2.7.0
2025-08-14 11:31:37,213:INFO:            lightgbm: 4.6.0
2025-08-14 11:31:37,213:INFO:               numba: 0.61.0
2025-08-14 11:31:37,213:INFO:            requests: 2.32.4
2025-08-14 11:31:37,213:INFO:          matplotlib: 3.7.5
2025-08-14 11:31:37,213:INFO:          scikitplot: 0.3.7
2025-08-14 11:31:37,213:INFO:         yellowbrick: 1.5
2025-08-14 11:31:37,213:INFO:              plotly: 5.24.1
2025-08-14 11:31:37,213:INFO:    plotly-resampler: Not installed
2025-08-14 11:31:37,213:INFO:             kaleido: 1.0.0
2025-08-14 11:31:37,213:INFO:           schemdraw: 0.15
2025-08-14 11:31:37,213:INFO:         statsmodels: 0.14.5
2025-08-14 11:31:37,213:INFO:              sktime: 0.26.0
2025-08-14 11:31:37,213:INFO:               tbats: 1.1.3
2025-08-14 11:31:37,213:INFO:            pmdarima: 2.0.4
2025-08-14 11:31:37,213:INFO:              psutil: 7.0.0
2025-08-14 11:31:37,213:INFO:          markupsafe: 3.0.2
2025-08-14 11:31:37,213:INFO:             pickle5: Not installed
2025-08-14 11:31:37,213:INFO:         cloudpickle: 3.1.1
2025-08-14 11:31:37,213:INFO:         deprecation: 2.1.0
2025-08-14 11:31:37,213:INFO:              xxhash: 3.5.0
2025-08-14 11:31:37,213:INFO:           wurlitzer: 3.1.1
2025-08-14 11:31:37,213:INFO:PyCaret optional dependencies:
2025-08-14 11:31:37,213:INFO:                shap: 0.44.1
2025-08-14 11:31:37,213:INFO:           interpret: 0.7.2
2025-08-14 11:31:37,213:INFO:                umap: 0.5.7
2025-08-14 11:31:37,213:INFO:     ydata_profiling: 4.16.1
2025-08-14 11:31:37,213:INFO:  explainerdashboard: 0.5.1
2025-08-14 11:31:37,213:INFO:             autoviz: Not installed
2025-08-14 11:31:37,213:INFO:           fairlearn: 0.7.0
2025-08-14 11:31:37,213:INFO:          deepchecks: Not installed
2025-08-14 11:31:37,213:INFO:             xgboost: 3.0.4
2025-08-14 11:31:37,213:INFO:            catboost: 1.2.8
2025-08-14 11:31:37,213:INFO:              kmodes: 0.12.2
2025-08-14 11:31:37,213:INFO:             mlxtend: 0.23.4
2025-08-14 11:31:37,213:INFO:       statsforecast: 1.5.0
2025-08-14 11:31:37,213:INFO:        tune_sklearn: Not installed
2025-08-14 11:31:37,213:INFO:                 ray: Not installed
2025-08-14 11:31:37,213:INFO:            hyperopt: 0.2.7
2025-08-14 11:31:37,213:INFO:              optuna: 4.4.0
2025-08-14 11:31:37,213:INFO:               skopt: 0.10.2
2025-08-14 11:31:37,214:INFO:              mlflow: 3.2.0
2025-08-14 11:31:37,214:INFO:              gradio: 5.42.0
2025-08-14 11:31:37,214:INFO:             fastapi: 0.116.1
2025-08-14 11:31:37,214:INFO:             uvicorn: 0.35.0
2025-08-14 11:31:37,214:INFO:              m2cgen: 0.10.0
2025-08-14 11:31:37,214:INFO:           evidently: 0.4.40
2025-08-14 11:31:37,214:INFO:               fugue: 0.8.7
2025-08-14 11:31:37,214:INFO:           streamlit: 1.48.1
2025-08-14 11:31:37,214:INFO:             prophet: Not installed
2025-08-14 11:31:37,214:INFO:None
2025-08-14 11:31:37,214:INFO:Set up data.
2025-08-14 11:31:37,215:INFO:Set up index.
2025-08-14 11:31:37,215:INFO:Assigning column types.
2025-08-14 11:31:37,216:INFO:Engine successfully changes for model 'kmeans' to 'sklearn'.
2025-08-14 11:31:37,216:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:31:37,216:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,218:INFO:Engine for model 'dbscan' has not been set explicitly, hence returning None.
2025-08-14 11:31:37,218:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,218:INFO:Engine successfully changes for model 'dbscan' to 'sklearn'.
2025-08-14 11:31:37,218:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,218:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,219:INFO:Preparing preprocessing pipeline...
2025-08-14 11:31:37,219:INFO:Set up simple imputation.
2025-08-14 11:31:37,219:INFO:Set up feature normalization.
2025-08-14 11:31:37,224:INFO:Finished creating preprocessing pipeline.
2025-08-14 11:31:37,225:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-08-14 11:31:37,225:INFO:Creating final display dataframe.
2025-08-14 11:31:37,231:INFO:Setup _display_container:                Description                 Value
0               Session id                    42
1      Original data shape            (3000, 11)
2   Transformed data shape            (3000, 11)
3         Numeric features                    11
4               Preprocess                  True
5          Imputation type                simple
6       Numeric imputation                  mean
7   Categorical imputation                  mode
8                Normalize                  True
9         Normalize method                zscore
10                CPU Jobs                    -1
11                 Use GPU                 False
12          Log Experiment                 False
13         Experiment Name  cluster-default-name
14                     USI                  b7db
2025-08-14 11:31:37,231:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,231:INFO:Soft dependency imported: kmodes: 0.12.2
2025-08-14 11:31:37,232:INFO:setup() successfully completed in 0.02s...............
2025-08-14 11:31:37,232:INFO:Initializing create_model()
2025-08-14 11:31:37,232:INFO:create_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff411ada90>, estimator=kmeans, num_clusters=3, fraction=0.05, ground_truth=None, round=4, fit_kwargs=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, raise_num_clusters=False, display=None, kwargs={})
2025-08-14 11:31:37,232:INFO:Checking exceptions
2025-08-14 11:31:37,237:INFO:Importing untrained model
2025-08-14 11:31:37,237:INFO:K-Means Clustering Imported successfully
2025-08-14 11:31:37,237:INFO:Fitting Model
2025-08-14 11:31:37,435:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:31:37,436:INFO:create_models() successfully completed......................................
2025-08-14 11:31:37,438:INFO:Uploading results into container
2025-08-14 11:31:37,440:INFO:Uploading model into container now
2025-08-14 11:31:37,444:INFO:_master_model_container: 1
2025-08-14 11:31:37,445:INFO:_display_container: 2
2025-08-14 11:31:37,445:INFO:KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0)
2025-08-14 11:31:37,445:INFO:create_model() successfully completed......................................
2025-08-14 11:31:37,541:INFO:Initializing assign_model()
2025-08-14 11:31:37,541:INFO:assign_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff411ada90>, model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), transformation=False, score=True, verbose=True)
2025-08-14 11:31:37,541:INFO:Checking exceptions
2025-08-14 11:31:37,541:INFO:Determining Trained Model
2025-08-14 11:31:37,541:INFO:Trained Model : K-Means Clustering
2025-08-14 11:31:37,542:INFO:Copying data
2025-08-14 11:31:37,542:INFO:(3000, 12)
2025-08-14 11:31:37,543:INFO:assign_model() successfully completed......................................
2025-08-14 11:31:37,545:INFO:Initializing save_model()
2025-08-14 11:31:37,545:INFO:save_model(model=KMeans(algorithm='lloyd', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=3, n_init='auto', random_state=42, tol=0.0001, verbose=0), model_name=/app/models/threat_actor_profiler, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              cop...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLUSTERING, kwargs={})
2025-08-14 11:31:37,545:INFO:Adding model into prep_pipe
2025-08-14 11:31:37,548:INFO:/app/models/threat_actor_profiler.pkl saved in current working directory
2025-08-14 11:31:37,549:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('trained_model',
                 KMeans(algorithm='lloyd', copy_x=True, init='k-means++',
                        max_iter=300, n_clusters=3, n_init='auto',
                        random_state=42, tol=0.0001, verbose=0))],
         verbose=False)
2025-08-14 11:31:37,549:INFO:save_model() successfully completed......................................
2025-08-14 11:31:58,803:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:58,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:58,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:58,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-14 11:31:59,582:INFO:Initializing load_model()
2025-08-14 11:31:59,582:INFO:load_model(model_name=models/phishing_url_detector, platform=None, authentication=None, verbose=True)
2025-08-14 11:31:59,768:INFO:Initializing load_model()
2025-08-14 11:31:59,768:INFO:load_model(model_name=/app/models/threat_actor_profiler, platform=None, authentication=None, verbose=True)
2025-08-14 11:32:07,639:INFO:Initializing predict_model()
2025-08-14 11:32:07,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6e638210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff6eec22a0>)
2025-08-14 11:32:07,640:INFO:Checking exceptions
2025-08-14 11:32:07,640:INFO:Preloading libraries
2025-08-14 11:32:07,640:INFO:Set up data.
2025-08-14 11:32:07,644:INFO:Set up index.
2025-08-14 11:32:07,651:INFO:Initializing predict_model()
2025-08-14 11:32:07,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6c663b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff95b1b740>)
2025-08-14 11:32:07,652:INFO:Checking exceptions
2025-08-14 11:32:07,652:INFO:Preloading libraries
2025-08-14 11:32:07,652:INFO:Set up data.
2025-08-14 11:32:07,655:INFO:Set up index.
2025-08-14 11:32:08,261:INFO:Initializing predict_model()
2025-08-14 11:32:08,262:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff67b3b110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 11:32:08,263:INFO:Set up data.
2025-08-14 11:33:49,806:INFO:Initializing predict_model()
2025-08-14 11:33:49,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff671a52d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff6c957240>)
2025-08-14 11:33:49,808:INFO:Checking exceptions
2025-08-14 11:33:49,808:INFO:Preloading libraries
2025-08-14 11:33:49,808:INFO:Set up data.
2025-08-14 11:33:49,814:INFO:Set up index.
2025-08-14 11:33:49,821:INFO:Initializing predict_model()
2025-08-14 11:33:49,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6ed4fbd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff67b6a160>)
2025-08-14 11:33:49,821:INFO:Checking exceptions
2025-08-14 11:33:49,821:INFO:Preloading libraries
2025-08-14 11:33:49,822:INFO:Set up data.
2025-08-14 11:33:49,825:INFO:Set up index.
2025-08-14 11:33:50,445:INFO:Initializing predict_model()
2025-08-14 11:33:50,446:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffff67c5cc10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 11:33:50,446:INFO:Set up data.
2025-08-14 11:45:30,801:INFO:Initializing predict_model()
2025-08-14 11:45:30,804:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff67344050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff6e6af240>)
2025-08-14 11:45:30,804:INFO:Checking exceptions
2025-08-14 11:45:30,804:INFO:Preloading libraries
2025-08-14 11:45:30,805:INFO:Set up data.
2025-08-14 11:45:30,810:INFO:Set up index.
2025-08-14 11:45:30,817:INFO:Initializing predict_model()
2025-08-14 11:45:30,817:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6ed4fbd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff6e8dcc20>)
2025-08-14 11:45:30,817:INFO:Checking exceptions
2025-08-14 11:45:30,817:INFO:Preloading libraries
2025-08-14 11:45:30,817:INFO:Set up data.
2025-08-14 11:45:30,820:INFO:Set up index.
2025-08-14 17:54:04,230:INFO:Initializing predict_model()
2025-08-14 17:54:04,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6734c0d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff67191440>)
2025-08-14 17:54:04,232:INFO:Checking exceptions
2025-08-14 17:54:04,232:INFO:Preloading libraries
2025-08-14 17:54:04,233:INFO:Set up data.
2025-08-14 17:54:04,239:INFO:Set up index.
2025-08-14 17:54:04,247:INFO:Initializing predict_model()
2025-08-14 17:54:04,247:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0xffff6ee83010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Ancho...
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['actor_profile'],
                                    transformer=OneHotEncoder(cols=['actor_profile'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0xffff67bd5760>)
2025-08-14 17:54:04,247:INFO:Checking exceptions
2025-08-14 17:54:04,247:INFO:Preloading libraries
2025-08-14 17:54:04,247:INFO:Set up data.
2025-08-14 17:54:04,250:INFO:Set up index.
2025-08-14 17:54:04,874:INFO:Initializing predict_model()
2025-08-14 17:54:04,875:INFO:predict_model(self=<pycaret.clustering.oop.ClusteringExperiment object at 0xffffb7c997d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['SSLfinal_State', 'Prefix_Suffix',
                                             'Shortining_Service',
                                             'having_IP_Address', 'URL_Length',
                                             'Subdomain_Level', 'age_of_domain',
                                             'DNSRecord',
                                             'has_political_keyword', 'Iframe',
                                             'URL_of_Anchor'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model', KMeans(n_clusters=3, random_state=42))]), ml_usecase=None)
2025-08-14 17:54:04,875:INFO:Set up data.
